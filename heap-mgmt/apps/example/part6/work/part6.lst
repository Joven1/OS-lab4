 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 181
    4                      ; Text size: 4376
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  48656c6c	.ascii "Hello! I am process (%d)\n\000"
   85  00003038  6f212049	
   85  0000303c  20616d20	
   85  00003040  70726f63	
   85  00003044  65737320	
   85  00003048  28256429	
   85  0000304c  0a00    	
   86  0000304e          	.align 2
   87  00003050          	LC2_LF0:
   88  00003050  48656c6c	.ascii "Hello! I am now exiting as process (%d)\n\000"
   88  00003054  6f212049	
   88  00003058  20616d20	
   88  0000305c  6e6f7720	
   88  00003060  65786974	
   88  00003064  696e6720	
   88  00003068  61732070	
   88  0000306c  726f6365	
   88  00003070  73732028	
   88  00003074  2564290a	
   88  00003078  00      	
   89  00003079          	.align 2
   90  0000307c          	LC3_LF0:
   91  0000307c  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003080  6f5f776f	
   91  00003084  726c6420	
   91  00003088  28256429	
   91  0000308c  3a204261	
   91  00003090  64207365	
   91  00003094  6d617068	
   91  00003098  6f726520	
   91  0000309c  735f7072	
   91  000030a0  6f63735f	
   91  000030a4  636f6d70	
   91  000030a8  6c657465	
   91  000030ac  64202825	
   91  000030b0  6429210a	
   91  000030b4  00      	
   92  000030b5          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c001020	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L22_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c00013c	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c00023c	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L22_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000ad0	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011820	add	r3,r0,r1
  129  0000114c  0c00010c	jal	_getpid
  130  00001150  54000000	nop; not filled.
  131  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  132  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  133  0000115c  afa40000	sw	(r29),r4
  134  00001160  afa10004	sw	4(r29),r1
  135  00001164  0c0000e8	jal	_Printf
  136  00001168  54000000	nop; not filled.
  137  0000116c  20020000	addi	r2,r0,#0
  138  00001170  23bd0010	addi	r29,r29,#16
  139  00001174  3c1f000f	lhi	r31,#15
  140  00001178  27ff423f	addui	r31,r31,#16959
  141  0000117c          	L25_LF0:
  142  0000117c  20420001	addi	r2,r2,#1
  143  00001180  005f082c	sle	r1,r2,r31
  144  00001184  1420fff4	bnez	r1,L25_LF0
  145  00001188  54000000	nop; not filled.
  146  0000118c  0c0000cc	jal	_getpid
  147  00001190  54000000	nop; not filled.
  148  00001194  23bdfff8	addi	r29,r29,#-8
  149  00001198  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  150  0000119c  24843050	addui	r4,r4,(LC2_LF0)&0xffff
  151  000011a0  afa40000	sw	(r29),r4
  152  000011a4  afa10004	sw	4(r29),r1
  153  000011a8  0c0000a4	jal	_Printf
  154  000011ac  54000000	nop; not filled.
  155  000011b0  afa30000	sw	(r29),r3
  156  000011b4  0c0000ec	jal	_sem_signal
  157  000011b8  54000000	nop; not filled.
  158  000011bc  23bd0008	addi	r29,r29,#8
  159  000011c0  64210001	snei	r1,r1,#1
  160  000011c4  10200038	beqz	r1,L28_LF0
  161  000011c8  54000000	nop; not filled.
  162  000011cc  0c00008c	jal	_getpid
  163  000011d0  54000000	nop; not filled.
  164  000011d4  23bdfff0	addi	r29,r29,#-16
  165  000011d8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  166  000011dc  2484307c	addui	r4,r4,(LC3_LF0)&0xffff
  167  000011e0  afa40000	sw	(r29),r4
  168  000011e4  afa10004	sw	4(r29),r1
  169  000011e8  afa30008	sw	8(r29),r3
  170  000011ec  0c000060	jal	_Printf
  171  000011f0  54000000	nop; not filled.
  172  000011f4  0c000160	jal	_Exit
  173  000011f8  54000000	nop; not filled.
  174  000011fc  23bd0010	addi	r29,r29,#16
  175  00001200          	L28_LF0:
  176  00001200  0c000f00	jal	_exit
  177  00001204  54000000	nop
  178  00001208          	.endproc _main
  179                      ;;;
  180                      ;;; Stub functions for DLX traps.
  181                      ;;;
  182                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  183                      ;;;
  184                      ;;; The traps such as Open and Close
  185                      ;;; (note the capital letters) are for use by user programs.  The traps
  186                      ;;; with names such as open and close (lower case) are for use by the OS.
  187                      ;;;
  190  00001208          	.align 2
  192                      ;;; The following are the traps to be used by user-level programs
  193                      ;;;
  195  00001208          	.align 2
  196  00001208          	.proc _Open
  197  00001208          	.global _Open
  198  00001208          	_Open:
  199                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  200                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  201                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  202  00001208  44000213	trap	#0x213
  203  0000120c  4be00000	jr	r31
  204  00001210  54000000	nop
  205  00001214          	.endproc _Open
  207  00001214          	.proc _Close
  208  00001214          	.global _Close
  209  00001214          	_Close:
  210  00001214  44000214	trap	#0x214
  211  00001218  4be00000	jr	r31
  212  0000121c  54000000	nop
  213  00001220          	.endproc _Close
  215  00001220          	.proc _Read
  216  00001220          	.global _Read
  217  00001220          	_Read:
  218  00001220  44000210	trap	#0x210
  219  00001224  4be00000	jr	r31
  220  00001228  54000000	nop
  221  0000122c          	.endproc _Read
  223  0000122c          	.proc _Write
  224  0000122c          	.global _Write
  225  0000122c          	_Write:
  226  0000122c  44000211	trap	#0x211
  227  00001230  4be00000	jr	r31
  228  00001234  54000000	nop
  229  00001238          	.endproc _Write
  231  00001238          	.proc _Lseek
  232  00001238          	.global _Lseek
  233  00001238          	_Lseek:
  234  00001238  44000212	trap	#0x212
  235  0000123c  4be00000	jr	r31
  236  00001240  54000000	nop
  237  00001244          	.endproc _Lseek
  239  00001244          	.proc _Putchar
  240  00001244          	.global _Putchar
  241  00001244          	_Putchar:
  242  00001244  44000280	trap	#0x280
  243  00001248  4be00000	jr	r31
  244  0000124c  54000000	nop
  245  00001250          	.endproc _Putchar
  247  00001250          	.proc _Printf
  248  00001250          	.global _Printf
  249  00001250          	_Printf:
  250  00001250  44000201	trap	#0x201
  251  00001254  4be00000	jr	r31
  252  00001258  54000000	nop
  253  0000125c          	.endproc _Printf
  255  0000125c          	.proc _getpid
  256  0000125c          	.global _getpid
  257  0000125c          	_getpid:
  258  0000125c  44000431	trap	#0x431
  259  00001260  4be00000	jr	r31
  260  00001264  54000000	nop
  261  00001268          	.endproc _getpid
  263  00001268          	.proc _process_create
  264  00001268          	.global _process_create
  265  00001268          	_process_create:
  266  00001268  44000432	trap	#0x432
  267  0000126c  4be00000	jr	r31
  268  00001270  54000000	nop
  269  00001274          	.endproc _process_create
  271  00001274          	.proc _shmget
  272  00001274          	.global _shmget
  273  00001274          	_shmget:
  274  00001274  44000440	trap	#0x440
  275  00001278  4be00000	jr	r31
  276  0000127c  54000000	nop
  277  00001280          	.endproc _shmget
  279  00001280          	.proc _shmat
  280  00001280          	.global _shmat
  281  00001280          	_shmat:
  282  00001280  44000441	trap	#0x441
  283  00001284  4be00000	jr	r31
  284  00001288  54000000	nop
  285  0000128c          	.endproc _shmat
  287  0000128c          	.proc _sem_create
  288  0000128c          	.global _sem_create
  289  0000128c          	_sem_create:
  290  0000128c  44000450	trap	#0x450
  291  00001290  4be00000	jr	r31
  292  00001294  54000000	nop
  293  00001298          	.endproc _sem_create
  295  00001298          	.proc _sem_wait
  296  00001298          	.global _sem_wait
  297  00001298          	_sem_wait:
  298  00001298  44000451	trap	#0x451
  299  0000129c  4be00000	jr	r31
  300  000012a0  54000000	nop
  301  000012a4          	.endproc _sem_wait
  303  000012a4          	.proc _sem_signal
  304  000012a4          	.global _sem_signal
  305  000012a4          	_sem_signal:
  306  000012a4  44000452	trap	#0x452
  307  000012a8  4be00000	jr	r31
  308  000012ac  54000000	nop
  309  000012b0          	.endproc _sem_signal
  311  000012b0          	.proc _lock_create
  312  000012b0          	.global _lock_create
  313  000012b0          	_lock_create:
  314  000012b0  44000453	trap	#0x453
  315  000012b4  4be00000	jr	r31
  316  000012b8  54000000	nop
  317  000012bc          	.endproc _lock_create
  319  000012bc          	.proc _lock_acquire
  320  000012bc          	.global _lock_acquire
  321  000012bc          	_lock_acquire:
  322  000012bc  44000454	trap	#0x454
  323  000012c0  4be00000	jr	r31
  324  000012c4  54000000	nop
  325  000012c8          	.endproc _lock_acquire
  327  000012c8          	.proc _lock_release
  328  000012c8          	.global _lock_release
  329  000012c8          	_lock_release:
  330  000012c8  44000455	trap	#0x455
  331  000012cc  4be00000	jr	r31
  332  000012d0  54000000	nop
  333  000012d4          	.endproc _lock_release
  335  000012d4          	.proc _cond_create
  336  000012d4          	.global _cond_create
  337  000012d4          	_cond_create:
  338  000012d4  44000456	trap	#0x456
  339  000012d8  4be00000	jr	r31
  340  000012dc  54000000	nop
  341  000012e0          	.endproc _cond_create
  343  000012e0          	.proc _cond_wait
  344  000012e0          	.global _cond_wait
  345  000012e0          	_cond_wait:
  346  000012e0  44000457	trap	#0x457
  347  000012e4  4be00000	jr	r31
  348  000012e8  54000000	nop
  349  000012ec          	.endproc _cond_wait
  351  000012ec          	.proc _cond_signal
  352  000012ec          	.global _cond_signal
  353  000012ec          	_cond_signal:
  354  000012ec  44000458	trap	#0x458
  355  000012f0  4be00000	jr	r31
  356  000012f4  54000000	nop
  357  000012f8          	.endproc _cond_signal
  359  000012f8          	.proc _cond_broadcast
  360  000012f8          	.global _cond_broadcast
  361  000012f8          	_cond_broadcast:
  362  000012f8  44000459	trap	#0x459
  363  000012fc  4be00000	jr	r31
  364  00001300  54000000	nop
  365  00001304          	.endproc _cond_broadcast
  367  00001304          	.proc _mbox_create
  368  00001304          	.global _mbox_create
  369  00001304          	_mbox_create:
  370  00001304  44000460	trap	#0x460
  371  00001308  4be00000	jr	r31
  372  0000130c  54000000	nop
  373  00001310          	.endproc _mbox_create
  375  00001310          	.proc _mbox_open
  376  00001310          	.global _mbox_open
  377  00001310          	_mbox_open:
  378  00001310  44000461	trap	#0x461
  379  00001314  4be00000	jr	r31
  380  00001318  54000000	nop
  381  0000131c          	.endproc _mbox_open
  383  0000131c          	.proc _mbox_close
  384  0000131c          	.global _mbox_close
  385  0000131c          	_mbox_close:
  386  0000131c  44000462	trap	#0x462
  387  00001320  4be00000	jr	r31
  388  00001324  54000000	nop
  389  00001328          	.endproc _mbox_close
  391  00001328          	.proc _mbox_send
  392  00001328          	.global _mbox_send
  393  00001328          	_mbox_send:
  394  00001328  44000463	trap	#0x463
  395  0000132c  4be00000	jr	r31
  396  00001330  54000000	nop
  397  00001334          	.endproc _mbox_send
  399  00001334          	.proc _mbox_recv
  400  00001334          	.global _mbox_recv
  401  00001334          	_mbox_recv:
  402  00001334  44000464	trap	#0x464
  403  00001338  4be00000	jr	r31
  404  0000133c  54000000	nop
  405  00001340          	.endproc _mbox_recv
  407  00001340          	.proc _sleep
  408  00001340          	.global _sleep
  409  00001340          	_sleep:
  410  00001340  44000465	trap	#0x465
  411  00001344  4be00000	jr	r31
  412  00001348  54000000	nop
  413  0000134c          	.endproc _sleep
  415  0000134c          	.proc _yield
  416  0000134c          	.global _yield
  417  0000134c          	_yield:
  418  0000134c  44000466	trap	#0x466
  419  00001350  4be00000	jr	r31
  420  00001354  54000000	nop
  421  00001358          	.endproc _yield
  424  00001358          	.proc _Exit
  425  00001358          	.global _Exit
  426  00001358          	_Exit:
  427  00001358  44000500	trap	#0x500
  428  0000135c  4be00000	jr	r31
  429  00001360  54000000	nop
  430  00001364          	.endproc _Exit
  433  00001364          	.proc _malloc
  434  00001364          	.global _malloc
  435  00001364          	_malloc:
  436  00001364  44000467	trap	#0x467
  437  00001368  4be00000	jr	r31
  438  0000136c          	.endproc _malloc
  441  0000136c          	.proc _mfree
  442  0000136c          	.global _mfree
  443  0000136c          	_mfree:
  444  0000136c  44000468	trap	#0x468
  445  00001370  4be00000	jr	r31
  446  00001374          	.endproc _mfree
  447                      ; Compiled by GCC
  449  00001374          	.align 2
  450  00001374          	.proc _isspace
  451  00001374          	.global _isspace
  452  00001374          	_isspace:
  453                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  454  00001374  afbefffc	sw	-4(r29),r30; push fp
  455  00001378  001df020	add	r30,r0,r29; fp = sp
  456  0000137c  afbffff8	sw	-8(r29),r31; push ret addr
  457  00001380  2fbd0018	subui	r29,r29,#24; alloc local storage
  458  00001384  afa20000	sw	0(r29),r2
  459  00001388  afa30004	sw	4(r29),r3
  460  0000138c  afa40008	sw	8(r29),r4
  461  00001390  83c20003	lb	r2,3(r30)
  462  00001394  20010000	addi	r1,r0,#0
  463  00001398  304300ff	andi	r3,r2,#0x00ff
  464  0000139c  60640020	seqi	r4,r3,#32
  465  000013a0  1480002c	bnez	r4,L3_LF2
  466  000013a4  54000000	nop; delay slot nop
  467  000013a8  304300ff	andi	r3,r2,#0x00ff
  468  000013ac  60640009	seqi	r4,r3,#9
  469  000013b0  1480001c	bnez	r4,L3_LF2
  470  000013b4  54000000	nop; delay slot nop
  471  000013b8  304300ff	andi	r3,r2,#0x00ff
  472  000013bc  6064000a	seqi	r4,r3,#10
  473  000013c0  1480000c	bnez	r4,L3_LF2
  474  000013c4  54000000	nop; delay slot nop
  475  000013c8  08000008	j	L2_LF2
  476  000013cc  54000000	nop; delay slot nop
  477  000013d0          	L3_LF2:
  478  000013d0  20010001	addi	r1,r0,#1
  479  000013d4          	L2_LF2:
  480  000013d4  08000004	j	L1_LF2
  481  000013d8  54000000	nop; delay slot nop
  482  000013dc          	L1_LF2:
  483  000013dc  8fa20000	lw	r2,0(r29)
  484  000013e0  8fa30004	lw	r3,4(r29)
  485  000013e4  8fa40008	lw	r4,8(r29)
  486  000013e8  8fdffff8	lw	r31,-8(r30)
  487  000013ec  001ee820	add	r29,r0,r30
  488  000013f0  8fdefffc	lw	r30,-4(r30)
  489  000013f4  4be00000	jr	r31
  490  000013f8  54000000	nop
  491  000013fc          	.endproc _isspace
  492  000013fc          	.align 2
  493  000013fc          	.proc _isxdigit
  494  000013fc          	.global _isxdigit
  495  000013fc          	_isxdigit:
  496                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  497  000013fc  afbefffc	sw	-4(r29),r30; push fp
  498  00001400  001df020	add	r30,r0,r29; fp = sp
  499  00001404  afbffff8	sw	-8(r29),r31; push ret addr
  500  00001408  2fbd0018	subui	r29,r29,#24; alloc local storage
  501  0000140c  afa20000	sw	0(r29),r2
  502  00001410  afa30004	sw	4(r29),r3
  503  00001414  afa40008	sw	8(r29),r4
  504  00001418  83c20003	lb	r2,3(r30)
  505  0000141c  20010000	addi	r1,r0,#0
  506  00001420  304300ff	andi	r3,r2,#0x00ff
  507  00001424  6c64002f	sgtui	r4,r3,#47
  508  00001428  1080001c	beqz	r4,L7_LF2
  509  0000142c  54000000	nop; delay slot nop
  510  00001430  304300ff	andi	r3,r2,#0x00ff
  511  00001434  70640039	sleui	r4,r3,#57
  512  00001438  1480005c	bnez	r4,L6_LF2
  513  0000143c  54000000	nop; delay slot nop
  514  00001440  08000004	j	L7_LF2
  515  00001444  54000000	nop; delay slot nop
  516  00001448          	L7_LF2:
  517  00001448  304300ff	andi	r3,r2,#0x00ff
  518  0000144c  6c640060	sgtui	r4,r3,#96
  519  00001450  1080001c	beqz	r4,L8_LF2
  520  00001454  54000000	nop; delay slot nop
  521  00001458  304300ff	andi	r3,r2,#0x00ff
  522  0000145c  70640066	sleui	r4,r3,#102
  523  00001460  14800034	bnez	r4,L6_LF2
  524  00001464  54000000	nop; delay slot nop
  525  00001468  08000004	j	L8_LF2
  526  0000146c  54000000	nop; delay slot nop
  527  00001470          	L8_LF2:
  528  00001470  304300ff	andi	r3,r2,#0x00ff
  529  00001474  6c640040	sgtui	r4,r3,#64
  530  00001478  10800020	beqz	r4,L5_LF2
  531  0000147c  54000000	nop; delay slot nop
  532  00001480  304300ff	andi	r3,r2,#0x00ff
  533  00001484  70640041	sleui	r4,r3,#65
  534  00001488  1480000c	bnez	r4,L6_LF2
  535  0000148c  54000000	nop; delay slot nop
  536  00001490  08000008	j	L5_LF2
  537  00001494  54000000	nop; delay slot nop
  538  00001498          	L6_LF2:
  539  00001498  20010001	addi	r1,r0,#1
  540  0000149c          	L5_LF2:
  541  0000149c  08000004	j	L4_LF2
  542  000014a0  54000000	nop; delay slot nop
  543  000014a4          	L4_LF2:
  544  000014a4  8fa20000	lw	r2,0(r29)
  545  000014a8  8fa30004	lw	r3,4(r29)
  546  000014ac  8fa40008	lw	r4,8(r29)
  547  000014b0  8fdffff8	lw	r31,-8(r30)
  548  000014b4  001ee820	add	r29,r0,r30
  549  000014b8  8fdefffc	lw	r30,-4(r30)
  550  000014bc  4be00000	jr	r31
  551  000014c0  54000000	nop
  552  000014c4          	.endproc _isxdigit
  553  000014c4          	.align 2
  554  000014c4          	.proc _dstrcpy
  555  000014c4          	.global _dstrcpy
  556  000014c4          	_dstrcpy:
  557                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  558  000014c4  afbefffc	sw	-4(r29),r30; push fp
  559  000014c8  001df020	add	r30,r0,r29; fp = sp
  560  000014cc  afbffff8	sw	-8(r29),r31; push ret addr
  561  000014d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  562  000014d4  afa20000	sw	0(r29),r2
  563  000014d8  afa30004	sw	4(r29),r3
  564  000014dc  8fc10000	lw	r1,(r30)
  565  000014e0  afc1fff4	sw	-12(r30),r1
  566  000014e4          	L10_LF2:
  567  000014e4  8fc10000	lw	r1,(r30)
  568  000014e8  20220001	addi	r2,r1,#1
  569  000014ec  afc20000	sw	(r30),r2
  570  000014f0  8fc20004	lw	r2,4(r30)
  571  000014f4  20430001	addi	r3,r2,#1
  572  000014f8  afc30004	sw	4(r30),r3
  573  000014fc  80420000	lb	r2,(r2)
  574  00001500  a0220000	sb	(r1),r2
  575  00001504  a3c2fff3	sb	-13(r30),r2
  576  00001508          	L12_LF2:
  577  00001508  93c1fff3	lbu	r1,-13(r30)
  578  0000150c  64220000	snei	r2,r1,#0
  579  00001510  1440000c	bnez	r2,L13_LF2
  580  00001514  54000000	nop; delay slot nop
  581  00001518  0800000c	j	L11_LF2
  582  0000151c  54000000	nop; delay slot nop
  583  00001520          	L13_LF2:
  584  00001520  0bffffc0	j	L10_LF2
  585  00001524  54000000	nop; delay slot nop
  586  00001528          	L11_LF2:
  587  00001528  8fc1fff4	lw	r1,-12(r30)
  588  0000152c  08000004	j	L9_LF2
  589  00001530  54000000	nop; delay slot nop
  590  00001534          	L9_LF2:
  591  00001534  8fa20000	lw	r2,0(r29)
  592  00001538  8fa30004	lw	r3,4(r29)
  593  0000153c  8fdffff8	lw	r31,-8(r30)
  594  00001540  001ee820	add	r29,r0,r30
  595  00001544  8fdefffc	lw	r30,-4(r30)
  596  00001548  4be00000	jr	r31
  597  0000154c  54000000	nop
  598  00001550          	.endproc _dstrcpy
  599  00001550          	.align 2
  600  00001550          	.proc _dstrncpy
  601  00001550          	.global _dstrncpy
  602  00001550          	_dstrncpy:
  603                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  604  00001550  afbefffc	sw	-4(r29),r30; push fp
  605  00001554  001df020	add	r30,r0,r29; fp = sp
  606  00001558  afbffff8	sw	-8(r29),r31; push ret addr
  607  0000155c  2fbd0018	subui	r29,r29,#24; alloc local storage
  608  00001560  afa20000	sw	0(r29),r2
  609  00001564  afa30004	sw	4(r29),r3
  610  00001568  8fc10000	lw	r1,(r30)
  611  0000156c  afc1fff4	sw	-12(r30),r1
  612  00001570          	L15_LF2:
  613  00001570  8fc10008	lw	r1,8(r30)
  614  00001574  2022ffff	addi	r2,r1,#-1
  615  00001578  afc20008	sw	8(r30),r2
  616  0000157c  70210000	slei	r1,r1,#0
  617  00001580  1020000c	beqz	r1,L18_LF2
  618  00001584  54000000	nop; delay slot nop
  619  00001588  08000048	j	L16_LF2
  620  0000158c  54000000	nop; delay slot nop
  621  00001590          	L18_LF2:
  622  00001590  8fc10000	lw	r1,(r30)
  623  00001594  20220001	addi	r2,r1,#1
  624  00001598  afc20000	sw	(r30),r2
  625  0000159c  8fc20004	lw	r2,4(r30)
  626  000015a0  20430001	addi	r3,r2,#1
  627  000015a4  afc30004	sw	4(r30),r3
  628  000015a8  80420000	lb	r2,(r2)
  629  000015ac  a0220000	sb	(r1),r2
  630  000015b0  a3c2fff3	sb	-13(r30),r2
  631  000015b4          	L17_LF2:
  632  000015b4  93c1fff3	lbu	r1,-13(r30)
  633  000015b8  64220000	snei	r2,r1,#0
  634  000015bc  1440000c	bnez	r2,L19_LF2
  635  000015c0  54000000	nop; delay slot nop
  636  000015c4  0800000c	j	L16_LF2
  637  000015c8  54000000	nop; delay slot nop
  638  000015cc          	L19_LF2:
  639  000015cc  0bffffa0	j	L15_LF2
  640  000015d0  54000000	nop; delay slot nop
  641  000015d4          	L16_LF2:
  642  000015d4  8fc1fff4	lw	r1,-12(r30)
  643  000015d8  08000004	j	L14_LF2
  644  000015dc  54000000	nop; delay slot nop
  645  000015e0          	L14_LF2:
  646  000015e0  8fa20000	lw	r2,0(r29)
  647  000015e4  8fa30004	lw	r3,4(r29)
  648  000015e8  8fdffff8	lw	r31,-8(r30)
  649  000015ec  001ee820	add	r29,r0,r30
  650  000015f0  8fdefffc	lw	r30,-4(r30)
  651  000015f4  4be00000	jr	r31
  652  000015f8  54000000	nop
  653  000015fc          	.endproc _dstrncpy
  654  000015fc          	.align 2
  655  000015fc          	.proc _dstrcat
  656  000015fc          	.global _dstrcat
  657  000015fc          	_dstrcat:
  658                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  659  000015fc  afbefffc	sw	-4(r29),r30; push fp
  660  00001600  001df020	add	r30,r0,r29; fp = sp
  661  00001604  afbffff8	sw	-8(r29),r31; push ret addr
  662  00001608  2fbd0018	subui	r29,r29,#24; alloc local storage
  663  0000160c  afa20000	sw	0(r29),r2
  664  00001610  8fc10000	lw	r1,(r30)
  665  00001614  afc1fff4	sw	-12(r30),r1
  666  00001618          	L21_LF2:
  667  00001618  8fc10000	lw	r1,(r30)
  668  0000161c  90220000	lbu	r2,(r1)
  669  00001620  64410000	snei	r1,r2,#0
  670  00001624  1420000c	bnez	r1,L23_LF2
  671  00001628  54000000	nop; delay slot nop
  672  0000162c  0800001c	j	L22_LF2
  673  00001630  54000000	nop; delay slot nop
  674  00001634          	L23_LF2:
  675  00001634  8fc20000	lw	r2,(r30)
  676  00001638  20410001	addi	r1,r2,#1
  677  0000163c  00011020	add	r2,r0,r1
  678  00001640  afc20000	sw	(r30),r2
  679  00001644  0bffffd0	j	L21_LF2
  680  00001648  54000000	nop; delay slot nop
  681  0000164c          	L22_LF2:
  682  0000164c  23bdfff8	addi	r29,r29,#-8
  683  00001650  001d0820	add	r1,r0,r29
  684  00001654  8fc20000	lw	r2,(r30)
  685  00001658  ac220000	sw	(r1),r2
  686  0000165c  8fc20004	lw	r2,4(r30)
  687  00001660  ac220004	sw	4(r1),r2
  688  00001664  0ffffe5c	jal	_dstrcpy
  689  00001668  54000000	nop; delay slot nop
  690  0000166c  23bd0008	addi	r29,r29,#8
  691  00001670  8fc1fff4	lw	r1,-12(r30)
  692  00001674  08000004	j	L20_LF2
  693  00001678  54000000	nop; delay slot nop
  694  0000167c          	L20_LF2:
  695  0000167c  8fa20000	lw	r2,0(r29)
  696  00001680  8fdffff8	lw	r31,-8(r30)
  697  00001684  001ee820	add	r29,r0,r30
  698  00001688  8fdefffc	lw	r30,-4(r30)
  699  0000168c  4be00000	jr	r31
  700  00001690  54000000	nop
  701  00001694          	.endproc _dstrcat
  702  00001694          	.align 2
  703  00001694          	.proc _dstrncmp
  704  00001694          	.global _dstrncmp
  705  00001694          	_dstrncmp:
  706                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  707  00001694  afbefffc	sw	-4(r29),r30; push fp
  708  00001698  001df020	add	r30,r0,r29; fp = sp
  709  0000169c  afbffff8	sw	-8(r29),r31; push ret addr
  710  000016a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  711  000016a4  afa20000	sw	0(r29),r2
  712  000016a8  afa30004	sw	4(r29),r3
  713  000016ac  54000000	nop
  714  000016b0  20010000	addi	r1,r0,#0
  715  000016b4  afc1fff4	sw	-12(r30),r1
  716  000016b8          	L25_LF2:
  717  000016b8  8fc1fff4	lw	r1,-12(r30)
  718  000016bc  8fc20008	lw	r2,8(r30)
  719  000016c0  0022082a	slt	r1,r1,r2
  720  000016c4  1420000c	bnez	r1,L28_LF2
  721  000016c8  54000000	nop; delay slot nop
  722  000016cc  08000088	j	L26_LF2
  723  000016d0  54000000	nop; delay slot nop
  724  000016d4          	L28_LF2:
  725  000016d4  8fc10004	lw	r1,4(r30)
  726  000016d8  90220000	lbu	r2,(r1)
  727  000016dc  64410000	snei	r1,r2,#0
  728  000016e0  14200018	bnez	r1,L29_LF2
  729  000016e4  54000000	nop; delay slot nop
  730  000016e8  20010000	addi	r1,r0,#0
  731  000016ec  080000d8	j	L24_LF2
  732  000016f0  54000000	nop; delay slot nop
  733  000016f4  08000028	j	L30_LF2
  734  000016f8  54000000	nop; delay slot nop
  735  000016fc          	L29_LF2:
  736  000016fc  8fc10000	lw	r1,(r30)
  737  00001700  8fc20004	lw	r2,4(r30)
  738  00001704  90210000	lbu	r1,(r1)
  739  00001708  90420000	lbu	r2,(r2)
  740  0000170c  00220829	sne	r1,r1,r2
  741  00001710  1020000c	beqz	r1,L30_LF2
  742  00001714  54000000	nop; delay slot nop
  743  00001718  0800003c	j	L26_LF2
  744  0000171c  54000000	nop; delay slot nop
  745  00001720          	L31_LF2:
  746  00001720          	L30_LF2:
  747  00001720  8fc20000	lw	r2,(r30)
  748  00001724  20410001	addi	r1,r2,#1
  749  00001728  00011020	add	r2,r0,r1
  750  0000172c  afc20000	sw	(r30),r2
  751  00001730  8fc20004	lw	r2,4(r30)
  752  00001734  20410001	addi	r1,r2,#1
  753  00001738  00011020	add	r2,r0,r1
  754  0000173c  afc20004	sw	4(r30),r2
  755  00001740          	L27_LF2:
  756  00001740  8fc2fff4	lw	r2,-12(r30)
  757  00001744  20410001	addi	r1,r2,#1
  758  00001748  00011020	add	r2,r0,r1
  759  0000174c  afc2fff4	sw	-12(r30),r2
  760  00001750  0bffff64	j	L25_LF2
  761  00001754  54000000	nop; delay slot nop
  762  00001758          	L26_LF2:
  763  00001758  8fc1fff4	lw	r1,-12(r30)
  764  0000175c  8fc20008	lw	r2,8(r30)
  765  00001760  00220828	seq	r1,r1,r2
  766  00001764  10200018	beqz	r1,L32_LF2
  767  00001768  54000000	nop; delay slot nop
  768  0000176c  20010000	addi	r1,r0,#0
  769  00001770  08000054	j	L24_LF2
  770  00001774  54000000	nop; delay slot nop
  771  00001778  0800004c	j	L33_LF2
  772  0000177c  54000000	nop; delay slot nop
  773  00001780          	L32_LF2:
  774  00001780  8fc20000	lw	r2,(r30)
  775  00001784  90410000	lbu	r1,(r2)
  776  00001788  8fc20004	lw	r2,4(r30)
  777  0000178c  90430000	lbu	r3,(r2)
  778  00001790  00230822	sub	r1,r1,r3
  779  00001794  74220000	sgei	r2,r1,#0
  780  00001798  10400020	beqz	r2,L34_LF2
  781  0000179c  54000000	nop; delay slot nop
  782  000017a0  8fc10000	lw	r1,(r30)
  783  000017a4  8fc20004	lw	r2,4(r30)
  784  000017a8  90210000	lbu	r1,(r1)
  785  000017ac  90420000	lbu	r2,(r2)
  786  000017b0  00220829	sne	r1,r1,r2
  787  000017b4  08000008	j	L35_LF2
  788  000017b8  54000000	nop; delay slot nop
  789  000017bc          	L34_LF2:
  790  000017bc  2001ffff	addi	r1,r0,#-1
  791  000017c0          	L35_LF2:
  792  000017c0  08000004	j	L24_LF2
  793  000017c4  54000000	nop; delay slot nop
  794  000017c8          	L33_LF2:
  795  000017c8          	L24_LF2:
  796  000017c8  8fa20000	lw	r2,0(r29)
  797  000017cc  8fa30004	lw	r3,4(r29)
  798  000017d0  8fdffff8	lw	r31,-8(r30)
  799  000017d4  001ee820	add	r29,r0,r30
  800  000017d8  8fdefffc	lw	r30,-4(r30)
  801  000017dc  4be00000	jr	r31
  802  000017e0  54000000	nop
  803  000017e4          	.endproc _dstrncmp
  804  000017e4          	.align 2
  805  000017e4          	.proc _dstrlen
  806  000017e4          	.global _dstrlen
  807  000017e4          	_dstrlen:
  808                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  809  000017e4  afbefffc	sw	-4(r29),r30; push fp
  810  000017e8  001df020	add	r30,r0,r29; fp = sp
  811  000017ec  afbffff8	sw	-8(r29),r31; push ret addr
  812  000017f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  813  000017f4  afa20000	sw	0(r29),r2
  814  000017f8  20010000	addi	r1,r0,#0
  815  000017fc  afc1fff4	sw	-12(r30),r1
  816  00001800          	L37_LF2:
  817  00001800  8fc10000	lw	r1,(r30)
  818  00001804  20220001	addi	r2,r1,#1
  819  00001808  afc20000	sw	(r30),r2
  820  0000180c  90210000	lbu	r1,(r1)
  821  00001810  64220000	snei	r2,r1,#0
  822  00001814  1440000c	bnez	r2,L39_LF2
  823  00001818  54000000	nop; delay slot nop
  824  0000181c  0800001c	j	L38_LF2
  825  00001820  54000000	nop; delay slot nop
  826  00001824          	L39_LF2:
  827  00001824  8fc2fff4	lw	r2,-12(r30)
  828  00001828  20410001	addi	r1,r2,#1
  829  0000182c  00011020	add	r2,r0,r1
  830  00001830  afc2fff4	sw	-12(r30),r2
  831  00001834  0bffffc8	j	L37_LF2
  832  00001838  54000000	nop; delay slot nop
  833  0000183c          	L38_LF2:
  834  0000183c  8fc1fff4	lw	r1,-12(r30)
  835  00001840  08000004	j	L36_LF2
  836  00001844  54000000	nop; delay slot nop
  837  00001848          	L36_LF2:
  838  00001848  8fa20000	lw	r2,0(r29)
  839  0000184c  8fdffff8	lw	r31,-8(r30)
  840  00001850  001ee820	add	r29,r0,r30
  841  00001854  8fdefffc	lw	r30,-4(r30)
  842  00001858  4be00000	jr	r31
  843  0000185c  54000000	nop
  844  00001860          	.endproc _dstrlen
  845  00001860          	.align 2
  846  00001860          	.proc _dstrstr
  847  00001860          	.global _dstrstr
  848  00001860          	_dstrstr:
  849                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  850  00001860  afbefffc	sw	-4(r29),r30; push fp
  851  00001864  001df020	add	r30,r0,r29; fp = sp
  852  00001868  afbffff8	sw	-8(r29),r31; push ret addr
  853  0000186c  2fbd0018	subui	r29,r29,#24; alloc local storage
  854  00001870  afa20000	sw	0(r29),r2
  855  00001874  23bdfff8	addi	r29,r29,#-8
  856  00001878  001d0820	add	r1,r0,r29
  857  0000187c  8fc20004	lw	r2,4(r30)
  858  00001880  ac220000	sw	(r1),r2
  859  00001884  0fffff5c	jal	_dstrlen
  860  00001888  54000000	nop; delay slot nop
  861  0000188c  23bd0008	addi	r29,r29,#8
  862  00001890  afc1fff4	sw	-12(r30),r1
  863  00001894          	L41_LF2:
  864  00001894  8fc10000	lw	r1,(r30)
  865  00001898  90220000	lbu	r2,(r1)
  866  0000189c  64410000	snei	r1,r2,#0
  867  000018a0  1420000c	bnez	r1,L43_LF2
  868  000018a4  54000000	nop; delay slot nop
  869  000018a8  08000060	j	L42_LF2
  870  000018ac  54000000	nop; delay slot nop
  871  000018b0          	L43_LF2:
  872  000018b0  23bdfff0	addi	r29,r29,#-16
  873  000018b4  001d0820	add	r1,r0,r29
  874  000018b8  8fc20000	lw	r2,(r30)
  875  000018bc  ac220000	sw	(r1),r2
  876  000018c0  8fc20004	lw	r2,4(r30)
  877  000018c4  ac220004	sw	4(r1),r2
  878  000018c8  8fc2fff4	lw	r2,-12(r30)
  879  000018cc  ac220008	sw	8(r1),r2
  880  000018d0  0ffffdc0	jal	_dstrncmp
  881  000018d4  54000000	nop; delay slot nop
  882  000018d8  23bd0010	addi	r29,r29,#16
  883  000018dc  64220000	snei	r2,r1,#0
  884  000018e0  14400010	bnez	r2,L44_LF2
  885  000018e4  54000000	nop; delay slot nop
  886  000018e8  8fc10000	lw	r1,(r30)
  887  000018ec  08000028	j	L40_LF2
  888  000018f0  54000000	nop; delay slot nop
  889  000018f4          	L44_LF2:
  890  000018f4  8fc20000	lw	r2,(r30)
  891  000018f8  20410001	addi	r1,r2,#1
  892  000018fc  00011020	add	r2,r0,r1
  893  00001900  afc20000	sw	(r30),r2
  894  00001904  0bffff8c	j	L41_LF2
  895  00001908  54000000	nop; delay slot nop
  896  0000190c          	L42_LF2:
  897  0000190c  20010000	addi	r1,r0,#0
  898  00001910  08000004	j	L40_LF2
  899  00001914  54000000	nop; delay slot nop
  900  00001918          	L40_LF2:
  901  00001918  8fa20000	lw	r2,0(r29)
  902  0000191c  8fdffff8	lw	r31,-8(r30)
  903  00001920  001ee820	add	r29,r0,r30
  904  00001924  8fdefffc	lw	r30,-4(r30)
  905  00001928  4be00000	jr	r31
  906  0000192c  54000000	nop
  907  00001930          	.endproc _dstrstr
  908  00001930          	.align 2
  909  00001930          	.proc _dmindex
  910  00001930          	.global _dmindex
  911  00001930          	_dmindex:
  912                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  913  00001930  afbefffc	sw	-4(r29),r30; push fp
  914  00001934  001df020	add	r30,r0,r29; fp = sp
  915  00001938  afbffff8	sw	-8(r29),r31; push ret addr
  916  0000193c  2fbd0018	subui	r29,r29,#24; alloc local storage
  917  00001940  afa20000	sw	0(r29),r2
  918  00001944  54000000	nop
  919  00001948          	L46_LF2:
  920  00001948  8fc10000	lw	r1,(r30)
  921  0000194c  90220000	lbu	r2,(r1)
  922  00001950  64410000	snei	r1,r2,#0
  923  00001954  1420000c	bnez	r1,L48_LF2
  924  00001958  54000000	nop; delay slot nop
  925  0000195c  08000070	j	L47_LF2
  926  00001960  54000000	nop; delay slot nop
  927  00001964          	L48_LF2:
  928  00001964  8fc10004	lw	r1,4(r30)
  929  00001968  afc1fff4	sw	-12(r30),r1
  930  0000196c          	L49_LF2:
  931  0000196c  8fc1fff4	lw	r1,-12(r30)
  932  00001970  90220000	lbu	r2,(r1)
  933  00001974  64410000	snei	r1,r2,#0
  934  00001978  1420000c	bnez	r1,L52_LF2
  935  0000197c  54000000	nop; delay slot nop
  936  00001980  08000044	j	L50_LF2
  937  00001984  54000000	nop; delay slot nop
  938  00001988          	L52_LF2:
  939  00001988  8fc10000	lw	r1,(r30)
  940  0000198c  8fc2fff4	lw	r2,-12(r30)
  941  00001990  90210000	lbu	r1,(r1)
  942  00001994  90420000	lbu	r2,(r2)
  943  00001998  00220828	seq	r1,r1,r2
  944  0000199c  10200010	beqz	r1,L51_LF2
  945  000019a0  54000000	nop; delay slot nop
  946  000019a4  8fc10000	lw	r1,(r30)
  947  000019a8  08000030	j	L45_LF2
  948  000019ac  54000000	nop; delay slot nop
  949  000019b0          	L53_LF2:
  950  000019b0          	L51_LF2:
  951  000019b0  8fc2fff4	lw	r2,-12(r30)
  952  000019b4  20410001	addi	r1,r2,#1
  953  000019b8  00011020	add	r2,r0,r1
  954  000019bc  afc2fff4	sw	-12(r30),r2
  955  000019c0  0bffffa8	j	L49_LF2
  956  000019c4  54000000	nop; delay slot nop
  957  000019c8          	L50_LF2:
  958  000019c8  0bffff7c	j	L46_LF2
  959  000019cc  54000000	nop; delay slot nop
  960  000019d0          	L47_LF2:
  961  000019d0  20010000	addi	r1,r0,#0
  962  000019d4  08000004	j	L45_LF2
  963  000019d8  54000000	nop; delay slot nop
  964  000019dc          	L45_LF2:
  965  000019dc  8fa20000	lw	r2,0(r29)
  966  000019e0  8fdffff8	lw	r31,-8(r30)
  967  000019e4  001ee820	add	r29,r0,r30
  968  000019e8  8fdefffc	lw	r30,-4(r30)
  969  000019ec  4be00000	jr	r31
  970  000019f0  54000000	nop
  971  000019f4          	.endproc _dmindex
  972  000019f4          	.align 2
  973  000019f4          	.proc _dindex
  974  000019f4          	.global _dindex
  975  000019f4          	_dindex:
  976                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  977  000019f4  afbefffc	sw	-4(r29),r30; push fp
  978  000019f8  001df020	add	r30,r0,r29; fp = sp
  979  000019fc  afbffff8	sw	-8(r29),r31; push ret addr
  980  00001a00  2fbd0010	subui	r29,r29,#16; alloc local storage
  981  00001a04  afa20000	sw	0(r29),r2
  982  00001a08  54000000	nop
  983  00001a0c          	L55_LF2:
  984  00001a0c  8fc10000	lw	r1,(r30)
  985  00001a10  90220000	lbu	r2,(r1)
  986  00001a14  64410000	snei	r1,r2,#0
  987  00001a18  1420000c	bnez	r1,L57_LF2
  988  00001a1c  54000000	nop; delay slot nop
  989  00001a20  08000040	j	L56_LF2
  990  00001a24  54000000	nop; delay slot nop
  991  00001a28          	L57_LF2:
  992  00001a28  8fc10000	lw	r1,(r30)
  993  00001a2c  90220000	lbu	r2,(r1)
  994  00001a30  8fc10004	lw	r1,4(r30)
  995  00001a34  00411028	seq	r2,r2,r1
  996  00001a38  10400010	beqz	r2,L58_LF2
  997  00001a3c  54000000	nop; delay slot nop
  998  00001a40  8fc10000	lw	r1,(r30)
  999  00001a44  08000028	j	L54_LF2
 1000  00001a48  54000000	nop; delay slot nop
 1001  00001a4c          	L58_LF2:
 1002  00001a4c  8fc20000	lw	r2,(r30)
 1003  00001a50  20410001	addi	r1,r2,#1
 1004  00001a54  00011020	add	r2,r0,r1
 1005  00001a58  afc20000	sw	(r30),r2
 1006  00001a5c  0bffffac	j	L55_LF2
 1007  00001a60  54000000	nop; delay slot nop
 1008  00001a64          	L56_LF2:
 1009  00001a64  20010000	addi	r1,r0,#0
 1010  00001a68  08000004	j	L54_LF2
 1011  00001a6c  54000000	nop; delay slot nop
 1012  00001a70          	L54_LF2:
 1013  00001a70  8fa20000	lw	r2,0(r29)
 1014  00001a74  8fdffff8	lw	r31,-8(r30)
 1015  00001a78  001ee820	add	r29,r0,r30
 1016  00001a7c  8fdefffc	lw	r30,-4(r30)
 1017  00001a80  4be00000	jr	r31
 1018  00001a84  54000000	nop
 1019  00001a88          	.endproc _dindex
 1020  00001a88          	.align 2
 1021  00001a88          	.proc _ditoa
 1022  00001a88          	.global _ditoa
 1023  00001a88          	_ditoa:
 1024                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1025  00001a88  afbefffc	sw	-4(r29),r30; push fp
 1026  00001a8c  001df020	add	r30,r0,r29; fp = sp
 1027  00001a90  afbffff8	sw	-8(r29),r31; push ret addr
 1028  00001a94  2fbd0018	subui	r29,r29,#24; alloc local storage
 1029  00001a98  afa20000	sw	0(r29),r2
 1030  00001a9c  afa30004	sw	4(r29),r3
 1031  00001aa0  8fc10000	lw	r1,(r30)
 1032  00001aa4  68220000	slti	r2,r1,#0
 1033  00001aa8  1040002c	beqz	r2,L60_LF2
 1034  00001aac  54000000	nop; delay slot nop
 1035  00001ab0  8fc10004	lw	r1,4(r30)
 1036  00001ab4  20220001	addi	r2,r1,#1
 1037  00001ab8  afc20004	sw	4(r30),r2
 1038  00001abc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1039  00001ac0  a0220000	sb	(r1),r2
 1040  00001ac4  8fc10000	lw	r1,(r30)
 1041  00001ac8  00011022	sub	r2,r0,r1
 1042  00001acc  afc20000	sw	(r30),r2
 1043  00001ad0  08000118	j	L61_LF2
 1044  00001ad4  54000000	nop; delay slot nop
 1045  00001ad8          	L60_LF2:
 1046  00001ad8  8fc10000	lw	r1,(r30)
 1047  00001adc  64220000	snei	r2,r1,#0
 1048  00001ae0  14400020	bnez	r2,L62_LF2
 1049  00001ae4  54000000	nop; delay slot nop
 1050  00001ae8  8fc10004	lw	r1,4(r30)
 1051  00001aec  20220001	addi	r2,r1,#1
 1052  00001af0  afc20004	sw	4(r30),r2
 1053  00001af4  20020030	addi	r2,r0,(#0x30)&0xff
 1054  00001af8  a0220000	sb	(r1),r2
 1055  00001afc  080000ec	j	L61_LF2
 1056  00001b00  54000000	nop; delay slot nop
 1057  00001b04          	L62_LF2:
 1058  00001b04  20010001	addi	r1,r0,#1
 1059  00001b08  afc1fff4	sw	-12(r30),r1
 1060  00001b0c          	L64_LF2:
 1061  00001b0c  8fc1fff4	lw	r1,-12(r30)
 1062  00001b10  8fc20000	lw	r2,(r30)
 1063  00001b14  0022082c	sle	r1,r1,r2
 1064  00001b18  1420000c	bnez	r1,L66_LF2
 1065  00001b1c  54000000	nop; delay slot nop
 1066  00001b20  08000024	j	L65_LF2
 1067  00001b24  54000000	nop; delay slot nop
 1068  00001b28          	L67_LF2:
 1069  00001b28          	L66_LF2:
 1070  00001b28  8fc1fff4	lw	r1,-12(r30)
 1071  00001b2c  00011820	add	r3,r0,r1
 1072  00001b30  50620002	slli	r2,r3,#0x2
 1073  00001b34  00411020	add	r2,r2,r1
 1074  00001b38  50410001	slli	r1,r2,#0x1
 1075  00001b3c  afc1fff4	sw	-12(r30),r1
 1076  00001b40  0bffffc8	j	L64_LF2
 1077  00001b44  54000000	nop; delay slot nop
 1078  00001b48          	L65_LF2:
 1079  00001b48  54000000	nop
 1080  00001b4c          	L68_LF2:
 1081  00001b4c  8fc1fff4	lw	r1,-12(r30)
 1082  00001b50  2002000a	addi	r2,r0,#10
 1083  00001b54  00200035	movi2fp	f0,r1
 1084  00001b58  00400835	movi2fp	f1,r2
 1085  00001b5c  0401000f	div	f0,f0,f1
 1086  00001b60  00000834	movfp2i	r1,f0
 1087  00001b64  afc1fff4	sw	-12(r30),r1
 1088  00001b68  8fc10004	lw	r1,4(r30)
 1089  00001b6c  20220001	addi	r2,r1,#1
 1090  00001b70  afc20004	sw	4(r30),r2
 1091  00001b74  8fc20000	lw	r2,(r30)
 1092  00001b78  8fc3fff4	lw	r3,-12(r30)
 1093  00001b7c  00400035	movi2fp	f0,r2
 1094  00001b80  00600835	movi2fp	f1,r3
 1095  00001b84  0401000f	div	f0,f0,f1
 1096  00001b88  00001034	movfp2i	r2,f0
 1097  00001b8c  00021820	add	r3,r0,r2
 1098  00001b90  20620030	addi	r2,r3,#48
 1099  00001b94  a0220000	sb	(r1),r2
 1100  00001b98  8fc10000	lw	r1,(r30)
 1101  00001b9c  8fc3fff4	lw	r3,-12(r30)
 1102  00001ba0  00200035	movi2fp	f0,r1
 1103  00001ba4  00600835	movi2fp	f1,r3
 1104  00001ba8  0401000f	div	f0,f0,f1
 1105  00001bac  00001034	movfp2i	r2,f0
 1106  00001bb0  8fc3fff4	lw	r3,-12(r30)
 1107  00001bb4  00400035	movi2fp	f0,r2
 1108  00001bb8  00600835	movi2fp	f1,r3
 1109  00001bbc  0401000e	mult	f0,f0,f1
 1110  00001bc0  00001034	movfp2i	r2,f0
 1111  00001bc4  00220822	sub	r1,r1,r2
 1112  00001bc8  afc10000	sw	(r30),r1
 1113  00001bcc          	L70_LF2:
 1114  00001bcc  8fc1fff4	lw	r1,-12(r30)
 1115  00001bd0  6c220001	sgti	r2,r1,#1
 1116  00001bd4  1440000c	bnez	r2,L71_LF2
 1117  00001bd8  54000000	nop; delay slot nop
 1118  00001bdc  0800000c	j	L61_LF2
 1119  00001be0  54000000	nop; delay slot nop
 1120  00001be4          	L71_LF2:
 1121  00001be4  0bffff64	j	L68_LF2
 1122  00001be8  54000000	nop; delay slot nop
 1123  00001bec          	L69_LF2:
 1124  00001bec          	L63_LF2:
 1125  00001bec          	L61_LF2:
 1126  00001bec  8fc10004	lw	r1,4(r30)
 1127  00001bf0  20020000	addi	r2,r0,(#0x0)&0xff
 1128  00001bf4  a0220000	sb	(r1),r2
 1129  00001bf8          	L59_LF2:
 1130  00001bf8  8fa20000	lw	r2,0(r29)
 1131  00001bfc  8fa30004	lw	r3,4(r29)
 1132  00001c00  8fdffff8	lw	r31,-8(r30)
 1133  00001c04  001ee820	add	r29,r0,r30
 1134  00001c08  8fdefffc	lw	r30,-4(r30)
 1135  00001c0c  4be00000	jr	r31
 1136  00001c10  54000000	nop
 1137  00001c14          	.endproc _ditoa
 1138  00001c14          	.align 2
 1139  00001c14          	.proc _dstrtol
 1140  00001c14          	.global _dstrtol
 1141  00001c14          	_dstrtol:
 1142                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1143  00001c14  afbefffc	sw	-4(r29),r30; push fp
 1144  00001c18  001df020	add	r30,r0,r29; fp = sp
 1145  00001c1c  afbffff8	sw	-8(r29),r31; push ret addr
 1146  00001c20  2fbd0020	subui	r29,r29,#32; alloc local storage
 1147  00001c24  afa20000	sw	0(r29),r2
 1148  00001c28  20010000	addi	r1,r0,#0
 1149  00001c2c  afc1fff4	sw	-12(r30),r1
 1150  00001c30          	L73_LF2:
 1151  00001c30  8fc10000	lw	r1,(r30)
 1152  00001c34  90220000	lbu	r2,(r1)
 1153  00001c38  60410020	seqi	r1,r2,#32
 1154  00001c3c  14200034	bnez	r1,L75_LF2
 1155  00001c40  54000000	nop; delay slot nop
 1156  00001c44  8fc10000	lw	r1,(r30)
 1157  00001c48  90220000	lbu	r2,(r1)
 1158  00001c4c  60410009	seqi	r1,r2,#9
 1159  00001c50  14200020	bnez	r1,L75_LF2
 1160  00001c54  54000000	nop; delay slot nop
 1161  00001c58  8fc10000	lw	r1,(r30)
 1162  00001c5c  90220000	lbu	r2,(r1)
 1163  00001c60  6041000a	seqi	r1,r2,#10
 1164  00001c64  1420000c	bnez	r1,L75_LF2
 1165  00001c68  54000000	nop; delay slot nop
 1166  00001c6c  0800001c	j	L74_LF2
 1167  00001c70  54000000	nop; delay slot nop
 1168  00001c74          	L75_LF2:
 1169  00001c74  8fc20000	lw	r2,(r30)
 1170  00001c78  20410001	addi	r1,r2,#1
 1171  00001c7c  00011020	add	r2,r0,r1
 1172  00001c80  afc20000	sw	(r30),r2
 1173  00001c84  0bffffa8	j	L73_LF2
 1174  00001c88  54000000	nop; delay slot nop
 1175  00001c8c          	L74_LF2:
 1176  00001c8c  8fc10004	lw	r1,4(r30)
 1177  00001c90  64220000	snei	r2,r1,#0
 1178  00001c94  10400010	beqz	r2,L76_LF2
 1179  00001c98  54000000	nop; delay slot nop
 1180  00001c9c  8fc10004	lw	r1,4(r30)
 1181  00001ca0  8fc20000	lw	r2,(r30)
 1182  00001ca4  ac220000	sw	(r1),r2
 1183  00001ca8          	L76_LF2:
 1184  00001ca8  8fc10000	lw	r1,(r30)
 1185  00001cac  90220000	lbu	r2,(r1)
 1186  00001cb0  64410000	snei	r1,r2,#0
 1187  00001cb4  14200010	bnez	r1,L77_LF2
 1188  00001cb8  54000000	nop; delay slot nop
 1189  00001cbc  8fc1fff4	lw	r1,-12(r30)
 1190  00001cc0  08000294	j	L72_LF2
 1191  00001cc4  54000000	nop; delay slot nop
 1192  00001cc8          	L77_LF2:
 1193  00001cc8  8fc10000	lw	r1,(r30)
 1194  00001ccc  90220000	lbu	r2,(r1)
 1195  00001cd0  6041002d	seqi	r1,r2,#45
 1196  00001cd4  10200024	beqz	r1,L78_LF2
 1197  00001cd8  54000000	nop; delay slot nop
 1198  00001cdc  2001ffff	addi	r1,r0,#-1
 1199  00001ce0  afc1ffec	sw	-20(r30),r1
 1200  00001ce4  8fc20000	lw	r2,(r30)
 1201  00001ce8  20410001	addi	r1,r2,#1
 1202  00001cec  00011020	add	r2,r0,r1
 1203  00001cf0  afc20000	sw	(r30),r2
 1204  00001cf4  0800000c	j	L79_LF2
 1205  00001cf8  54000000	nop; delay slot nop
 1206  00001cfc          	L78_LF2:
 1207  00001cfc  20010001	addi	r1,r0,#1
 1208  00001d00  afc1ffec	sw	-20(r30),r1
 1209  00001d04          	L79_LF2:
 1210  00001d04  8fc10008	lw	r1,8(r30)
 1211  00001d08  64220000	snei	r2,r1,#0
 1212  00001d0c  14400090	bnez	r2,L80_LF2
 1213  00001d10  54000000	nop; delay slot nop
 1214  00001d14  8fc10000	lw	r1,(r30)
 1215  00001d18  90220000	lbu	r2,(r1)
 1216  00001d1c  60410030	seqi	r1,r2,#48
 1217  00001d20  10200074	beqz	r1,L81_LF2
 1218  00001d24  54000000	nop; delay slot nop
 1219  00001d28  8fc20000	lw	r2,(r30)
 1220  00001d2c  20410001	addi	r1,r2,#1
 1221  00001d30  00011020	add	r2,r0,r1
 1222  00001d34  afc20000	sw	(r30),r2
 1223  00001d38  8fc10000	lw	r1,(r30)
 1224  00001d3c  90220000	lbu	r2,(r1)
 1225  00001d40  60410078	seqi	r1,r2,#120
 1226  00001d44  14200020	bnez	r1,L83_LF2
 1227  00001d48  54000000	nop; delay slot nop
 1228  00001d4c  8fc10000	lw	r1,(r30)
 1229  00001d50  90220000	lbu	r2,(r1)
 1230  00001d54  60410058	seqi	r1,r2,#88
 1231  00001d58  1420000c	bnez	r1,L83_LF2
 1232  00001d5c  54000000	nop; delay slot nop
 1233  00001d60  08000024	j	L82_LF2
 1234  00001d64  54000000	nop; delay slot nop
 1235  00001d68          	L83_LF2:
 1236  00001d68  20010010	addi	r1,r0,#16
 1237  00001d6c  afc10008	sw	8(r30),r1
 1238  00001d70  8fc20000	lw	r2,(r30)
 1239  00001d74  20410001	addi	r1,r2,#1
 1240  00001d78  00011020	add	r2,r0,r1
 1241  00001d7c  afc20000	sw	(r30),r2
 1242  00001d80  0800000c	j	L84_LF2
 1243  00001d84  54000000	nop; delay slot nop
 1244  00001d88          	L82_LF2:
 1245  00001d88  20010008	addi	r1,r0,#8
 1246  00001d8c  afc10008	sw	8(r30),r1
 1247  00001d90          	L84_LF2:
 1248  00001d90  0800000c	j	L80_LF2
 1249  00001d94  54000000	nop; delay slot nop
 1250  00001d98          	L81_LF2:
 1251  00001d98  2001000a	addi	r1,r0,#10
 1252  00001d9c  afc10008	sw	8(r30),r1
 1253  00001da0          	L85_LF2:
 1254  00001da0          	L80_LF2:
 1255  00001da0  8fc10008	lw	r1,8(r30)
 1256  00001da4  70220000	slei	r2,r1,#0
 1257  00001da8  1440001c	bnez	r2,L87_LF2
 1258  00001dac  54000000	nop; delay slot nop
 1259  00001db0  8fc10008	lw	r1,8(r30)
 1260  00001db4  6c220010	sgti	r2,r1,#16
 1261  00001db8  1440000c	bnez	r2,L87_LF2
 1262  00001dbc  54000000	nop; delay slot nop
 1263  00001dc0  08000010	j	L86_LF2
 1264  00001dc4  54000000	nop; delay slot nop
 1265  00001dc8          	L87_LF2:
 1266  00001dc8  8fc1fff4	lw	r1,-12(r30)
 1267  00001dcc  08000188	j	L72_LF2
 1268  00001dd0  54000000	nop; delay slot nop
 1269  00001dd4          	L86_LF2:
 1270  00001dd4  54000000	nop
 1271  00001dd8          	L88_LF2:
 1272  00001dd8  8fc10000	lw	r1,(r30)
 1273  00001ddc  90220000	lbu	r2,(r1)
 1274  00001de0  6c41002f	sgtui	r1,r2,#47
 1275  00001de4  10200030	beqz	r1,L91_LF2
 1276  00001de8  54000000	nop; delay slot nop
 1277  00001dec  8fc10000	lw	r1,(r30)
 1278  00001df0  90220000	lbu	r2,(r1)
 1279  00001df4  70410039	sleui	r1,r2,#57
 1280  00001df8  1020001c	beqz	r1,L91_LF2
 1281  00001dfc  54000000	nop; delay slot nop
 1282  00001e00  8fc10000	lw	r1,(r30)
 1283  00001e04  90220000	lbu	r2,(r1)
 1284  00001e08  2041ffd0	addi	r1,r2,#-48
 1285  00001e0c  afc1fff0	sw	-16(r30),r1
 1286  00001e10  0800008c	j	L92_LF2
 1287  00001e14  54000000	nop; delay slot nop
 1288  00001e18          	L91_LF2:
 1289  00001e18  8fc10000	lw	r1,(r30)
 1290  00001e1c  90220000	lbu	r2,(r1)
 1291  00001e20  6c410060	sgtui	r1,r2,#96
 1292  00001e24  10200030	beqz	r1,L93_LF2
 1293  00001e28  54000000	nop; delay slot nop
 1294  00001e2c  8fc10000	lw	r1,(r30)
 1295  00001e30  90220000	lbu	r2,(r1)
 1296  00001e34  7041007a	sleui	r1,r2,#122
 1297  00001e38  1020001c	beqz	r1,L93_LF2
 1298  00001e3c  54000000	nop; delay slot nop
 1299  00001e40  8fc10000	lw	r1,(r30)
 1300  00001e44  90220000	lbu	r2,(r1)
 1301  00001e48  2041ffa9	addi	r1,r2,#-87
 1302  00001e4c  afc1fff0	sw	-16(r30),r1
 1303  00001e50  0800004c	j	L92_LF2
 1304  00001e54  54000000	nop; delay slot nop
 1305  00001e58          	L93_LF2:
 1306  00001e58  8fc10000	lw	r1,(r30)
 1307  00001e5c  90220000	lbu	r2,(r1)
 1308  00001e60  6c410040	sgtui	r1,r2,#64
 1309  00001e64  10200030	beqz	r1,L95_LF2
 1310  00001e68  54000000	nop; delay slot nop
 1311  00001e6c  8fc10000	lw	r1,(r30)
 1312  00001e70  90220000	lbu	r2,(r1)
 1313  00001e74  7041005a	sleui	r1,r2,#90
 1314  00001e78  1020001c	beqz	r1,L95_LF2
 1315  00001e7c  54000000	nop; delay slot nop
 1316  00001e80  8fc10000	lw	r1,(r30)
 1317  00001e84  90220000	lbu	r2,(r1)
 1318  00001e88  2041ffc9	addi	r1,r2,#-55
 1319  00001e8c  afc1fff0	sw	-16(r30),r1
 1320  00001e90  0800000c	j	L92_LF2
 1321  00001e94  54000000	nop; delay slot nop
 1322  00001e98          	L95_LF2:
 1323  00001e98  200103e8	addi	r1,r0,#1000
 1324  00001e9c  afc1fff0	sw	-16(r30),r1
 1325  00001ea0          	L96_LF2:
 1326  00001ea0          	L94_LF2:
 1327  00001ea0          	L92_LF2:
 1328  00001ea0  8fc1fff0	lw	r1,-16(r30)
 1329  00001ea4  8fc20008	lw	r2,8(r30)
 1330  00001ea8  0022082a	slt	r1,r1,r2
 1331  00001eac  10200040	beqz	r1,L90_LF2
 1332  00001eb0  54000000	nop; delay slot nop
 1333  00001eb4  8fc1fff4	lw	r1,-12(r30)
 1334  00001eb8  8fc20008	lw	r2,8(r30)
 1335  00001ebc  00200035	movi2fp	f0,r1
 1336  00001ec0  00400835	movi2fp	f1,r2
 1337  00001ec4  0401000e	mult	f0,f0,f1
 1338  00001ec8  00000834	movfp2i	r1,f0
 1339  00001ecc  afc1fff4	sw	-12(r30),r1
 1340  00001ed0  8fc1fff4	lw	r1,-12(r30)
 1341  00001ed4  8fc2fff0	lw	r2,-16(r30)
 1342  00001ed8  00220820	add	r1,r1,r2
 1343  00001edc  afc1fff4	sw	-12(r30),r1
 1344  00001ee0  8fc20000	lw	r2,(r30)
 1345  00001ee4  20410001	addi	r1,r2,#1
 1346  00001ee8  00011020	add	r2,r0,r1
 1347  00001eec  afc20000	sw	(r30),r2
 1348  00001ef0          	L97_LF2:
 1349  00001ef0          	L90_LF2:
 1350  00001ef0  8fc1fff0	lw	r1,-16(r30)
 1351  00001ef4  8fc20008	lw	r2,8(r30)
 1352  00001ef8  0022082a	slt	r1,r1,r2
 1353  00001efc  1420000c	bnez	r1,L98_LF2
 1354  00001f00  54000000	nop; delay slot nop
 1355  00001f04  0800000c	j	L89_LF2
 1356  00001f08  54000000	nop; delay slot nop
 1357  00001f0c          	L98_LF2:
 1358  00001f0c  0bfffec8	j	L88_LF2
 1359  00001f10  54000000	nop; delay slot nop
 1360  00001f14          	L89_LF2:
 1361  00001f14  8fc10004	lw	r1,4(r30)
 1362  00001f18  64220000	snei	r2,r1,#0
 1363  00001f1c  10400010	beqz	r2,L99_LF2
 1364  00001f20  54000000	nop; delay slot nop
 1365  00001f24  8fc10004	lw	r1,4(r30)
 1366  00001f28  8fc20000	lw	r2,(r30)
 1367  00001f2c  ac220000	sw	(r1),r2
 1368  00001f30          	L99_LF2:
 1369  00001f30  8fc1fff4	lw	r1,-12(r30)
 1370  00001f34  8fc2ffec	lw	r2,-20(r30)
 1371  00001f38  00200035	movi2fp	f0,r1
 1372  00001f3c  00400835	movi2fp	f1,r2
 1373  00001f40  0401000e	mult	f0,f0,f1
 1374  00001f44  00000834	movfp2i	r1,f0
 1375  00001f48  afc1fff4	sw	-12(r30),r1
 1376  00001f4c  8fc1fff4	lw	r1,-12(r30)
 1377  00001f50  08000004	j	L72_LF2
 1378  00001f54  54000000	nop; delay slot nop
 1379  00001f58          	L72_LF2:
 1380  00001f58  8fa20000	lw	r2,0(r29)
 1381  00001f5c  8fdffff8	lw	r31,-8(r30)
 1382  00001f60  001ee820	add	r29,r0,r30
 1383  00001f64  8fdefffc	lw	r30,-4(r30)
 1384  00001f68  4be00000	jr	r31
 1385  00001f6c  54000000	nop
 1386  00001f70          	.endproc _dstrtol
 1387  00001f70          	.align 2
 1388  00001f70          	.proc _bcopy
 1389  00001f70          	.global _bcopy
 1390  00001f70          	_bcopy:
 1391                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1392  00001f70  afbefffc	sw	-4(r29),r30; push fp
 1393  00001f74  001df020	add	r30,r0,r29; fp = sp
 1394  00001f78  afbffff8	sw	-8(r29),r31; push ret addr
 1395  00001f7c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1396  00001f80  afa20000	sw	0(r29),r2
 1397  00001f84  afa30004	sw	4(r29),r3
 1398  00001f88  54000000	nop
 1399  00001f8c          	L101_LF2:
 1400  00001f8c  8fc10008	lw	r1,8(r30)
 1401  00001f90  2022ffff	addi	r2,r1,#-1
 1402  00001f94  afc20008	sw	8(r30),r2
 1403  00001f98  6c210000	sgti	r1,r1,#0
 1404  00001f9c  1420000c	bnez	r1,L103_LF2
 1405  00001fa0  54000000	nop; delay slot nop
 1406  00001fa4  0800002c	j	L102_LF2
 1407  00001fa8  54000000	nop; delay slot nop
 1408  00001fac          	L103_LF2:
 1409  00001fac  8fc10004	lw	r1,4(r30)
 1410  00001fb0  20220001	addi	r2,r1,#1
 1411  00001fb4  afc20004	sw	4(r30),r2
 1412  00001fb8  8fc20000	lw	r2,(r30)
 1413  00001fbc  20430001	addi	r3,r2,#1
 1414  00001fc0  afc30000	sw	(r30),r3
 1415  00001fc4  80420000	lb	r2,(r2)
 1416  00001fc8  a0220000	sb	(r1),r2
 1417  00001fcc  0bffffbc	j	L101_LF2
 1418  00001fd0  54000000	nop; delay slot nop
 1419  00001fd4          	L102_LF2:
 1420  00001fd4          	L100_LF2:
 1421  00001fd4  8fa20000	lw	r2,0(r29)
 1422  00001fd8  8fa30004	lw	r3,4(r29)
 1423  00001fdc  8fdffff8	lw	r31,-8(r30)
 1424  00001fe0  001ee820	add	r29,r0,r30
 1425  00001fe4  8fdefffc	lw	r30,-4(r30)
 1426  00001fe8  4be00000	jr	r31
 1427  00001fec  54000000	nop
 1428  00001ff0          	.endproc _bcopy
 1429  00001ff0          	.align 2
 1430  00001ff0          	.proc _bzero
 1431  00001ff0          	.global _bzero
 1432  00001ff0          	_bzero:
 1433                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1434  00001ff0  afbefffc	sw	-4(r29),r30; push fp
 1435  00001ff4  001df020	add	r30,r0,r29; fp = sp
 1436  00001ff8  afbffff8	sw	-8(r29),r31; push ret addr
 1437  00001ffc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1438  00002000  afa20000	sw	0(r29),r2
 1439  00002004  54000000	nop
 1440  00002008          	L105_LF2:
 1441  00002008  8fc10004	lw	r1,4(r30)
 1442  0000200c  2022ffff	addi	r2,r1,#-1
 1443  00002010  afc20004	sw	4(r30),r2
 1444  00002014  6c210000	sgti	r1,r1,#0
 1445  00002018  1420000c	bnez	r1,L107_LF2
 1446  0000201c  54000000	nop; delay slot nop
 1447  00002020  08000020	j	L106_LF2
 1448  00002024  54000000	nop; delay slot nop
 1449  00002028          	L107_LF2:
 1450  00002028  8fc10000	lw	r1,(r30)
 1451  0000202c  20220001	addi	r2,r1,#1
 1452  00002030  afc20000	sw	(r30),r2
 1453  00002034  20020000	addi	r2,r0,(#0x0)&0xff
 1454  00002038  a0220000	sb	(r1),r2
 1455  0000203c  0bffffc8	j	L105_LF2
 1456  00002040  54000000	nop; delay slot nop
 1457  00002044          	L106_LF2:
 1458  00002044          	L104_LF2:
 1459  00002044  8fa20000	lw	r2,0(r29)
 1460  00002048  8fdffff8	lw	r31,-8(r30)
 1461  0000204c  001ee820	add	r29,r0,r30
 1462  00002050  8fdefffc	lw	r30,-4(r30)
 1463  00002054  4be00000	jr	r31
 1464  00002058  54000000	nop
 1465  0000205c          	.endproc _bzero
 1466  0000205c          	.align 2
 1467  0000205c          	.proc _min
 1468  0000205c          	.global _min
 1469  0000205c          	_min:
 1470                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1471  0000205c  afbefffc	sw	-4(r29),r30; push fp
 1472  00002060  001df020	add	r30,r0,r29; fp = sp
 1473  00002064  afbffff8	sw	-8(r29),r31; push ret addr
 1474  00002068  2fbd0010	subui	r29,r29,#16; alloc local storage
 1475  0000206c  afa20000	sw	0(r29),r2
 1476  00002070  afa30004	sw	4(r29),r3
 1477  00002074  8fc10000	lw	r1,(r30)
 1478  00002078  8fc20004	lw	r2,4(r30)
 1479  0000207c  0022182c	sle	r3,r1,r2
 1480  00002080  14600008	bnez	r3,L109_LF2
 1481  00002084  54000000	nop; delay slot nop
 1482  00002088  8fc10004	lw	r1,4(r30)
 1483  0000208c          	L109_LF2:
 1484  0000208c  08000004	j	L108_LF2
 1485  00002090  54000000	nop; delay slot nop
 1486  00002094          	L108_LF2:
 1487  00002094  8fa20000	lw	r2,0(r29)
 1488  00002098  8fa30004	lw	r3,4(r29)
 1489  0000209c  8fdffff8	lw	r31,-8(r30)
 1490  000020a0  001ee820	add	r29,r0,r30
 1491  000020a4  8fdefffc	lw	r30,-4(r30)
 1492  000020a8  4be00000	jr	r31
 1493  000020ac  54000000	nop
 1494  000020b0          	.endproc _min
 1495  000020b0          	.align 2
 1496  000020b0          	.proc _max
 1497  000020b0          	.global _max
 1498  000020b0          	_max:
 1499                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1500  000020b0  afbefffc	sw	-4(r29),r30; push fp
 1501  000020b4  001df020	add	r30,r0,r29; fp = sp
 1502  000020b8  afbffff8	sw	-8(r29),r31; push ret addr
 1503  000020bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1504  000020c0  afa20000	sw	0(r29),r2
 1505  000020c4  afa30004	sw	4(r29),r3
 1506  000020c8  8fc10000	lw	r1,(r30)
 1507  000020cc  8fc20004	lw	r2,4(r30)
 1508  000020d0  0022182d	sge	r3,r1,r2
 1509  000020d4  14600008	bnez	r3,L111_LF2
 1510  000020d8  54000000	nop; delay slot nop
 1511  000020dc  8fc10004	lw	r1,4(r30)
 1512  000020e0          	L111_LF2:
 1513  000020e0  08000004	j	L110_LF2
 1514  000020e4  54000000	nop; delay slot nop
 1515  000020e8          	L110_LF2:
 1516  000020e8  8fa20000	lw	r2,0(r29)
 1517  000020ec  8fa30004	lw	r3,4(r29)
 1518  000020f0  8fdffff8	lw	r31,-8(r30)
 1519  000020f4  001ee820	add	r29,r0,r30
 1520  000020f8  8fdefffc	lw	r30,-4(r30)
 1521  000020fc  4be00000	jr	r31
 1522  00002100  54000000	nop
 1523  00002104          	.endproc _max
 1524                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1525                      ;;;
 1526                      ;;; Most of the traps are called in files from libtraps.
 1529  00002104          	.align 2
 1530  00002104          	.proc _exit
 1531  00002104          	.global _exit
 1532  00002104          	_exit:
 1533  00002104  44000300	trap	#0x300
 1534  00002108  4be00000	jr	r31
 1535  0000210c  54000000	nop
 1536  00002110          	.endproc _exit
 1538                      ; for the benefit of gcc.
 1539  00002110          	.proc ___main
 1540  00002110          	.global ___main
 1541  00002110          	___main:
 1542  00002110  4be00000	jr	r31
 1543  00002114  54000000	nop
 1544  00002118          	.endproc ___main
 1545  00002118          	.text
 1546  00002118          	.global _etext
 1547  00002118          	_etext:
 1548  00002118          	.align 3
 1549  00002118          	.data
 1550  000030b5          	.global _edata
 1551  000030b5          	_edata:
