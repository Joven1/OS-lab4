 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 125
    4                      ; Text size: 4304
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   85  00003038  6f5f776f	
   85  0000303c  726c6420	
   85  00003040  28256429	
   85  00003044  3a204261	
   85  00003048  64207365	
   85  0000304c  6d617068	
   85  00003050  6f726520	
   85  00003054  735f7072	
   85  00003058  6f63735f	
   85  0000305c  636f6d70	
   85  00003060  6c657465	
   85  00003064  64202825	
   85  00003068  6429210a	
   85  0000306c  00      	
   86  0000306d          	.align 2
   87  00003070          	LC2_LF0:
   88  00003070  48656c6c	.ascii "Hello World\n\000"
   88  00003074  6f20576f	
   88  00003078  726c640a	
   88  0000307c  00      	
   89  0000307d          	.text
   90  000010d4          	.align 2
   91  000010d4          	.proc _main
   92  000010d4          	.global _main
   93  000010d4          	_main:
   94                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   95  000010d4  afbefffc	sw	-4(r29),r30; push fp
   96  000010d8  001df020	add	r30,r0,r29; fp = sp
   97  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   98  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   99  000010e4  8fc20000	lw	r2,(r30)
  100  000010e8  8fc30004	lw	r3,4(r30)
  101  000010ec  0c000fd8	jal	___main
  102  000010f0  54000000	nop; not filled.
  103  000010f4  64410002	snei	r1,r2,#2
  104  000010f8  10200028	beqz	r1,L17_LF0
  105  000010fc  54000000	nop; not filled.
  106  00001100  23bdfff8	addi	r29,r29,#-8
  107  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  108  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  109  0000110c  afa40000	sw	(r29),r4
  110  00001110  0c0000f4	jal	_Printf
  111  00001114  54000000	nop; not filled.
  112  00001118  0c0001f4	jal	_Exit
  113  0000111c  54000000	nop; not filled.
  114  00001120  23bd0008	addi	r29,r29,#8
  115  00001124          	L17_LF0:
  116  00001124  23bdfff0	addi	r29,r29,#-16
  117  00001128  8c630004	lw	r3,4(r3)
  118  0000112c  afa30000	sw	(r29),r3
  119  00001130  20040000	addi	r4,r0,#0
  120  00001134  afa40004	sw	4(r29),r4
  121  00001138  2004000a	addi	r4,r0,#10
  122  0000113c  afa40008	sw	8(r29),r4
  123  00001140  0c000a88	jal	_dstrtol
  124  00001144  54000000	nop; not filled.
  125  00001148  00011020	add	r2,r0,r1
  126  0000114c  afa20000	sw	(r29),r2
  127  00001150  0c000108	jal	_sem_signal
  128  00001154  54000000	nop; not filled.
  129  00001158  23bd0010	addi	r29,r29,#16
  130  0000115c  64210001	snei	r1,r1,#1
  131  00001160  10200038	beqz	r1,L18_LF0
  132  00001164  54000000	nop; not filled.
  133  00001168  0c0000a8	jal	_getpid
  134  0000116c  54000000	nop; not filled.
  135  00001170  23bdfff0	addi	r29,r29,#-16
  136  00001174  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  137  00001178  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  138  0000117c  afa40000	sw	(r29),r4
  139  00001180  afa10004	sw	4(r29),r1
  140  00001184  afa20008	sw	8(r29),r2
  141  00001188  0c00007c	jal	_Printf
  142  0000118c  54000000	nop; not filled.
  143  00001190  0c00017c	jal	_Exit
  144  00001194  54000000	nop; not filled.
  145  00001198  23bd0010	addi	r29,r29,#16
  146  0000119c          	L18_LF0:
  147  0000119c  23bdfff8	addi	r29,r29,#-8
  148  000011a0  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  149  000011a4  24843070	addui	r4,r4,(LC2_LF0)&0xffff
  150  000011a8  afa40000	sw	(r29),r4
  151  000011ac  0c000058	jal	_Printf
  152  000011b0  54000000	nop; not filled.
  153  000011b4  23bd0008	addi	r29,r29,#8
  154  000011b8  0c000f00	jal	_exit
  155  000011bc  54000000	nop
  156  000011c0          	.endproc _main
  157                      ;;;
  158                      ;;; Stub functions for DLX traps.
  159                      ;;;
  160                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  161                      ;;;
  162                      ;;; The traps such as Open and Close
  163                      ;;; (note the capital letters) are for use by user programs.  The traps
  164                      ;;; with names such as open and close (lower case) are for use by the OS.
  165                      ;;;
  168  000011c0          	.align 2
  170                      ;;; The following are the traps to be used by user-level programs
  171                      ;;;
  173  000011c0          	.align 2
  174  000011c0          	.proc _Open
  175  000011c0          	.global _Open
  176  000011c0          	_Open:
  177                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  178                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  179                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  180  000011c0  44000213	trap	#0x213
  181  000011c4  4be00000	jr	r31
  182  000011c8  54000000	nop
  183  000011cc          	.endproc _Open
  185  000011cc          	.proc _Close
  186  000011cc          	.global _Close
  187  000011cc          	_Close:
  188  000011cc  44000214	trap	#0x214
  189  000011d0  4be00000	jr	r31
  190  000011d4  54000000	nop
  191  000011d8          	.endproc _Close
  193  000011d8          	.proc _Read
  194  000011d8          	.global _Read
  195  000011d8          	_Read:
  196  000011d8  44000210	trap	#0x210
  197  000011dc  4be00000	jr	r31
  198  000011e0  54000000	nop
  199  000011e4          	.endproc _Read
  201  000011e4          	.proc _Write
  202  000011e4          	.global _Write
  203  000011e4          	_Write:
  204  000011e4  44000211	trap	#0x211
  205  000011e8  4be00000	jr	r31
  206  000011ec  54000000	nop
  207  000011f0          	.endproc _Write
  209  000011f0          	.proc _Lseek
  210  000011f0          	.global _Lseek
  211  000011f0          	_Lseek:
  212  000011f0  44000212	trap	#0x212
  213  000011f4  4be00000	jr	r31
  214  000011f8  54000000	nop
  215  000011fc          	.endproc _Lseek
  217  000011fc          	.proc _Putchar
  218  000011fc          	.global _Putchar
  219  000011fc          	_Putchar:
  220  000011fc  44000280	trap	#0x280
  221  00001200  4be00000	jr	r31
  222  00001204  54000000	nop
  223  00001208          	.endproc _Putchar
  225  00001208          	.proc _Printf
  226  00001208          	.global _Printf
  227  00001208          	_Printf:
  228  00001208  44000201	trap	#0x201
  229  0000120c  4be00000	jr	r31
  230  00001210  54000000	nop
  231  00001214          	.endproc _Printf
  233  00001214          	.proc _getpid
  234  00001214          	.global _getpid
  235  00001214          	_getpid:
  236  00001214  44000431	trap	#0x431
  237  00001218  4be00000	jr	r31
  238  0000121c  54000000	nop
  239  00001220          	.endproc _getpid
  241  00001220          	.proc _process_create
  242  00001220          	.global _process_create
  243  00001220          	_process_create:
  244  00001220  44000432	trap	#0x432
  245  00001224  4be00000	jr	r31
  246  00001228  54000000	nop
  247  0000122c          	.endproc _process_create
  249  0000122c          	.proc _shmget
  250  0000122c          	.global _shmget
  251  0000122c          	_shmget:
  252  0000122c  44000440	trap	#0x440
  253  00001230  4be00000	jr	r31
  254  00001234  54000000	nop
  255  00001238          	.endproc _shmget
  257  00001238          	.proc _shmat
  258  00001238          	.global _shmat
  259  00001238          	_shmat:
  260  00001238  44000441	trap	#0x441
  261  0000123c  4be00000	jr	r31
  262  00001240  54000000	nop
  263  00001244          	.endproc _shmat
  265  00001244          	.proc _sem_create
  266  00001244          	.global _sem_create
  267  00001244          	_sem_create:
  268  00001244  44000450	trap	#0x450
  269  00001248  4be00000	jr	r31
  270  0000124c  54000000	nop
  271  00001250          	.endproc _sem_create
  273  00001250          	.proc _sem_wait
  274  00001250          	.global _sem_wait
  275  00001250          	_sem_wait:
  276  00001250  44000451	trap	#0x451
  277  00001254  4be00000	jr	r31
  278  00001258  54000000	nop
  279  0000125c          	.endproc _sem_wait
  281  0000125c          	.proc _sem_signal
  282  0000125c          	.global _sem_signal
  283  0000125c          	_sem_signal:
  284  0000125c  44000452	trap	#0x452
  285  00001260  4be00000	jr	r31
  286  00001264  54000000	nop
  287  00001268          	.endproc _sem_signal
  289  00001268          	.proc _lock_create
  290  00001268          	.global _lock_create
  291  00001268          	_lock_create:
  292  00001268  44000453	trap	#0x453
  293  0000126c  4be00000	jr	r31
  294  00001270  54000000	nop
  295  00001274          	.endproc _lock_create
  297  00001274          	.proc _lock_acquire
  298  00001274          	.global _lock_acquire
  299  00001274          	_lock_acquire:
  300  00001274  44000454	trap	#0x454
  301  00001278  4be00000	jr	r31
  302  0000127c  54000000	nop
  303  00001280          	.endproc _lock_acquire
  305  00001280          	.proc _lock_release
  306  00001280          	.global _lock_release
  307  00001280          	_lock_release:
  308  00001280  44000455	trap	#0x455
  309  00001284  4be00000	jr	r31
  310  00001288  54000000	nop
  311  0000128c          	.endproc _lock_release
  313  0000128c          	.proc _cond_create
  314  0000128c          	.global _cond_create
  315  0000128c          	_cond_create:
  316  0000128c  44000456	trap	#0x456
  317  00001290  4be00000	jr	r31
  318  00001294  54000000	nop
  319  00001298          	.endproc _cond_create
  321  00001298          	.proc _cond_wait
  322  00001298          	.global _cond_wait
  323  00001298          	_cond_wait:
  324  00001298  44000457	trap	#0x457
  325  0000129c  4be00000	jr	r31
  326  000012a0  54000000	nop
  327  000012a4          	.endproc _cond_wait
  329  000012a4          	.proc _cond_signal
  330  000012a4          	.global _cond_signal
  331  000012a4          	_cond_signal:
  332  000012a4  44000458	trap	#0x458
  333  000012a8  4be00000	jr	r31
  334  000012ac  54000000	nop
  335  000012b0          	.endproc _cond_signal
  337  000012b0          	.proc _cond_broadcast
  338  000012b0          	.global _cond_broadcast
  339  000012b0          	_cond_broadcast:
  340  000012b0  44000459	trap	#0x459
  341  000012b4  4be00000	jr	r31
  342  000012b8  54000000	nop
  343  000012bc          	.endproc _cond_broadcast
  345  000012bc          	.proc _mbox_create
  346  000012bc          	.global _mbox_create
  347  000012bc          	_mbox_create:
  348  000012bc  44000460	trap	#0x460
  349  000012c0  4be00000	jr	r31
  350  000012c4  54000000	nop
  351  000012c8          	.endproc _mbox_create
  353  000012c8          	.proc _mbox_open
  354  000012c8          	.global _mbox_open
  355  000012c8          	_mbox_open:
  356  000012c8  44000461	trap	#0x461
  357  000012cc  4be00000	jr	r31
  358  000012d0  54000000	nop
  359  000012d4          	.endproc _mbox_open
  361  000012d4          	.proc _mbox_close
  362  000012d4          	.global _mbox_close
  363  000012d4          	_mbox_close:
  364  000012d4  44000462	trap	#0x462
  365  000012d8  4be00000	jr	r31
  366  000012dc  54000000	nop
  367  000012e0          	.endproc _mbox_close
  369  000012e0          	.proc _mbox_send
  370  000012e0          	.global _mbox_send
  371  000012e0          	_mbox_send:
  372  000012e0  44000463	trap	#0x463
  373  000012e4  4be00000	jr	r31
  374  000012e8  54000000	nop
  375  000012ec          	.endproc _mbox_send
  377  000012ec          	.proc _mbox_recv
  378  000012ec          	.global _mbox_recv
  379  000012ec          	_mbox_recv:
  380  000012ec  44000464	trap	#0x464
  381  000012f0  4be00000	jr	r31
  382  000012f4  54000000	nop
  383  000012f8          	.endproc _mbox_recv
  385  000012f8          	.proc _sleep
  386  000012f8          	.global _sleep
  387  000012f8          	_sleep:
  388  000012f8  44000465	trap	#0x465
  389  000012fc  4be00000	jr	r31
  390  00001300  54000000	nop
  391  00001304          	.endproc _sleep
  393  00001304          	.proc _yield
  394  00001304          	.global _yield
  395  00001304          	_yield:
  396  00001304  44000466	trap	#0x466
  397  00001308  4be00000	jr	r31
  398  0000130c  54000000	nop
  399  00001310          	.endproc _yield
  402  00001310          	.proc _Exit
  403  00001310          	.global _Exit
  404  00001310          	_Exit:
  405  00001310  44000500	trap	#0x500
  406  00001314  4be00000	jr	r31
  407  00001318  54000000	nop
  408  0000131c          	.endproc _Exit
  411  0000131c          	.proc _malloc
  412  0000131c          	.global _malloc
  413  0000131c          	_malloc:
  414  0000131c  44000467	trap	#0x467
  415  00001320  4be00000	jr	r31
  416  00001324          	.endproc _malloc
  419  00001324          	.proc _mfree
  420  00001324          	.global _mfree
  421  00001324          	_mfree:
  422  00001324  44000468	trap	#0x468
  423  00001328  4be00000	jr	r31
  424  0000132c          	.endproc _mfree
  425                      ; Compiled by GCC
  427  0000132c          	.align 2
  428  0000132c          	.proc _isspace
  429  0000132c          	.global _isspace
  430  0000132c          	_isspace:
  431                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  432  0000132c  afbefffc	sw	-4(r29),r30; push fp
  433  00001330  001df020	add	r30,r0,r29; fp = sp
  434  00001334  afbffff8	sw	-8(r29),r31; push ret addr
  435  00001338  2fbd0018	subui	r29,r29,#24; alloc local storage
  436  0000133c  afa20000	sw	0(r29),r2
  437  00001340  afa30004	sw	4(r29),r3
  438  00001344  afa40008	sw	8(r29),r4
  439  00001348  83c20003	lb	r2,3(r30)
  440  0000134c  20010000	addi	r1,r0,#0
  441  00001350  304300ff	andi	r3,r2,#0x00ff
  442  00001354  60640020	seqi	r4,r3,#32
  443  00001358  1480002c	bnez	r4,L3_LF2
  444  0000135c  54000000	nop; delay slot nop
  445  00001360  304300ff	andi	r3,r2,#0x00ff
  446  00001364  60640009	seqi	r4,r3,#9
  447  00001368  1480001c	bnez	r4,L3_LF2
  448  0000136c  54000000	nop; delay slot nop
  449  00001370  304300ff	andi	r3,r2,#0x00ff
  450  00001374  6064000a	seqi	r4,r3,#10
  451  00001378  1480000c	bnez	r4,L3_LF2
  452  0000137c  54000000	nop; delay slot nop
  453  00001380  08000008	j	L2_LF2
  454  00001384  54000000	nop; delay slot nop
  455  00001388          	L3_LF2:
  456  00001388  20010001	addi	r1,r0,#1
  457  0000138c          	L2_LF2:
  458  0000138c  08000004	j	L1_LF2
  459  00001390  54000000	nop; delay slot nop
  460  00001394          	L1_LF2:
  461  00001394  8fa20000	lw	r2,0(r29)
  462  00001398  8fa30004	lw	r3,4(r29)
  463  0000139c  8fa40008	lw	r4,8(r29)
  464  000013a0  8fdffff8	lw	r31,-8(r30)
  465  000013a4  001ee820	add	r29,r0,r30
  466  000013a8  8fdefffc	lw	r30,-4(r30)
  467  000013ac  4be00000	jr	r31
  468  000013b0  54000000	nop
  469  000013b4          	.endproc _isspace
  470  000013b4          	.align 2
  471  000013b4          	.proc _isxdigit
  472  000013b4          	.global _isxdigit
  473  000013b4          	_isxdigit:
  474                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  475  000013b4  afbefffc	sw	-4(r29),r30; push fp
  476  000013b8  001df020	add	r30,r0,r29; fp = sp
  477  000013bc  afbffff8	sw	-8(r29),r31; push ret addr
  478  000013c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  479  000013c4  afa20000	sw	0(r29),r2
  480  000013c8  afa30004	sw	4(r29),r3
  481  000013cc  afa40008	sw	8(r29),r4
  482  000013d0  83c20003	lb	r2,3(r30)
  483  000013d4  20010000	addi	r1,r0,#0
  484  000013d8  304300ff	andi	r3,r2,#0x00ff
  485  000013dc  6c64002f	sgtui	r4,r3,#47
  486  000013e0  1080001c	beqz	r4,L7_LF2
  487  000013e4  54000000	nop; delay slot nop
  488  000013e8  304300ff	andi	r3,r2,#0x00ff
  489  000013ec  70640039	sleui	r4,r3,#57
  490  000013f0  1480005c	bnez	r4,L6_LF2
  491  000013f4  54000000	nop; delay slot nop
  492  000013f8  08000004	j	L7_LF2
  493  000013fc  54000000	nop; delay slot nop
  494  00001400          	L7_LF2:
  495  00001400  304300ff	andi	r3,r2,#0x00ff
  496  00001404  6c640060	sgtui	r4,r3,#96
  497  00001408  1080001c	beqz	r4,L8_LF2
  498  0000140c  54000000	nop; delay slot nop
  499  00001410  304300ff	andi	r3,r2,#0x00ff
  500  00001414  70640066	sleui	r4,r3,#102
  501  00001418  14800034	bnez	r4,L6_LF2
  502  0000141c  54000000	nop; delay slot nop
  503  00001420  08000004	j	L8_LF2
  504  00001424  54000000	nop; delay slot nop
  505  00001428          	L8_LF2:
  506  00001428  304300ff	andi	r3,r2,#0x00ff
  507  0000142c  6c640040	sgtui	r4,r3,#64
  508  00001430  10800020	beqz	r4,L5_LF2
  509  00001434  54000000	nop; delay slot nop
  510  00001438  304300ff	andi	r3,r2,#0x00ff
  511  0000143c  70640041	sleui	r4,r3,#65
  512  00001440  1480000c	bnez	r4,L6_LF2
  513  00001444  54000000	nop; delay slot nop
  514  00001448  08000008	j	L5_LF2
  515  0000144c  54000000	nop; delay slot nop
  516  00001450          	L6_LF2:
  517  00001450  20010001	addi	r1,r0,#1
  518  00001454          	L5_LF2:
  519  00001454  08000004	j	L4_LF2
  520  00001458  54000000	nop; delay slot nop
  521  0000145c          	L4_LF2:
  522  0000145c  8fa20000	lw	r2,0(r29)
  523  00001460  8fa30004	lw	r3,4(r29)
  524  00001464  8fa40008	lw	r4,8(r29)
  525  00001468  8fdffff8	lw	r31,-8(r30)
  526  0000146c  001ee820	add	r29,r0,r30
  527  00001470  8fdefffc	lw	r30,-4(r30)
  528  00001474  4be00000	jr	r31
  529  00001478  54000000	nop
  530  0000147c          	.endproc _isxdigit
  531  0000147c          	.align 2
  532  0000147c          	.proc _dstrcpy
  533  0000147c          	.global _dstrcpy
  534  0000147c          	_dstrcpy:
  535                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  536  0000147c  afbefffc	sw	-4(r29),r30; push fp
  537  00001480  001df020	add	r30,r0,r29; fp = sp
  538  00001484  afbffff8	sw	-8(r29),r31; push ret addr
  539  00001488  2fbd0018	subui	r29,r29,#24; alloc local storage
  540  0000148c  afa20000	sw	0(r29),r2
  541  00001490  afa30004	sw	4(r29),r3
  542  00001494  8fc10000	lw	r1,(r30)
  543  00001498  afc1fff4	sw	-12(r30),r1
  544  0000149c          	L10_LF2:
  545  0000149c  8fc10000	lw	r1,(r30)
  546  000014a0  20220001	addi	r2,r1,#1
  547  000014a4  afc20000	sw	(r30),r2
  548  000014a8  8fc20004	lw	r2,4(r30)
  549  000014ac  20430001	addi	r3,r2,#1
  550  000014b0  afc30004	sw	4(r30),r3
  551  000014b4  80420000	lb	r2,(r2)
  552  000014b8  a0220000	sb	(r1),r2
  553  000014bc  a3c2fff3	sb	-13(r30),r2
  554  000014c0          	L12_LF2:
  555  000014c0  93c1fff3	lbu	r1,-13(r30)
  556  000014c4  64220000	snei	r2,r1,#0
  557  000014c8  1440000c	bnez	r2,L13_LF2
  558  000014cc  54000000	nop; delay slot nop
  559  000014d0  0800000c	j	L11_LF2
  560  000014d4  54000000	nop; delay slot nop
  561  000014d8          	L13_LF2:
  562  000014d8  0bffffc0	j	L10_LF2
  563  000014dc  54000000	nop; delay slot nop
  564  000014e0          	L11_LF2:
  565  000014e0  8fc1fff4	lw	r1,-12(r30)
  566  000014e4  08000004	j	L9_LF2
  567  000014e8  54000000	nop; delay slot nop
  568  000014ec          	L9_LF2:
  569  000014ec  8fa20000	lw	r2,0(r29)
  570  000014f0  8fa30004	lw	r3,4(r29)
  571  000014f4  8fdffff8	lw	r31,-8(r30)
  572  000014f8  001ee820	add	r29,r0,r30
  573  000014fc  8fdefffc	lw	r30,-4(r30)
  574  00001500  4be00000	jr	r31
  575  00001504  54000000	nop
  576  00001508          	.endproc _dstrcpy
  577  00001508          	.align 2
  578  00001508          	.proc _dstrncpy
  579  00001508          	.global _dstrncpy
  580  00001508          	_dstrncpy:
  581                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  582  00001508  afbefffc	sw	-4(r29),r30; push fp
  583  0000150c  001df020	add	r30,r0,r29; fp = sp
  584  00001510  afbffff8	sw	-8(r29),r31; push ret addr
  585  00001514  2fbd0018	subui	r29,r29,#24; alloc local storage
  586  00001518  afa20000	sw	0(r29),r2
  587  0000151c  afa30004	sw	4(r29),r3
  588  00001520  8fc10000	lw	r1,(r30)
  589  00001524  afc1fff4	sw	-12(r30),r1
  590  00001528          	L15_LF2:
  591  00001528  8fc10008	lw	r1,8(r30)
  592  0000152c  2022ffff	addi	r2,r1,#-1
  593  00001530  afc20008	sw	8(r30),r2
  594  00001534  70210000	slei	r1,r1,#0
  595  00001538  1020000c	beqz	r1,L18_LF2
  596  0000153c  54000000	nop; delay slot nop
  597  00001540  08000048	j	L16_LF2
  598  00001544  54000000	nop; delay slot nop
  599  00001548          	L18_LF2:
  600  00001548  8fc10000	lw	r1,(r30)
  601  0000154c  20220001	addi	r2,r1,#1
  602  00001550  afc20000	sw	(r30),r2
  603  00001554  8fc20004	lw	r2,4(r30)
  604  00001558  20430001	addi	r3,r2,#1
  605  0000155c  afc30004	sw	4(r30),r3
  606  00001560  80420000	lb	r2,(r2)
  607  00001564  a0220000	sb	(r1),r2
  608  00001568  a3c2fff3	sb	-13(r30),r2
  609  0000156c          	L17_LF2:
  610  0000156c  93c1fff3	lbu	r1,-13(r30)
  611  00001570  64220000	snei	r2,r1,#0
  612  00001574  1440000c	bnez	r2,L19_LF2
  613  00001578  54000000	nop; delay slot nop
  614  0000157c  0800000c	j	L16_LF2
  615  00001580  54000000	nop; delay slot nop
  616  00001584          	L19_LF2:
  617  00001584  0bffffa0	j	L15_LF2
  618  00001588  54000000	nop; delay slot nop
  619  0000158c          	L16_LF2:
  620  0000158c  8fc1fff4	lw	r1,-12(r30)
  621  00001590  08000004	j	L14_LF2
  622  00001594  54000000	nop; delay slot nop
  623  00001598          	L14_LF2:
  624  00001598  8fa20000	lw	r2,0(r29)
  625  0000159c  8fa30004	lw	r3,4(r29)
  626  000015a0  8fdffff8	lw	r31,-8(r30)
  627  000015a4  001ee820	add	r29,r0,r30
  628  000015a8  8fdefffc	lw	r30,-4(r30)
  629  000015ac  4be00000	jr	r31
  630  000015b0  54000000	nop
  631  000015b4          	.endproc _dstrncpy
  632  000015b4          	.align 2
  633  000015b4          	.proc _dstrcat
  634  000015b4          	.global _dstrcat
  635  000015b4          	_dstrcat:
  636                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  637  000015b4  afbefffc	sw	-4(r29),r30; push fp
  638  000015b8  001df020	add	r30,r0,r29; fp = sp
  639  000015bc  afbffff8	sw	-8(r29),r31; push ret addr
  640  000015c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  641  000015c4  afa20000	sw	0(r29),r2
  642  000015c8  8fc10000	lw	r1,(r30)
  643  000015cc  afc1fff4	sw	-12(r30),r1
  644  000015d0          	L21_LF2:
  645  000015d0  8fc10000	lw	r1,(r30)
  646  000015d4  90220000	lbu	r2,(r1)
  647  000015d8  64410000	snei	r1,r2,#0
  648  000015dc  1420000c	bnez	r1,L23_LF2
  649  000015e0  54000000	nop; delay slot nop
  650  000015e4  0800001c	j	L22_LF2
  651  000015e8  54000000	nop; delay slot nop
  652  000015ec          	L23_LF2:
  653  000015ec  8fc20000	lw	r2,(r30)
  654  000015f0  20410001	addi	r1,r2,#1
  655  000015f4  00011020	add	r2,r0,r1
  656  000015f8  afc20000	sw	(r30),r2
  657  000015fc  0bffffd0	j	L21_LF2
  658  00001600  54000000	nop; delay slot nop
  659  00001604          	L22_LF2:
  660  00001604  23bdfff8	addi	r29,r29,#-8
  661  00001608  001d0820	add	r1,r0,r29
  662  0000160c  8fc20000	lw	r2,(r30)
  663  00001610  ac220000	sw	(r1),r2
  664  00001614  8fc20004	lw	r2,4(r30)
  665  00001618  ac220004	sw	4(r1),r2
  666  0000161c  0ffffe5c	jal	_dstrcpy
  667  00001620  54000000	nop; delay slot nop
  668  00001624  23bd0008	addi	r29,r29,#8
  669  00001628  8fc1fff4	lw	r1,-12(r30)
  670  0000162c  08000004	j	L20_LF2
  671  00001630  54000000	nop; delay slot nop
  672  00001634          	L20_LF2:
  673  00001634  8fa20000	lw	r2,0(r29)
  674  00001638  8fdffff8	lw	r31,-8(r30)
  675  0000163c  001ee820	add	r29,r0,r30
  676  00001640  8fdefffc	lw	r30,-4(r30)
  677  00001644  4be00000	jr	r31
  678  00001648  54000000	nop
  679  0000164c          	.endproc _dstrcat
  680  0000164c          	.align 2
  681  0000164c          	.proc _dstrncmp
  682  0000164c          	.global _dstrncmp
  683  0000164c          	_dstrncmp:
  684                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  685  0000164c  afbefffc	sw	-4(r29),r30; push fp
  686  00001650  001df020	add	r30,r0,r29; fp = sp
  687  00001654  afbffff8	sw	-8(r29),r31; push ret addr
  688  00001658  2fbd0018	subui	r29,r29,#24; alloc local storage
  689  0000165c  afa20000	sw	0(r29),r2
  690  00001660  afa30004	sw	4(r29),r3
  691  00001664  54000000	nop
  692  00001668  20010000	addi	r1,r0,#0
  693  0000166c  afc1fff4	sw	-12(r30),r1
  694  00001670          	L25_LF2:
  695  00001670  8fc1fff4	lw	r1,-12(r30)
  696  00001674  8fc20008	lw	r2,8(r30)
  697  00001678  0022082a	slt	r1,r1,r2
  698  0000167c  1420000c	bnez	r1,L28_LF2
  699  00001680  54000000	nop; delay slot nop
  700  00001684  08000088	j	L26_LF2
  701  00001688  54000000	nop; delay slot nop
  702  0000168c          	L28_LF2:
  703  0000168c  8fc10004	lw	r1,4(r30)
  704  00001690  90220000	lbu	r2,(r1)
  705  00001694  64410000	snei	r1,r2,#0
  706  00001698  14200018	bnez	r1,L29_LF2
  707  0000169c  54000000	nop; delay slot nop
  708  000016a0  20010000	addi	r1,r0,#0
  709  000016a4  080000d8	j	L24_LF2
  710  000016a8  54000000	nop; delay slot nop
  711  000016ac  08000028	j	L30_LF2
  712  000016b0  54000000	nop; delay slot nop
  713  000016b4          	L29_LF2:
  714  000016b4  8fc10000	lw	r1,(r30)
  715  000016b8  8fc20004	lw	r2,4(r30)
  716  000016bc  90210000	lbu	r1,(r1)
  717  000016c0  90420000	lbu	r2,(r2)
  718  000016c4  00220829	sne	r1,r1,r2
  719  000016c8  1020000c	beqz	r1,L30_LF2
  720  000016cc  54000000	nop; delay slot nop
  721  000016d0  0800003c	j	L26_LF2
  722  000016d4  54000000	nop; delay slot nop
  723  000016d8          	L31_LF2:
  724  000016d8          	L30_LF2:
  725  000016d8  8fc20000	lw	r2,(r30)
  726  000016dc  20410001	addi	r1,r2,#1
  727  000016e0  00011020	add	r2,r0,r1
  728  000016e4  afc20000	sw	(r30),r2
  729  000016e8  8fc20004	lw	r2,4(r30)
  730  000016ec  20410001	addi	r1,r2,#1
  731  000016f0  00011020	add	r2,r0,r1
  732  000016f4  afc20004	sw	4(r30),r2
  733  000016f8          	L27_LF2:
  734  000016f8  8fc2fff4	lw	r2,-12(r30)
  735  000016fc  20410001	addi	r1,r2,#1
  736  00001700  00011020	add	r2,r0,r1
  737  00001704  afc2fff4	sw	-12(r30),r2
  738  00001708  0bffff64	j	L25_LF2
  739  0000170c  54000000	nop; delay slot nop
  740  00001710          	L26_LF2:
  741  00001710  8fc1fff4	lw	r1,-12(r30)
  742  00001714  8fc20008	lw	r2,8(r30)
  743  00001718  00220828	seq	r1,r1,r2
  744  0000171c  10200018	beqz	r1,L32_LF2
  745  00001720  54000000	nop; delay slot nop
  746  00001724  20010000	addi	r1,r0,#0
  747  00001728  08000054	j	L24_LF2
  748  0000172c  54000000	nop; delay slot nop
  749  00001730  0800004c	j	L33_LF2
  750  00001734  54000000	nop; delay slot nop
  751  00001738          	L32_LF2:
  752  00001738  8fc20000	lw	r2,(r30)
  753  0000173c  90410000	lbu	r1,(r2)
  754  00001740  8fc20004	lw	r2,4(r30)
  755  00001744  90430000	lbu	r3,(r2)
  756  00001748  00230822	sub	r1,r1,r3
  757  0000174c  74220000	sgei	r2,r1,#0
  758  00001750  10400020	beqz	r2,L34_LF2
  759  00001754  54000000	nop; delay slot nop
  760  00001758  8fc10000	lw	r1,(r30)
  761  0000175c  8fc20004	lw	r2,4(r30)
  762  00001760  90210000	lbu	r1,(r1)
  763  00001764  90420000	lbu	r2,(r2)
  764  00001768  00220829	sne	r1,r1,r2
  765  0000176c  08000008	j	L35_LF2
  766  00001770  54000000	nop; delay slot nop
  767  00001774          	L34_LF2:
  768  00001774  2001ffff	addi	r1,r0,#-1
  769  00001778          	L35_LF2:
  770  00001778  08000004	j	L24_LF2
  771  0000177c  54000000	nop; delay slot nop
  772  00001780          	L33_LF2:
  773  00001780          	L24_LF2:
  774  00001780  8fa20000	lw	r2,0(r29)
  775  00001784  8fa30004	lw	r3,4(r29)
  776  00001788  8fdffff8	lw	r31,-8(r30)
  777  0000178c  001ee820	add	r29,r0,r30
  778  00001790  8fdefffc	lw	r30,-4(r30)
  779  00001794  4be00000	jr	r31
  780  00001798  54000000	nop
  781  0000179c          	.endproc _dstrncmp
  782  0000179c          	.align 2
  783  0000179c          	.proc _dstrlen
  784  0000179c          	.global _dstrlen
  785  0000179c          	_dstrlen:
  786                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  787  0000179c  afbefffc	sw	-4(r29),r30; push fp
  788  000017a0  001df020	add	r30,r0,r29; fp = sp
  789  000017a4  afbffff8	sw	-8(r29),r31; push ret addr
  790  000017a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  791  000017ac  afa20000	sw	0(r29),r2
  792  000017b0  20010000	addi	r1,r0,#0
  793  000017b4  afc1fff4	sw	-12(r30),r1
  794  000017b8          	L37_LF2:
  795  000017b8  8fc10000	lw	r1,(r30)
  796  000017bc  20220001	addi	r2,r1,#1
  797  000017c0  afc20000	sw	(r30),r2
  798  000017c4  90210000	lbu	r1,(r1)
  799  000017c8  64220000	snei	r2,r1,#0
  800  000017cc  1440000c	bnez	r2,L39_LF2
  801  000017d0  54000000	nop; delay slot nop
  802  000017d4  0800001c	j	L38_LF2
  803  000017d8  54000000	nop; delay slot nop
  804  000017dc          	L39_LF2:
  805  000017dc  8fc2fff4	lw	r2,-12(r30)
  806  000017e0  20410001	addi	r1,r2,#1
  807  000017e4  00011020	add	r2,r0,r1
  808  000017e8  afc2fff4	sw	-12(r30),r2
  809  000017ec  0bffffc8	j	L37_LF2
  810  000017f0  54000000	nop; delay slot nop
  811  000017f4          	L38_LF2:
  812  000017f4  8fc1fff4	lw	r1,-12(r30)
  813  000017f8  08000004	j	L36_LF2
  814  000017fc  54000000	nop; delay slot nop
  815  00001800          	L36_LF2:
  816  00001800  8fa20000	lw	r2,0(r29)
  817  00001804  8fdffff8	lw	r31,-8(r30)
  818  00001808  001ee820	add	r29,r0,r30
  819  0000180c  8fdefffc	lw	r30,-4(r30)
  820  00001810  4be00000	jr	r31
  821  00001814  54000000	nop
  822  00001818          	.endproc _dstrlen
  823  00001818          	.align 2
  824  00001818          	.proc _dstrstr
  825  00001818          	.global _dstrstr
  826  00001818          	_dstrstr:
  827                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  828  00001818  afbefffc	sw	-4(r29),r30; push fp
  829  0000181c  001df020	add	r30,r0,r29; fp = sp
  830  00001820  afbffff8	sw	-8(r29),r31; push ret addr
  831  00001824  2fbd0018	subui	r29,r29,#24; alloc local storage
  832  00001828  afa20000	sw	0(r29),r2
  833  0000182c  23bdfff8	addi	r29,r29,#-8
  834  00001830  001d0820	add	r1,r0,r29
  835  00001834  8fc20004	lw	r2,4(r30)
  836  00001838  ac220000	sw	(r1),r2
  837  0000183c  0fffff5c	jal	_dstrlen
  838  00001840  54000000	nop; delay slot nop
  839  00001844  23bd0008	addi	r29,r29,#8
  840  00001848  afc1fff4	sw	-12(r30),r1
  841  0000184c          	L41_LF2:
  842  0000184c  8fc10000	lw	r1,(r30)
  843  00001850  90220000	lbu	r2,(r1)
  844  00001854  64410000	snei	r1,r2,#0
  845  00001858  1420000c	bnez	r1,L43_LF2
  846  0000185c  54000000	nop; delay slot nop
  847  00001860  08000060	j	L42_LF2
  848  00001864  54000000	nop; delay slot nop
  849  00001868          	L43_LF2:
  850  00001868  23bdfff0	addi	r29,r29,#-16
  851  0000186c  001d0820	add	r1,r0,r29
  852  00001870  8fc20000	lw	r2,(r30)
  853  00001874  ac220000	sw	(r1),r2
  854  00001878  8fc20004	lw	r2,4(r30)
  855  0000187c  ac220004	sw	4(r1),r2
  856  00001880  8fc2fff4	lw	r2,-12(r30)
  857  00001884  ac220008	sw	8(r1),r2
  858  00001888  0ffffdc0	jal	_dstrncmp
  859  0000188c  54000000	nop; delay slot nop
  860  00001890  23bd0010	addi	r29,r29,#16
  861  00001894  64220000	snei	r2,r1,#0
  862  00001898  14400010	bnez	r2,L44_LF2
  863  0000189c  54000000	nop; delay slot nop
  864  000018a0  8fc10000	lw	r1,(r30)
  865  000018a4  08000028	j	L40_LF2
  866  000018a8  54000000	nop; delay slot nop
  867  000018ac          	L44_LF2:
  868  000018ac  8fc20000	lw	r2,(r30)
  869  000018b0  20410001	addi	r1,r2,#1
  870  000018b4  00011020	add	r2,r0,r1
  871  000018b8  afc20000	sw	(r30),r2
  872  000018bc  0bffff8c	j	L41_LF2
  873  000018c0  54000000	nop; delay slot nop
  874  000018c4          	L42_LF2:
  875  000018c4  20010000	addi	r1,r0,#0
  876  000018c8  08000004	j	L40_LF2
  877  000018cc  54000000	nop; delay slot nop
  878  000018d0          	L40_LF2:
  879  000018d0  8fa20000	lw	r2,0(r29)
  880  000018d4  8fdffff8	lw	r31,-8(r30)
  881  000018d8  001ee820	add	r29,r0,r30
  882  000018dc  8fdefffc	lw	r30,-4(r30)
  883  000018e0  4be00000	jr	r31
  884  000018e4  54000000	nop
  885  000018e8          	.endproc _dstrstr
  886  000018e8          	.align 2
  887  000018e8          	.proc _dmindex
  888  000018e8          	.global _dmindex
  889  000018e8          	_dmindex:
  890                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  891  000018e8  afbefffc	sw	-4(r29),r30; push fp
  892  000018ec  001df020	add	r30,r0,r29; fp = sp
  893  000018f0  afbffff8	sw	-8(r29),r31; push ret addr
  894  000018f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  895  000018f8  afa20000	sw	0(r29),r2
  896  000018fc  54000000	nop
  897  00001900          	L46_LF2:
  898  00001900  8fc10000	lw	r1,(r30)
  899  00001904  90220000	lbu	r2,(r1)
  900  00001908  64410000	snei	r1,r2,#0
  901  0000190c  1420000c	bnez	r1,L48_LF2
  902  00001910  54000000	nop; delay slot nop
  903  00001914  08000070	j	L47_LF2
  904  00001918  54000000	nop; delay slot nop
  905  0000191c          	L48_LF2:
  906  0000191c  8fc10004	lw	r1,4(r30)
  907  00001920  afc1fff4	sw	-12(r30),r1
  908  00001924          	L49_LF2:
  909  00001924  8fc1fff4	lw	r1,-12(r30)
  910  00001928  90220000	lbu	r2,(r1)
  911  0000192c  64410000	snei	r1,r2,#0
  912  00001930  1420000c	bnez	r1,L52_LF2
  913  00001934  54000000	nop; delay slot nop
  914  00001938  08000044	j	L50_LF2
  915  0000193c  54000000	nop; delay slot nop
  916  00001940          	L52_LF2:
  917  00001940  8fc10000	lw	r1,(r30)
  918  00001944  8fc2fff4	lw	r2,-12(r30)
  919  00001948  90210000	lbu	r1,(r1)
  920  0000194c  90420000	lbu	r2,(r2)
  921  00001950  00220828	seq	r1,r1,r2
  922  00001954  10200010	beqz	r1,L51_LF2
  923  00001958  54000000	nop; delay slot nop
  924  0000195c  8fc10000	lw	r1,(r30)
  925  00001960  08000030	j	L45_LF2
  926  00001964  54000000	nop; delay slot nop
  927  00001968          	L53_LF2:
  928  00001968          	L51_LF2:
  929  00001968  8fc2fff4	lw	r2,-12(r30)
  930  0000196c  20410001	addi	r1,r2,#1
  931  00001970  00011020	add	r2,r0,r1
  932  00001974  afc2fff4	sw	-12(r30),r2
  933  00001978  0bffffa8	j	L49_LF2
  934  0000197c  54000000	nop; delay slot nop
  935  00001980          	L50_LF2:
  936  00001980  0bffff7c	j	L46_LF2
  937  00001984  54000000	nop; delay slot nop
  938  00001988          	L47_LF2:
  939  00001988  20010000	addi	r1,r0,#0
  940  0000198c  08000004	j	L45_LF2
  941  00001990  54000000	nop; delay slot nop
  942  00001994          	L45_LF2:
  943  00001994  8fa20000	lw	r2,0(r29)
  944  00001998  8fdffff8	lw	r31,-8(r30)
  945  0000199c  001ee820	add	r29,r0,r30
  946  000019a0  8fdefffc	lw	r30,-4(r30)
  947  000019a4  4be00000	jr	r31
  948  000019a8  54000000	nop
  949  000019ac          	.endproc _dmindex
  950  000019ac          	.align 2
  951  000019ac          	.proc _dindex
  952  000019ac          	.global _dindex
  953  000019ac          	_dindex:
  954                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  955  000019ac  afbefffc	sw	-4(r29),r30; push fp
  956  000019b0  001df020	add	r30,r0,r29; fp = sp
  957  000019b4  afbffff8	sw	-8(r29),r31; push ret addr
  958  000019b8  2fbd0010	subui	r29,r29,#16; alloc local storage
  959  000019bc  afa20000	sw	0(r29),r2
  960  000019c0  54000000	nop
  961  000019c4          	L55_LF2:
  962  000019c4  8fc10000	lw	r1,(r30)
  963  000019c8  90220000	lbu	r2,(r1)
  964  000019cc  64410000	snei	r1,r2,#0
  965  000019d0  1420000c	bnez	r1,L57_LF2
  966  000019d4  54000000	nop; delay slot nop
  967  000019d8  08000040	j	L56_LF2
  968  000019dc  54000000	nop; delay slot nop
  969  000019e0          	L57_LF2:
  970  000019e0  8fc10000	lw	r1,(r30)
  971  000019e4  90220000	lbu	r2,(r1)
  972  000019e8  8fc10004	lw	r1,4(r30)
  973  000019ec  00411028	seq	r2,r2,r1
  974  000019f0  10400010	beqz	r2,L58_LF2
  975  000019f4  54000000	nop; delay slot nop
  976  000019f8  8fc10000	lw	r1,(r30)
  977  000019fc  08000028	j	L54_LF2
  978  00001a00  54000000	nop; delay slot nop
  979  00001a04          	L58_LF2:
  980  00001a04  8fc20000	lw	r2,(r30)
  981  00001a08  20410001	addi	r1,r2,#1
  982  00001a0c  00011020	add	r2,r0,r1
  983  00001a10  afc20000	sw	(r30),r2
  984  00001a14  0bffffac	j	L55_LF2
  985  00001a18  54000000	nop; delay slot nop
  986  00001a1c          	L56_LF2:
  987  00001a1c  20010000	addi	r1,r0,#0
  988  00001a20  08000004	j	L54_LF2
  989  00001a24  54000000	nop; delay slot nop
  990  00001a28          	L54_LF2:
  991  00001a28  8fa20000	lw	r2,0(r29)
  992  00001a2c  8fdffff8	lw	r31,-8(r30)
  993  00001a30  001ee820	add	r29,r0,r30
  994  00001a34  8fdefffc	lw	r30,-4(r30)
  995  00001a38  4be00000	jr	r31
  996  00001a3c  54000000	nop
  997  00001a40          	.endproc _dindex
  998  00001a40          	.align 2
  999  00001a40          	.proc _ditoa
 1000  00001a40          	.global _ditoa
 1001  00001a40          	_ditoa:
 1002                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1003  00001a40  afbefffc	sw	-4(r29),r30; push fp
 1004  00001a44  001df020	add	r30,r0,r29; fp = sp
 1005  00001a48  afbffff8	sw	-8(r29),r31; push ret addr
 1006  00001a4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1007  00001a50  afa20000	sw	0(r29),r2
 1008  00001a54  afa30004	sw	4(r29),r3
 1009  00001a58  8fc10000	lw	r1,(r30)
 1010  00001a5c  68220000	slti	r2,r1,#0
 1011  00001a60  1040002c	beqz	r2,L60_LF2
 1012  00001a64  54000000	nop; delay slot nop
 1013  00001a68  8fc10004	lw	r1,4(r30)
 1014  00001a6c  20220001	addi	r2,r1,#1
 1015  00001a70  afc20004	sw	4(r30),r2
 1016  00001a74  2002002d	addi	r2,r0,(#0x2d)&0xff
 1017  00001a78  a0220000	sb	(r1),r2
 1018  00001a7c  8fc10000	lw	r1,(r30)
 1019  00001a80  00011022	sub	r2,r0,r1
 1020  00001a84  afc20000	sw	(r30),r2
 1021  00001a88  08000118	j	L61_LF2
 1022  00001a8c  54000000	nop; delay slot nop
 1023  00001a90          	L60_LF2:
 1024  00001a90  8fc10000	lw	r1,(r30)
 1025  00001a94  64220000	snei	r2,r1,#0
 1026  00001a98  14400020	bnez	r2,L62_LF2
 1027  00001a9c  54000000	nop; delay slot nop
 1028  00001aa0  8fc10004	lw	r1,4(r30)
 1029  00001aa4  20220001	addi	r2,r1,#1
 1030  00001aa8  afc20004	sw	4(r30),r2
 1031  00001aac  20020030	addi	r2,r0,(#0x30)&0xff
 1032  00001ab0  a0220000	sb	(r1),r2
 1033  00001ab4  080000ec	j	L61_LF2
 1034  00001ab8  54000000	nop; delay slot nop
 1035  00001abc          	L62_LF2:
 1036  00001abc  20010001	addi	r1,r0,#1
 1037  00001ac0  afc1fff4	sw	-12(r30),r1
 1038  00001ac4          	L64_LF2:
 1039  00001ac4  8fc1fff4	lw	r1,-12(r30)
 1040  00001ac8  8fc20000	lw	r2,(r30)
 1041  00001acc  0022082c	sle	r1,r1,r2
 1042  00001ad0  1420000c	bnez	r1,L66_LF2
 1043  00001ad4  54000000	nop; delay slot nop
 1044  00001ad8  08000024	j	L65_LF2
 1045  00001adc  54000000	nop; delay slot nop
 1046  00001ae0          	L67_LF2:
 1047  00001ae0          	L66_LF2:
 1048  00001ae0  8fc1fff4	lw	r1,-12(r30)
 1049  00001ae4  00011820	add	r3,r0,r1
 1050  00001ae8  50620002	slli	r2,r3,#0x2
 1051  00001aec  00411020	add	r2,r2,r1
 1052  00001af0  50410001	slli	r1,r2,#0x1
 1053  00001af4  afc1fff4	sw	-12(r30),r1
 1054  00001af8  0bffffc8	j	L64_LF2
 1055  00001afc  54000000	nop; delay slot nop
 1056  00001b00          	L65_LF2:
 1057  00001b00  54000000	nop
 1058  00001b04          	L68_LF2:
 1059  00001b04  8fc1fff4	lw	r1,-12(r30)
 1060  00001b08  2002000a	addi	r2,r0,#10
 1061  00001b0c  00200035	movi2fp	f0,r1
 1062  00001b10  00400835	movi2fp	f1,r2
 1063  00001b14  0401000f	div	f0,f0,f1
 1064  00001b18  00000834	movfp2i	r1,f0
 1065  00001b1c  afc1fff4	sw	-12(r30),r1
 1066  00001b20  8fc10004	lw	r1,4(r30)
 1067  00001b24  20220001	addi	r2,r1,#1
 1068  00001b28  afc20004	sw	4(r30),r2
 1069  00001b2c  8fc20000	lw	r2,(r30)
 1070  00001b30  8fc3fff4	lw	r3,-12(r30)
 1071  00001b34  00400035	movi2fp	f0,r2
 1072  00001b38  00600835	movi2fp	f1,r3
 1073  00001b3c  0401000f	div	f0,f0,f1
 1074  00001b40  00001034	movfp2i	r2,f0
 1075  00001b44  00021820	add	r3,r0,r2
 1076  00001b48  20620030	addi	r2,r3,#48
 1077  00001b4c  a0220000	sb	(r1),r2
 1078  00001b50  8fc10000	lw	r1,(r30)
 1079  00001b54  8fc3fff4	lw	r3,-12(r30)
 1080  00001b58  00200035	movi2fp	f0,r1
 1081  00001b5c  00600835	movi2fp	f1,r3
 1082  00001b60  0401000f	div	f0,f0,f1
 1083  00001b64  00001034	movfp2i	r2,f0
 1084  00001b68  8fc3fff4	lw	r3,-12(r30)
 1085  00001b6c  00400035	movi2fp	f0,r2
 1086  00001b70  00600835	movi2fp	f1,r3
 1087  00001b74  0401000e	mult	f0,f0,f1
 1088  00001b78  00001034	movfp2i	r2,f0
 1089  00001b7c  00220822	sub	r1,r1,r2
 1090  00001b80  afc10000	sw	(r30),r1
 1091  00001b84          	L70_LF2:
 1092  00001b84  8fc1fff4	lw	r1,-12(r30)
 1093  00001b88  6c220001	sgti	r2,r1,#1
 1094  00001b8c  1440000c	bnez	r2,L71_LF2
 1095  00001b90  54000000	nop; delay slot nop
 1096  00001b94  0800000c	j	L61_LF2
 1097  00001b98  54000000	nop; delay slot nop
 1098  00001b9c          	L71_LF2:
 1099  00001b9c  0bffff64	j	L68_LF2
 1100  00001ba0  54000000	nop; delay slot nop
 1101  00001ba4          	L69_LF2:
 1102  00001ba4          	L63_LF2:
 1103  00001ba4          	L61_LF2:
 1104  00001ba4  8fc10004	lw	r1,4(r30)
 1105  00001ba8  20020000	addi	r2,r0,(#0x0)&0xff
 1106  00001bac  a0220000	sb	(r1),r2
 1107  00001bb0          	L59_LF2:
 1108  00001bb0  8fa20000	lw	r2,0(r29)
 1109  00001bb4  8fa30004	lw	r3,4(r29)
 1110  00001bb8  8fdffff8	lw	r31,-8(r30)
 1111  00001bbc  001ee820	add	r29,r0,r30
 1112  00001bc0  8fdefffc	lw	r30,-4(r30)
 1113  00001bc4  4be00000	jr	r31
 1114  00001bc8  54000000	nop
 1115  00001bcc          	.endproc _ditoa
 1116  00001bcc          	.align 2
 1117  00001bcc          	.proc _dstrtol
 1118  00001bcc          	.global _dstrtol
 1119  00001bcc          	_dstrtol:
 1120                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1121  00001bcc  afbefffc	sw	-4(r29),r30; push fp
 1122  00001bd0  001df020	add	r30,r0,r29; fp = sp
 1123  00001bd4  afbffff8	sw	-8(r29),r31; push ret addr
 1124  00001bd8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1125  00001bdc  afa20000	sw	0(r29),r2
 1126  00001be0  20010000	addi	r1,r0,#0
 1127  00001be4  afc1fff4	sw	-12(r30),r1
 1128  00001be8          	L73_LF2:
 1129  00001be8  8fc10000	lw	r1,(r30)
 1130  00001bec  90220000	lbu	r2,(r1)
 1131  00001bf0  60410020	seqi	r1,r2,#32
 1132  00001bf4  14200034	bnez	r1,L75_LF2
 1133  00001bf8  54000000	nop; delay slot nop
 1134  00001bfc  8fc10000	lw	r1,(r30)
 1135  00001c00  90220000	lbu	r2,(r1)
 1136  00001c04  60410009	seqi	r1,r2,#9
 1137  00001c08  14200020	bnez	r1,L75_LF2
 1138  00001c0c  54000000	nop; delay slot nop
 1139  00001c10  8fc10000	lw	r1,(r30)
 1140  00001c14  90220000	lbu	r2,(r1)
 1141  00001c18  6041000a	seqi	r1,r2,#10
 1142  00001c1c  1420000c	bnez	r1,L75_LF2
 1143  00001c20  54000000	nop; delay slot nop
 1144  00001c24  0800001c	j	L74_LF2
 1145  00001c28  54000000	nop; delay slot nop
 1146  00001c2c          	L75_LF2:
 1147  00001c2c  8fc20000	lw	r2,(r30)
 1148  00001c30  20410001	addi	r1,r2,#1
 1149  00001c34  00011020	add	r2,r0,r1
 1150  00001c38  afc20000	sw	(r30),r2
 1151  00001c3c  0bffffa8	j	L73_LF2
 1152  00001c40  54000000	nop; delay slot nop
 1153  00001c44          	L74_LF2:
 1154  00001c44  8fc10004	lw	r1,4(r30)
 1155  00001c48  64220000	snei	r2,r1,#0
 1156  00001c4c  10400010	beqz	r2,L76_LF2
 1157  00001c50  54000000	nop; delay slot nop
 1158  00001c54  8fc10004	lw	r1,4(r30)
 1159  00001c58  8fc20000	lw	r2,(r30)
 1160  00001c5c  ac220000	sw	(r1),r2
 1161  00001c60          	L76_LF2:
 1162  00001c60  8fc10000	lw	r1,(r30)
 1163  00001c64  90220000	lbu	r2,(r1)
 1164  00001c68  64410000	snei	r1,r2,#0
 1165  00001c6c  14200010	bnez	r1,L77_LF2
 1166  00001c70  54000000	nop; delay slot nop
 1167  00001c74  8fc1fff4	lw	r1,-12(r30)
 1168  00001c78  08000294	j	L72_LF2
 1169  00001c7c  54000000	nop; delay slot nop
 1170  00001c80          	L77_LF2:
 1171  00001c80  8fc10000	lw	r1,(r30)
 1172  00001c84  90220000	lbu	r2,(r1)
 1173  00001c88  6041002d	seqi	r1,r2,#45
 1174  00001c8c  10200024	beqz	r1,L78_LF2
 1175  00001c90  54000000	nop; delay slot nop
 1176  00001c94  2001ffff	addi	r1,r0,#-1
 1177  00001c98  afc1ffec	sw	-20(r30),r1
 1178  00001c9c  8fc20000	lw	r2,(r30)
 1179  00001ca0  20410001	addi	r1,r2,#1
 1180  00001ca4  00011020	add	r2,r0,r1
 1181  00001ca8  afc20000	sw	(r30),r2
 1182  00001cac  0800000c	j	L79_LF2
 1183  00001cb0  54000000	nop; delay slot nop
 1184  00001cb4          	L78_LF2:
 1185  00001cb4  20010001	addi	r1,r0,#1
 1186  00001cb8  afc1ffec	sw	-20(r30),r1
 1187  00001cbc          	L79_LF2:
 1188  00001cbc  8fc10008	lw	r1,8(r30)
 1189  00001cc0  64220000	snei	r2,r1,#0
 1190  00001cc4  14400090	bnez	r2,L80_LF2
 1191  00001cc8  54000000	nop; delay slot nop
 1192  00001ccc  8fc10000	lw	r1,(r30)
 1193  00001cd0  90220000	lbu	r2,(r1)
 1194  00001cd4  60410030	seqi	r1,r2,#48
 1195  00001cd8  10200074	beqz	r1,L81_LF2
 1196  00001cdc  54000000	nop; delay slot nop
 1197  00001ce0  8fc20000	lw	r2,(r30)
 1198  00001ce4  20410001	addi	r1,r2,#1
 1199  00001ce8  00011020	add	r2,r0,r1
 1200  00001cec  afc20000	sw	(r30),r2
 1201  00001cf0  8fc10000	lw	r1,(r30)
 1202  00001cf4  90220000	lbu	r2,(r1)
 1203  00001cf8  60410078	seqi	r1,r2,#120
 1204  00001cfc  14200020	bnez	r1,L83_LF2
 1205  00001d00  54000000	nop; delay slot nop
 1206  00001d04  8fc10000	lw	r1,(r30)
 1207  00001d08  90220000	lbu	r2,(r1)
 1208  00001d0c  60410058	seqi	r1,r2,#88
 1209  00001d10  1420000c	bnez	r1,L83_LF2
 1210  00001d14  54000000	nop; delay slot nop
 1211  00001d18  08000024	j	L82_LF2
 1212  00001d1c  54000000	nop; delay slot nop
 1213  00001d20          	L83_LF2:
 1214  00001d20  20010010	addi	r1,r0,#16
 1215  00001d24  afc10008	sw	8(r30),r1
 1216  00001d28  8fc20000	lw	r2,(r30)
 1217  00001d2c  20410001	addi	r1,r2,#1
 1218  00001d30  00011020	add	r2,r0,r1
 1219  00001d34  afc20000	sw	(r30),r2
 1220  00001d38  0800000c	j	L84_LF2
 1221  00001d3c  54000000	nop; delay slot nop
 1222  00001d40          	L82_LF2:
 1223  00001d40  20010008	addi	r1,r0,#8
 1224  00001d44  afc10008	sw	8(r30),r1
 1225  00001d48          	L84_LF2:
 1226  00001d48  0800000c	j	L80_LF2
 1227  00001d4c  54000000	nop; delay slot nop
 1228  00001d50          	L81_LF2:
 1229  00001d50  2001000a	addi	r1,r0,#10
 1230  00001d54  afc10008	sw	8(r30),r1
 1231  00001d58          	L85_LF2:
 1232  00001d58          	L80_LF2:
 1233  00001d58  8fc10008	lw	r1,8(r30)
 1234  00001d5c  70220000	slei	r2,r1,#0
 1235  00001d60  1440001c	bnez	r2,L87_LF2
 1236  00001d64  54000000	nop; delay slot nop
 1237  00001d68  8fc10008	lw	r1,8(r30)
 1238  00001d6c  6c220010	sgti	r2,r1,#16
 1239  00001d70  1440000c	bnez	r2,L87_LF2
 1240  00001d74  54000000	nop; delay slot nop
 1241  00001d78  08000010	j	L86_LF2
 1242  00001d7c  54000000	nop; delay slot nop
 1243  00001d80          	L87_LF2:
 1244  00001d80  8fc1fff4	lw	r1,-12(r30)
 1245  00001d84  08000188	j	L72_LF2
 1246  00001d88  54000000	nop; delay slot nop
 1247  00001d8c          	L86_LF2:
 1248  00001d8c  54000000	nop
 1249  00001d90          	L88_LF2:
 1250  00001d90  8fc10000	lw	r1,(r30)
 1251  00001d94  90220000	lbu	r2,(r1)
 1252  00001d98  6c41002f	sgtui	r1,r2,#47
 1253  00001d9c  10200030	beqz	r1,L91_LF2
 1254  00001da0  54000000	nop; delay slot nop
 1255  00001da4  8fc10000	lw	r1,(r30)
 1256  00001da8  90220000	lbu	r2,(r1)
 1257  00001dac  70410039	sleui	r1,r2,#57
 1258  00001db0  1020001c	beqz	r1,L91_LF2
 1259  00001db4  54000000	nop; delay slot nop
 1260  00001db8  8fc10000	lw	r1,(r30)
 1261  00001dbc  90220000	lbu	r2,(r1)
 1262  00001dc0  2041ffd0	addi	r1,r2,#-48
 1263  00001dc4  afc1fff0	sw	-16(r30),r1
 1264  00001dc8  0800008c	j	L92_LF2
 1265  00001dcc  54000000	nop; delay slot nop
 1266  00001dd0          	L91_LF2:
 1267  00001dd0  8fc10000	lw	r1,(r30)
 1268  00001dd4  90220000	lbu	r2,(r1)
 1269  00001dd8  6c410060	sgtui	r1,r2,#96
 1270  00001ddc  10200030	beqz	r1,L93_LF2
 1271  00001de0  54000000	nop; delay slot nop
 1272  00001de4  8fc10000	lw	r1,(r30)
 1273  00001de8  90220000	lbu	r2,(r1)
 1274  00001dec  7041007a	sleui	r1,r2,#122
 1275  00001df0  1020001c	beqz	r1,L93_LF2
 1276  00001df4  54000000	nop; delay slot nop
 1277  00001df8  8fc10000	lw	r1,(r30)
 1278  00001dfc  90220000	lbu	r2,(r1)
 1279  00001e00  2041ffa9	addi	r1,r2,#-87
 1280  00001e04  afc1fff0	sw	-16(r30),r1
 1281  00001e08  0800004c	j	L92_LF2
 1282  00001e0c  54000000	nop; delay slot nop
 1283  00001e10          	L93_LF2:
 1284  00001e10  8fc10000	lw	r1,(r30)
 1285  00001e14  90220000	lbu	r2,(r1)
 1286  00001e18  6c410040	sgtui	r1,r2,#64
 1287  00001e1c  10200030	beqz	r1,L95_LF2
 1288  00001e20  54000000	nop; delay slot nop
 1289  00001e24  8fc10000	lw	r1,(r30)
 1290  00001e28  90220000	lbu	r2,(r1)
 1291  00001e2c  7041005a	sleui	r1,r2,#90
 1292  00001e30  1020001c	beqz	r1,L95_LF2
 1293  00001e34  54000000	nop; delay slot nop
 1294  00001e38  8fc10000	lw	r1,(r30)
 1295  00001e3c  90220000	lbu	r2,(r1)
 1296  00001e40  2041ffc9	addi	r1,r2,#-55
 1297  00001e44  afc1fff0	sw	-16(r30),r1
 1298  00001e48  0800000c	j	L92_LF2
 1299  00001e4c  54000000	nop; delay slot nop
 1300  00001e50          	L95_LF2:
 1301  00001e50  200103e8	addi	r1,r0,#1000
 1302  00001e54  afc1fff0	sw	-16(r30),r1
 1303  00001e58          	L96_LF2:
 1304  00001e58          	L94_LF2:
 1305  00001e58          	L92_LF2:
 1306  00001e58  8fc1fff0	lw	r1,-16(r30)
 1307  00001e5c  8fc20008	lw	r2,8(r30)
 1308  00001e60  0022082a	slt	r1,r1,r2
 1309  00001e64  10200040	beqz	r1,L90_LF2
 1310  00001e68  54000000	nop; delay slot nop
 1311  00001e6c  8fc1fff4	lw	r1,-12(r30)
 1312  00001e70  8fc20008	lw	r2,8(r30)
 1313  00001e74  00200035	movi2fp	f0,r1
 1314  00001e78  00400835	movi2fp	f1,r2
 1315  00001e7c  0401000e	mult	f0,f0,f1
 1316  00001e80  00000834	movfp2i	r1,f0
 1317  00001e84  afc1fff4	sw	-12(r30),r1
 1318  00001e88  8fc1fff4	lw	r1,-12(r30)
 1319  00001e8c  8fc2fff0	lw	r2,-16(r30)
 1320  00001e90  00220820	add	r1,r1,r2
 1321  00001e94  afc1fff4	sw	-12(r30),r1
 1322  00001e98  8fc20000	lw	r2,(r30)
 1323  00001e9c  20410001	addi	r1,r2,#1
 1324  00001ea0  00011020	add	r2,r0,r1
 1325  00001ea4  afc20000	sw	(r30),r2
 1326  00001ea8          	L97_LF2:
 1327  00001ea8          	L90_LF2:
 1328  00001ea8  8fc1fff0	lw	r1,-16(r30)
 1329  00001eac  8fc20008	lw	r2,8(r30)
 1330  00001eb0  0022082a	slt	r1,r1,r2
 1331  00001eb4  1420000c	bnez	r1,L98_LF2
 1332  00001eb8  54000000	nop; delay slot nop
 1333  00001ebc  0800000c	j	L89_LF2
 1334  00001ec0  54000000	nop; delay slot nop
 1335  00001ec4          	L98_LF2:
 1336  00001ec4  0bfffec8	j	L88_LF2
 1337  00001ec8  54000000	nop; delay slot nop
 1338  00001ecc          	L89_LF2:
 1339  00001ecc  8fc10004	lw	r1,4(r30)
 1340  00001ed0  64220000	snei	r2,r1,#0
 1341  00001ed4  10400010	beqz	r2,L99_LF2
 1342  00001ed8  54000000	nop; delay slot nop
 1343  00001edc  8fc10004	lw	r1,4(r30)
 1344  00001ee0  8fc20000	lw	r2,(r30)
 1345  00001ee4  ac220000	sw	(r1),r2
 1346  00001ee8          	L99_LF2:
 1347  00001ee8  8fc1fff4	lw	r1,-12(r30)
 1348  00001eec  8fc2ffec	lw	r2,-20(r30)
 1349  00001ef0  00200035	movi2fp	f0,r1
 1350  00001ef4  00400835	movi2fp	f1,r2
 1351  00001ef8  0401000e	mult	f0,f0,f1
 1352  00001efc  00000834	movfp2i	r1,f0
 1353  00001f00  afc1fff4	sw	-12(r30),r1
 1354  00001f04  8fc1fff4	lw	r1,-12(r30)
 1355  00001f08  08000004	j	L72_LF2
 1356  00001f0c  54000000	nop; delay slot nop
 1357  00001f10          	L72_LF2:
 1358  00001f10  8fa20000	lw	r2,0(r29)
 1359  00001f14  8fdffff8	lw	r31,-8(r30)
 1360  00001f18  001ee820	add	r29,r0,r30
 1361  00001f1c  8fdefffc	lw	r30,-4(r30)
 1362  00001f20  4be00000	jr	r31
 1363  00001f24  54000000	nop
 1364  00001f28          	.endproc _dstrtol
 1365  00001f28          	.align 2
 1366  00001f28          	.proc _bcopy
 1367  00001f28          	.global _bcopy
 1368  00001f28          	_bcopy:
 1369                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1370  00001f28  afbefffc	sw	-4(r29),r30; push fp
 1371  00001f2c  001df020	add	r30,r0,r29; fp = sp
 1372  00001f30  afbffff8	sw	-8(r29),r31; push ret addr
 1373  00001f34  2fbd0010	subui	r29,r29,#16; alloc local storage
 1374  00001f38  afa20000	sw	0(r29),r2
 1375  00001f3c  afa30004	sw	4(r29),r3
 1376  00001f40  54000000	nop
 1377  00001f44          	L101_LF2:
 1378  00001f44  8fc10008	lw	r1,8(r30)
 1379  00001f48  2022ffff	addi	r2,r1,#-1
 1380  00001f4c  afc20008	sw	8(r30),r2
 1381  00001f50  6c210000	sgti	r1,r1,#0
 1382  00001f54  1420000c	bnez	r1,L103_LF2
 1383  00001f58  54000000	nop; delay slot nop
 1384  00001f5c  0800002c	j	L102_LF2
 1385  00001f60  54000000	nop; delay slot nop
 1386  00001f64          	L103_LF2:
 1387  00001f64  8fc10004	lw	r1,4(r30)
 1388  00001f68  20220001	addi	r2,r1,#1
 1389  00001f6c  afc20004	sw	4(r30),r2
 1390  00001f70  8fc20000	lw	r2,(r30)
 1391  00001f74  20430001	addi	r3,r2,#1
 1392  00001f78  afc30000	sw	(r30),r3
 1393  00001f7c  80420000	lb	r2,(r2)
 1394  00001f80  a0220000	sb	(r1),r2
 1395  00001f84  0bffffbc	j	L101_LF2
 1396  00001f88  54000000	nop; delay slot nop
 1397  00001f8c          	L102_LF2:
 1398  00001f8c          	L100_LF2:
 1399  00001f8c  8fa20000	lw	r2,0(r29)
 1400  00001f90  8fa30004	lw	r3,4(r29)
 1401  00001f94  8fdffff8	lw	r31,-8(r30)
 1402  00001f98  001ee820	add	r29,r0,r30
 1403  00001f9c  8fdefffc	lw	r30,-4(r30)
 1404  00001fa0  4be00000	jr	r31
 1405  00001fa4  54000000	nop
 1406  00001fa8          	.endproc _bcopy
 1407  00001fa8          	.align 2
 1408  00001fa8          	.proc _bzero
 1409  00001fa8          	.global _bzero
 1410  00001fa8          	_bzero:
 1411                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1412  00001fa8  afbefffc	sw	-4(r29),r30; push fp
 1413  00001fac  001df020	add	r30,r0,r29; fp = sp
 1414  00001fb0  afbffff8	sw	-8(r29),r31; push ret addr
 1415  00001fb4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1416  00001fb8  afa20000	sw	0(r29),r2
 1417  00001fbc  54000000	nop
 1418  00001fc0          	L105_LF2:
 1419  00001fc0  8fc10004	lw	r1,4(r30)
 1420  00001fc4  2022ffff	addi	r2,r1,#-1
 1421  00001fc8  afc20004	sw	4(r30),r2
 1422  00001fcc  6c210000	sgti	r1,r1,#0
 1423  00001fd0  1420000c	bnez	r1,L107_LF2
 1424  00001fd4  54000000	nop; delay slot nop
 1425  00001fd8  08000020	j	L106_LF2
 1426  00001fdc  54000000	nop; delay slot nop
 1427  00001fe0          	L107_LF2:
 1428  00001fe0  8fc10000	lw	r1,(r30)
 1429  00001fe4  20220001	addi	r2,r1,#1
 1430  00001fe8  afc20000	sw	(r30),r2
 1431  00001fec  20020000	addi	r2,r0,(#0x0)&0xff
 1432  00001ff0  a0220000	sb	(r1),r2
 1433  00001ff4  0bffffc8	j	L105_LF2
 1434  00001ff8  54000000	nop; delay slot nop
 1435  00001ffc          	L106_LF2:
 1436  00001ffc          	L104_LF2:
 1437  00001ffc  8fa20000	lw	r2,0(r29)
 1438  00002000  8fdffff8	lw	r31,-8(r30)
 1439  00002004  001ee820	add	r29,r0,r30
 1440  00002008  8fdefffc	lw	r30,-4(r30)
 1441  0000200c  4be00000	jr	r31
 1442  00002010  54000000	nop
 1443  00002014          	.endproc _bzero
 1444  00002014          	.align 2
 1445  00002014          	.proc _min
 1446  00002014          	.global _min
 1447  00002014          	_min:
 1448                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1449  00002014  afbefffc	sw	-4(r29),r30; push fp
 1450  00002018  001df020	add	r30,r0,r29; fp = sp
 1451  0000201c  afbffff8	sw	-8(r29),r31; push ret addr
 1452  00002020  2fbd0010	subui	r29,r29,#16; alloc local storage
 1453  00002024  afa20000	sw	0(r29),r2
 1454  00002028  afa30004	sw	4(r29),r3
 1455  0000202c  8fc10000	lw	r1,(r30)
 1456  00002030  8fc20004	lw	r2,4(r30)
 1457  00002034  0022182c	sle	r3,r1,r2
 1458  00002038  14600008	bnez	r3,L109_LF2
 1459  0000203c  54000000	nop; delay slot nop
 1460  00002040  8fc10004	lw	r1,4(r30)
 1461  00002044          	L109_LF2:
 1462  00002044  08000004	j	L108_LF2
 1463  00002048  54000000	nop; delay slot nop
 1464  0000204c          	L108_LF2:
 1465  0000204c  8fa20000	lw	r2,0(r29)
 1466  00002050  8fa30004	lw	r3,4(r29)
 1467  00002054  8fdffff8	lw	r31,-8(r30)
 1468  00002058  001ee820	add	r29,r0,r30
 1469  0000205c  8fdefffc	lw	r30,-4(r30)
 1470  00002060  4be00000	jr	r31
 1471  00002064  54000000	nop
 1472  00002068          	.endproc _min
 1473  00002068          	.align 2
 1474  00002068          	.proc _max
 1475  00002068          	.global _max
 1476  00002068          	_max:
 1477                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1478  00002068  afbefffc	sw	-4(r29),r30; push fp
 1479  0000206c  001df020	add	r30,r0,r29; fp = sp
 1480  00002070  afbffff8	sw	-8(r29),r31; push ret addr
 1481  00002074  2fbd0010	subui	r29,r29,#16; alloc local storage
 1482  00002078  afa20000	sw	0(r29),r2
 1483  0000207c  afa30004	sw	4(r29),r3
 1484  00002080  8fc10000	lw	r1,(r30)
 1485  00002084  8fc20004	lw	r2,4(r30)
 1486  00002088  0022182d	sge	r3,r1,r2
 1487  0000208c  14600008	bnez	r3,L111_LF2
 1488  00002090  54000000	nop; delay slot nop
 1489  00002094  8fc10004	lw	r1,4(r30)
 1490  00002098          	L111_LF2:
 1491  00002098  08000004	j	L110_LF2
 1492  0000209c  54000000	nop; delay slot nop
 1493  000020a0          	L110_LF2:
 1494  000020a0  8fa20000	lw	r2,0(r29)
 1495  000020a4  8fa30004	lw	r3,4(r29)
 1496  000020a8  8fdffff8	lw	r31,-8(r30)
 1497  000020ac  001ee820	add	r29,r0,r30
 1498  000020b0  8fdefffc	lw	r30,-4(r30)
 1499  000020b4  4be00000	jr	r31
 1500  000020b8  54000000	nop
 1501  000020bc          	.endproc _max
 1502                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1503                      ;;;
 1504                      ;;; Most of the traps are called in files from libtraps.
 1507  000020bc          	.align 2
 1508  000020bc          	.proc _exit
 1509  000020bc          	.global _exit
 1510  000020bc          	_exit:
 1511  000020bc  44000300	trap	#0x300
 1512  000020c0  4be00000	jr	r31
 1513  000020c4  54000000	nop
 1514  000020c8          	.endproc _exit
 1516                      ; for the benefit of gcc.
 1517  000020c8          	.proc ___main
 1518  000020c8          	.global ___main
 1519  000020c8          	___main:
 1520  000020c8  4be00000	jr	r31
 1521  000020cc  54000000	nop
 1522  000020d0          	.endproc ___main
 1523  000020d0          	.text
 1524  000020d0          	.global _etext
 1525  000020d0          	_etext:
 1526  000020d0          	.align 3
 1527  000020d0          	.data
 1528  0000307d          	.global _edata
 1529  0000307d          	_edata:
