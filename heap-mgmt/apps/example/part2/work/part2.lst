 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 205
    4                      ; Text size: 4344
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  41636365	.ascii "Accessing Memory at the MEM_MAX_VIRTUAL_ADDRESS + 1\n\000"
   85  00003038  7373696e	
   85  0000303c  67204d65	
   85  00003040  6d6f7279	
   85  00003044  20617420	
   85  00003048  74686520	
   85  0000304c  4d454d5f	
   85  00003050  4d41585f	
   85  00003054  56495254	
   85  00003058  55414c5f	
   85  0000305c  41444452	
   85  00003060  45535320	
   85  00003064  2b20310a	
   85  00003068  00      	
   86  00003069          	.align 2
   87  0000306c          	LC2_LF0:
   88  0000306c  41636365	.ascii "Accessing.... Location: %d Value: %d\n\000"
   88  00003070  7373696e	
   88  00003074  672e2e2e	
   88  00003078  2e204c6f	
   88  0000307c  63617469	
   88  00003080  6f6e3a20	
   88  00003084  25642056	
   88  00003088  616c7565	
   88  0000308c  3a202564	
   88  00003090  0a00    	
   89  00003092          	.align 2
   90  00003094          	LC3_LF0:
   91  00003094  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003098  6f5f776f	
   91  0000309c  726c6420	
   91  000030a0  28256429	
   91  000030a4  3a204261	
   91  000030a8  64207365	
   91  000030ac  6d617068	
   91  000030b0  6f726520	
   91  000030b4  735f7072	
   91  000030b8  6f63735f	
   91  000030bc  636f6d70	
   91  000030c0  6c657465	
   91  000030c4  64202825	
   91  000030c8  6429210a	
   91  000030cc  00      	
   92  000030cd          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c001000	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c00011c	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c00021c	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000ab0	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011020	add	r2,r0,r1
  129  0000114c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  130  00001150  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  131  00001154  afa40000	sw	(r29),r4
  132  00001158  0c0000d4	jal	_Printf
  133  0000115c  54000000	nop; not filled.
  134  00001160  3c010010	lhi	r1,#16
  135  00001164  24210001	addui	r1,r1,#1
  136  00001168  20040050	addi	r4,r0,#80
  137  0000116c  ac240000	sw	(r1),r4
  138  00001170  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  139  00001174  2484306c	addui	r4,r4,(LC2_LF0)&0xffff
  140  00001178  afa40000	sw	(r29),r4
  141  0000117c  afa10004	sw	4(r29),r1
  142  00001180  8c210000	lw	r1,(r1)
  143  00001184  afa10008	sw	8(r29),r1
  144  00001188  0c0000a4	jal	_Printf
  145  0000118c  54000000	nop; not filled.
  146  00001190  afa20000	sw	(r29),r2
  147  00001194  0c0000ec	jal	_sem_signal
  148  00001198  54000000	nop; not filled.
  149  0000119c  23bd0010	addi	r29,r29,#16
  150  000011a0  64210001	snei	r1,r1,#1
  151  000011a4  10200038	beqz	r1,L18_LF0
  152  000011a8  54000000	nop; not filled.
  153  000011ac  0c00008c	jal	_getpid
  154  000011b0  54000000	nop; not filled.
  155  000011b4  23bdfff0	addi	r29,r29,#-16
  156  000011b8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  157  000011bc  24843094	addui	r4,r4,(LC3_LF0)&0xffff
  158  000011c0  afa40000	sw	(r29),r4
  159  000011c4  afa10004	sw	4(r29),r1
  160  000011c8  afa20008	sw	8(r29),r2
  161  000011cc  0c000060	jal	_Printf
  162  000011d0  54000000	nop; not filled.
  163  000011d4  0c000160	jal	_Exit
  164  000011d8  54000000	nop; not filled.
  165  000011dc  23bd0010	addi	r29,r29,#16
  166  000011e0          	L18_LF0:
  167  000011e0  0c000f00	jal	_exit
  168  000011e4  54000000	nop
  169  000011e8          	.endproc _main
  170                      ;;;
  171                      ;;; Stub functions for DLX traps.
  172                      ;;;
  173                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  174                      ;;;
  175                      ;;; The traps such as Open and Close
  176                      ;;; (note the capital letters) are for use by user programs.  The traps
  177                      ;;; with names such as open and close (lower case) are for use by the OS.
  178                      ;;;
  181  000011e8          	.align 2
  183                      ;;; The following are the traps to be used by user-level programs
  184                      ;;;
  186  000011e8          	.align 2
  187  000011e8          	.proc _Open
  188  000011e8          	.global _Open
  189  000011e8          	_Open:
  190                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  191                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  192                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  193  000011e8  44000213	trap	#0x213
  194  000011ec  4be00000	jr	r31
  195  000011f0  54000000	nop
  196  000011f4          	.endproc _Open
  198  000011f4          	.proc _Close
  199  000011f4          	.global _Close
  200  000011f4          	_Close:
  201  000011f4  44000214	trap	#0x214
  202  000011f8  4be00000	jr	r31
  203  000011fc  54000000	nop
  204  00001200          	.endproc _Close
  206  00001200          	.proc _Read
  207  00001200          	.global _Read
  208  00001200          	_Read:
  209  00001200  44000210	trap	#0x210
  210  00001204  4be00000	jr	r31
  211  00001208  54000000	nop
  212  0000120c          	.endproc _Read
  214  0000120c          	.proc _Write
  215  0000120c          	.global _Write
  216  0000120c          	_Write:
  217  0000120c  44000211	trap	#0x211
  218  00001210  4be00000	jr	r31
  219  00001214  54000000	nop
  220  00001218          	.endproc _Write
  222  00001218          	.proc _Lseek
  223  00001218          	.global _Lseek
  224  00001218          	_Lseek:
  225  00001218  44000212	trap	#0x212
  226  0000121c  4be00000	jr	r31
  227  00001220  54000000	nop
  228  00001224          	.endproc _Lseek
  230  00001224          	.proc _Putchar
  231  00001224          	.global _Putchar
  232  00001224          	_Putchar:
  233  00001224  44000280	trap	#0x280
  234  00001228  4be00000	jr	r31
  235  0000122c  54000000	nop
  236  00001230          	.endproc _Putchar
  238  00001230          	.proc _Printf
  239  00001230          	.global _Printf
  240  00001230          	_Printf:
  241  00001230  44000201	trap	#0x201
  242  00001234  4be00000	jr	r31
  243  00001238  54000000	nop
  244  0000123c          	.endproc _Printf
  246  0000123c          	.proc _getpid
  247  0000123c          	.global _getpid
  248  0000123c          	_getpid:
  249  0000123c  44000431	trap	#0x431
  250  00001240  4be00000	jr	r31
  251  00001244  54000000	nop
  252  00001248          	.endproc _getpid
  254  00001248          	.proc _process_create
  255  00001248          	.global _process_create
  256  00001248          	_process_create:
  257  00001248  44000432	trap	#0x432
  258  0000124c  4be00000	jr	r31
  259  00001250  54000000	nop
  260  00001254          	.endproc _process_create
  262  00001254          	.proc _shmget
  263  00001254          	.global _shmget
  264  00001254          	_shmget:
  265  00001254  44000440	trap	#0x440
  266  00001258  4be00000	jr	r31
  267  0000125c  54000000	nop
  268  00001260          	.endproc _shmget
  270  00001260          	.proc _shmat
  271  00001260          	.global _shmat
  272  00001260          	_shmat:
  273  00001260  44000441	trap	#0x441
  274  00001264  4be00000	jr	r31
  275  00001268  54000000	nop
  276  0000126c          	.endproc _shmat
  278  0000126c          	.proc _sem_create
  279  0000126c          	.global _sem_create
  280  0000126c          	_sem_create:
  281  0000126c  44000450	trap	#0x450
  282  00001270  4be00000	jr	r31
  283  00001274  54000000	nop
  284  00001278          	.endproc _sem_create
  286  00001278          	.proc _sem_wait
  287  00001278          	.global _sem_wait
  288  00001278          	_sem_wait:
  289  00001278  44000451	trap	#0x451
  290  0000127c  4be00000	jr	r31
  291  00001280  54000000	nop
  292  00001284          	.endproc _sem_wait
  294  00001284          	.proc _sem_signal
  295  00001284          	.global _sem_signal
  296  00001284          	_sem_signal:
  297  00001284  44000452	trap	#0x452
  298  00001288  4be00000	jr	r31
  299  0000128c  54000000	nop
  300  00001290          	.endproc _sem_signal
  302  00001290          	.proc _lock_create
  303  00001290          	.global _lock_create
  304  00001290          	_lock_create:
  305  00001290  44000453	trap	#0x453
  306  00001294  4be00000	jr	r31
  307  00001298  54000000	nop
  308  0000129c          	.endproc _lock_create
  310  0000129c          	.proc _lock_acquire
  311  0000129c          	.global _lock_acquire
  312  0000129c          	_lock_acquire:
  313  0000129c  44000454	trap	#0x454
  314  000012a0  4be00000	jr	r31
  315  000012a4  54000000	nop
  316  000012a8          	.endproc _lock_acquire
  318  000012a8          	.proc _lock_release
  319  000012a8          	.global _lock_release
  320  000012a8          	_lock_release:
  321  000012a8  44000455	trap	#0x455
  322  000012ac  4be00000	jr	r31
  323  000012b0  54000000	nop
  324  000012b4          	.endproc _lock_release
  326  000012b4          	.proc _cond_create
  327  000012b4          	.global _cond_create
  328  000012b4          	_cond_create:
  329  000012b4  44000456	trap	#0x456
  330  000012b8  4be00000	jr	r31
  331  000012bc  54000000	nop
  332  000012c0          	.endproc _cond_create
  334  000012c0          	.proc _cond_wait
  335  000012c0          	.global _cond_wait
  336  000012c0          	_cond_wait:
  337  000012c0  44000457	trap	#0x457
  338  000012c4  4be00000	jr	r31
  339  000012c8  54000000	nop
  340  000012cc          	.endproc _cond_wait
  342  000012cc          	.proc _cond_signal
  343  000012cc          	.global _cond_signal
  344  000012cc          	_cond_signal:
  345  000012cc  44000458	trap	#0x458
  346  000012d0  4be00000	jr	r31
  347  000012d4  54000000	nop
  348  000012d8          	.endproc _cond_signal
  350  000012d8          	.proc _cond_broadcast
  351  000012d8          	.global _cond_broadcast
  352  000012d8          	_cond_broadcast:
  353  000012d8  44000459	trap	#0x459
  354  000012dc  4be00000	jr	r31
  355  000012e0  54000000	nop
  356  000012e4          	.endproc _cond_broadcast
  358  000012e4          	.proc _mbox_create
  359  000012e4          	.global _mbox_create
  360  000012e4          	_mbox_create:
  361  000012e4  44000460	trap	#0x460
  362  000012e8  4be00000	jr	r31
  363  000012ec  54000000	nop
  364  000012f0          	.endproc _mbox_create
  366  000012f0          	.proc _mbox_open
  367  000012f0          	.global _mbox_open
  368  000012f0          	_mbox_open:
  369  000012f0  44000461	trap	#0x461
  370  000012f4  4be00000	jr	r31
  371  000012f8  54000000	nop
  372  000012fc          	.endproc _mbox_open
  374  000012fc          	.proc _mbox_close
  375  000012fc          	.global _mbox_close
  376  000012fc          	_mbox_close:
  377  000012fc  44000462	trap	#0x462
  378  00001300  4be00000	jr	r31
  379  00001304  54000000	nop
  380  00001308          	.endproc _mbox_close
  382  00001308          	.proc _mbox_send
  383  00001308          	.global _mbox_send
  384  00001308          	_mbox_send:
  385  00001308  44000463	trap	#0x463
  386  0000130c  4be00000	jr	r31
  387  00001310  54000000	nop
  388  00001314          	.endproc _mbox_send
  390  00001314          	.proc _mbox_recv
  391  00001314          	.global _mbox_recv
  392  00001314          	_mbox_recv:
  393  00001314  44000464	trap	#0x464
  394  00001318  4be00000	jr	r31
  395  0000131c  54000000	nop
  396  00001320          	.endproc _mbox_recv
  398  00001320          	.proc _sleep
  399  00001320          	.global _sleep
  400  00001320          	_sleep:
  401  00001320  44000465	trap	#0x465
  402  00001324  4be00000	jr	r31
  403  00001328  54000000	nop
  404  0000132c          	.endproc _sleep
  406  0000132c          	.proc _yield
  407  0000132c          	.global _yield
  408  0000132c          	_yield:
  409  0000132c  44000466	trap	#0x466
  410  00001330  4be00000	jr	r31
  411  00001334  54000000	nop
  412  00001338          	.endproc _yield
  415  00001338          	.proc _Exit
  416  00001338          	.global _Exit
  417  00001338          	_Exit:
  418  00001338  44000500	trap	#0x500
  419  0000133c  4be00000	jr	r31
  420  00001340  54000000	nop
  421  00001344          	.endproc _Exit
  424  00001344          	.proc _malloc
  425  00001344          	.global _malloc
  426  00001344          	_malloc:
  427  00001344  44000467	trap	#0x467
  428  00001348  4be00000	jr	r31
  429  0000134c          	.endproc _malloc
  432  0000134c          	.proc _mfree
  433  0000134c          	.global _mfree
  434  0000134c          	_mfree:
  435  0000134c  44000468	trap	#0x468
  436  00001350  4be00000	jr	r31
  437  00001354          	.endproc _mfree
  438                      ; Compiled by GCC
  440  00001354          	.align 2
  441  00001354          	.proc _isspace
  442  00001354          	.global _isspace
  443  00001354          	_isspace:
  444                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  445  00001354  afbefffc	sw	-4(r29),r30; push fp
  446  00001358  001df020	add	r30,r0,r29; fp = sp
  447  0000135c  afbffff8	sw	-8(r29),r31; push ret addr
  448  00001360  2fbd0018	subui	r29,r29,#24; alloc local storage
  449  00001364  afa20000	sw	0(r29),r2
  450  00001368  afa30004	sw	4(r29),r3
  451  0000136c  afa40008	sw	8(r29),r4
  452  00001370  83c20003	lb	r2,3(r30)
  453  00001374  20010000	addi	r1,r0,#0
  454  00001378  304300ff	andi	r3,r2,#0x00ff
  455  0000137c  60640020	seqi	r4,r3,#32
  456  00001380  1480002c	bnez	r4,L3_LF2
  457  00001384  54000000	nop; delay slot nop
  458  00001388  304300ff	andi	r3,r2,#0x00ff
  459  0000138c  60640009	seqi	r4,r3,#9
  460  00001390  1480001c	bnez	r4,L3_LF2
  461  00001394  54000000	nop; delay slot nop
  462  00001398  304300ff	andi	r3,r2,#0x00ff
  463  0000139c  6064000a	seqi	r4,r3,#10
  464  000013a0  1480000c	bnez	r4,L3_LF2
  465  000013a4  54000000	nop; delay slot nop
  466  000013a8  08000008	j	L2_LF2
  467  000013ac  54000000	nop; delay slot nop
  468  000013b0          	L3_LF2:
  469  000013b0  20010001	addi	r1,r0,#1
  470  000013b4          	L2_LF2:
  471  000013b4  08000004	j	L1_LF2
  472  000013b8  54000000	nop; delay slot nop
  473  000013bc          	L1_LF2:
  474  000013bc  8fa20000	lw	r2,0(r29)
  475  000013c0  8fa30004	lw	r3,4(r29)
  476  000013c4  8fa40008	lw	r4,8(r29)
  477  000013c8  8fdffff8	lw	r31,-8(r30)
  478  000013cc  001ee820	add	r29,r0,r30
  479  000013d0  8fdefffc	lw	r30,-4(r30)
  480  000013d4  4be00000	jr	r31
  481  000013d8  54000000	nop
  482  000013dc          	.endproc _isspace
  483  000013dc          	.align 2
  484  000013dc          	.proc _isxdigit
  485  000013dc          	.global _isxdigit
  486  000013dc          	_isxdigit:
  487                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  488  000013dc  afbefffc	sw	-4(r29),r30; push fp
  489  000013e0  001df020	add	r30,r0,r29; fp = sp
  490  000013e4  afbffff8	sw	-8(r29),r31; push ret addr
  491  000013e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  492  000013ec  afa20000	sw	0(r29),r2
  493  000013f0  afa30004	sw	4(r29),r3
  494  000013f4  afa40008	sw	8(r29),r4
  495  000013f8  83c20003	lb	r2,3(r30)
  496  000013fc  20010000	addi	r1,r0,#0
  497  00001400  304300ff	andi	r3,r2,#0x00ff
  498  00001404  6c64002f	sgtui	r4,r3,#47
  499  00001408  1080001c	beqz	r4,L7_LF2
  500  0000140c  54000000	nop; delay slot nop
  501  00001410  304300ff	andi	r3,r2,#0x00ff
  502  00001414  70640039	sleui	r4,r3,#57
  503  00001418  1480005c	bnez	r4,L6_LF2
  504  0000141c  54000000	nop; delay slot nop
  505  00001420  08000004	j	L7_LF2
  506  00001424  54000000	nop; delay slot nop
  507  00001428          	L7_LF2:
  508  00001428  304300ff	andi	r3,r2,#0x00ff
  509  0000142c  6c640060	sgtui	r4,r3,#96
  510  00001430  1080001c	beqz	r4,L8_LF2
  511  00001434  54000000	nop; delay slot nop
  512  00001438  304300ff	andi	r3,r2,#0x00ff
  513  0000143c  70640066	sleui	r4,r3,#102
  514  00001440  14800034	bnez	r4,L6_LF2
  515  00001444  54000000	nop; delay slot nop
  516  00001448  08000004	j	L8_LF2
  517  0000144c  54000000	nop; delay slot nop
  518  00001450          	L8_LF2:
  519  00001450  304300ff	andi	r3,r2,#0x00ff
  520  00001454  6c640040	sgtui	r4,r3,#64
  521  00001458  10800020	beqz	r4,L5_LF2
  522  0000145c  54000000	nop; delay slot nop
  523  00001460  304300ff	andi	r3,r2,#0x00ff
  524  00001464  70640041	sleui	r4,r3,#65
  525  00001468  1480000c	bnez	r4,L6_LF2
  526  0000146c  54000000	nop; delay slot nop
  527  00001470  08000008	j	L5_LF2
  528  00001474  54000000	nop; delay slot nop
  529  00001478          	L6_LF2:
  530  00001478  20010001	addi	r1,r0,#1
  531  0000147c          	L5_LF2:
  532  0000147c  08000004	j	L4_LF2
  533  00001480  54000000	nop; delay slot nop
  534  00001484          	L4_LF2:
  535  00001484  8fa20000	lw	r2,0(r29)
  536  00001488  8fa30004	lw	r3,4(r29)
  537  0000148c  8fa40008	lw	r4,8(r29)
  538  00001490  8fdffff8	lw	r31,-8(r30)
  539  00001494  001ee820	add	r29,r0,r30
  540  00001498  8fdefffc	lw	r30,-4(r30)
  541  0000149c  4be00000	jr	r31
  542  000014a0  54000000	nop
  543  000014a4          	.endproc _isxdigit
  544  000014a4          	.align 2
  545  000014a4          	.proc _dstrcpy
  546  000014a4          	.global _dstrcpy
  547  000014a4          	_dstrcpy:
  548                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  549  000014a4  afbefffc	sw	-4(r29),r30; push fp
  550  000014a8  001df020	add	r30,r0,r29; fp = sp
  551  000014ac  afbffff8	sw	-8(r29),r31; push ret addr
  552  000014b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  553  000014b4  afa20000	sw	0(r29),r2
  554  000014b8  afa30004	sw	4(r29),r3
  555  000014bc  8fc10000	lw	r1,(r30)
  556  000014c0  afc1fff4	sw	-12(r30),r1
  557  000014c4          	L10_LF2:
  558  000014c4  8fc10000	lw	r1,(r30)
  559  000014c8  20220001	addi	r2,r1,#1
  560  000014cc  afc20000	sw	(r30),r2
  561  000014d0  8fc20004	lw	r2,4(r30)
  562  000014d4  20430001	addi	r3,r2,#1
  563  000014d8  afc30004	sw	4(r30),r3
  564  000014dc  80420000	lb	r2,(r2)
  565  000014e0  a0220000	sb	(r1),r2
  566  000014e4  a3c2fff3	sb	-13(r30),r2
  567  000014e8          	L12_LF2:
  568  000014e8  93c1fff3	lbu	r1,-13(r30)
  569  000014ec  64220000	snei	r2,r1,#0
  570  000014f0  1440000c	bnez	r2,L13_LF2
  571  000014f4  54000000	nop; delay slot nop
  572  000014f8  0800000c	j	L11_LF2
  573  000014fc  54000000	nop; delay slot nop
  574  00001500          	L13_LF2:
  575  00001500  0bffffc0	j	L10_LF2
  576  00001504  54000000	nop; delay slot nop
  577  00001508          	L11_LF2:
  578  00001508  8fc1fff4	lw	r1,-12(r30)
  579  0000150c  08000004	j	L9_LF2
  580  00001510  54000000	nop; delay slot nop
  581  00001514          	L9_LF2:
  582  00001514  8fa20000	lw	r2,0(r29)
  583  00001518  8fa30004	lw	r3,4(r29)
  584  0000151c  8fdffff8	lw	r31,-8(r30)
  585  00001520  001ee820	add	r29,r0,r30
  586  00001524  8fdefffc	lw	r30,-4(r30)
  587  00001528  4be00000	jr	r31
  588  0000152c  54000000	nop
  589  00001530          	.endproc _dstrcpy
  590  00001530          	.align 2
  591  00001530          	.proc _dstrncpy
  592  00001530          	.global _dstrncpy
  593  00001530          	_dstrncpy:
  594                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  595  00001530  afbefffc	sw	-4(r29),r30; push fp
  596  00001534  001df020	add	r30,r0,r29; fp = sp
  597  00001538  afbffff8	sw	-8(r29),r31; push ret addr
  598  0000153c  2fbd0018	subui	r29,r29,#24; alloc local storage
  599  00001540  afa20000	sw	0(r29),r2
  600  00001544  afa30004	sw	4(r29),r3
  601  00001548  8fc10000	lw	r1,(r30)
  602  0000154c  afc1fff4	sw	-12(r30),r1
  603  00001550          	L15_LF2:
  604  00001550  8fc10008	lw	r1,8(r30)
  605  00001554  2022ffff	addi	r2,r1,#-1
  606  00001558  afc20008	sw	8(r30),r2
  607  0000155c  70210000	slei	r1,r1,#0
  608  00001560  1020000c	beqz	r1,L18_LF2
  609  00001564  54000000	nop; delay slot nop
  610  00001568  08000048	j	L16_LF2
  611  0000156c  54000000	nop; delay slot nop
  612  00001570          	L18_LF2:
  613  00001570  8fc10000	lw	r1,(r30)
  614  00001574  20220001	addi	r2,r1,#1
  615  00001578  afc20000	sw	(r30),r2
  616  0000157c  8fc20004	lw	r2,4(r30)
  617  00001580  20430001	addi	r3,r2,#1
  618  00001584  afc30004	sw	4(r30),r3
  619  00001588  80420000	lb	r2,(r2)
  620  0000158c  a0220000	sb	(r1),r2
  621  00001590  a3c2fff3	sb	-13(r30),r2
  622  00001594          	L17_LF2:
  623  00001594  93c1fff3	lbu	r1,-13(r30)
  624  00001598  64220000	snei	r2,r1,#0
  625  0000159c  1440000c	bnez	r2,L19_LF2
  626  000015a0  54000000	nop; delay slot nop
  627  000015a4  0800000c	j	L16_LF2
  628  000015a8  54000000	nop; delay slot nop
  629  000015ac          	L19_LF2:
  630  000015ac  0bffffa0	j	L15_LF2
  631  000015b0  54000000	nop; delay slot nop
  632  000015b4          	L16_LF2:
  633  000015b4  8fc1fff4	lw	r1,-12(r30)
  634  000015b8  08000004	j	L14_LF2
  635  000015bc  54000000	nop; delay slot nop
  636  000015c0          	L14_LF2:
  637  000015c0  8fa20000	lw	r2,0(r29)
  638  000015c4  8fa30004	lw	r3,4(r29)
  639  000015c8  8fdffff8	lw	r31,-8(r30)
  640  000015cc  001ee820	add	r29,r0,r30
  641  000015d0  8fdefffc	lw	r30,-4(r30)
  642  000015d4  4be00000	jr	r31
  643  000015d8  54000000	nop
  644  000015dc          	.endproc _dstrncpy
  645  000015dc          	.align 2
  646  000015dc          	.proc _dstrcat
  647  000015dc          	.global _dstrcat
  648  000015dc          	_dstrcat:
  649                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  650  000015dc  afbefffc	sw	-4(r29),r30; push fp
  651  000015e0  001df020	add	r30,r0,r29; fp = sp
  652  000015e4  afbffff8	sw	-8(r29),r31; push ret addr
  653  000015e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  654  000015ec  afa20000	sw	0(r29),r2
  655  000015f0  8fc10000	lw	r1,(r30)
  656  000015f4  afc1fff4	sw	-12(r30),r1
  657  000015f8          	L21_LF2:
  658  000015f8  8fc10000	lw	r1,(r30)
  659  000015fc  90220000	lbu	r2,(r1)
  660  00001600  64410000	snei	r1,r2,#0
  661  00001604  1420000c	bnez	r1,L23_LF2
  662  00001608  54000000	nop; delay slot nop
  663  0000160c  0800001c	j	L22_LF2
  664  00001610  54000000	nop; delay slot nop
  665  00001614          	L23_LF2:
  666  00001614  8fc20000	lw	r2,(r30)
  667  00001618  20410001	addi	r1,r2,#1
  668  0000161c  00011020	add	r2,r0,r1
  669  00001620  afc20000	sw	(r30),r2
  670  00001624  0bffffd0	j	L21_LF2
  671  00001628  54000000	nop; delay slot nop
  672  0000162c          	L22_LF2:
  673  0000162c  23bdfff8	addi	r29,r29,#-8
  674  00001630  001d0820	add	r1,r0,r29
  675  00001634  8fc20000	lw	r2,(r30)
  676  00001638  ac220000	sw	(r1),r2
  677  0000163c  8fc20004	lw	r2,4(r30)
  678  00001640  ac220004	sw	4(r1),r2
  679  00001644  0ffffe5c	jal	_dstrcpy
  680  00001648  54000000	nop; delay slot nop
  681  0000164c  23bd0008	addi	r29,r29,#8
  682  00001650  8fc1fff4	lw	r1,-12(r30)
  683  00001654  08000004	j	L20_LF2
  684  00001658  54000000	nop; delay slot nop
  685  0000165c          	L20_LF2:
  686  0000165c  8fa20000	lw	r2,0(r29)
  687  00001660  8fdffff8	lw	r31,-8(r30)
  688  00001664  001ee820	add	r29,r0,r30
  689  00001668  8fdefffc	lw	r30,-4(r30)
  690  0000166c  4be00000	jr	r31
  691  00001670  54000000	nop
  692  00001674          	.endproc _dstrcat
  693  00001674          	.align 2
  694  00001674          	.proc _dstrncmp
  695  00001674          	.global _dstrncmp
  696  00001674          	_dstrncmp:
  697                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  698  00001674  afbefffc	sw	-4(r29),r30; push fp
  699  00001678  001df020	add	r30,r0,r29; fp = sp
  700  0000167c  afbffff8	sw	-8(r29),r31; push ret addr
  701  00001680  2fbd0018	subui	r29,r29,#24; alloc local storage
  702  00001684  afa20000	sw	0(r29),r2
  703  00001688  afa30004	sw	4(r29),r3
  704  0000168c  54000000	nop
  705  00001690  20010000	addi	r1,r0,#0
  706  00001694  afc1fff4	sw	-12(r30),r1
  707  00001698          	L25_LF2:
  708  00001698  8fc1fff4	lw	r1,-12(r30)
  709  0000169c  8fc20008	lw	r2,8(r30)
  710  000016a0  0022082a	slt	r1,r1,r2
  711  000016a4  1420000c	bnez	r1,L28_LF2
  712  000016a8  54000000	nop; delay slot nop
  713  000016ac  08000088	j	L26_LF2
  714  000016b0  54000000	nop; delay slot nop
  715  000016b4          	L28_LF2:
  716  000016b4  8fc10004	lw	r1,4(r30)
  717  000016b8  90220000	lbu	r2,(r1)
  718  000016bc  64410000	snei	r1,r2,#0
  719  000016c0  14200018	bnez	r1,L29_LF2
  720  000016c4  54000000	nop; delay slot nop
  721  000016c8  20010000	addi	r1,r0,#0
  722  000016cc  080000d8	j	L24_LF2
  723  000016d0  54000000	nop; delay slot nop
  724  000016d4  08000028	j	L30_LF2
  725  000016d8  54000000	nop; delay slot nop
  726  000016dc          	L29_LF2:
  727  000016dc  8fc10000	lw	r1,(r30)
  728  000016e0  8fc20004	lw	r2,4(r30)
  729  000016e4  90210000	lbu	r1,(r1)
  730  000016e8  90420000	lbu	r2,(r2)
  731  000016ec  00220829	sne	r1,r1,r2
  732  000016f0  1020000c	beqz	r1,L30_LF2
  733  000016f4  54000000	nop; delay slot nop
  734  000016f8  0800003c	j	L26_LF2
  735  000016fc  54000000	nop; delay slot nop
  736  00001700          	L31_LF2:
  737  00001700          	L30_LF2:
  738  00001700  8fc20000	lw	r2,(r30)
  739  00001704  20410001	addi	r1,r2,#1
  740  00001708  00011020	add	r2,r0,r1
  741  0000170c  afc20000	sw	(r30),r2
  742  00001710  8fc20004	lw	r2,4(r30)
  743  00001714  20410001	addi	r1,r2,#1
  744  00001718  00011020	add	r2,r0,r1
  745  0000171c  afc20004	sw	4(r30),r2
  746  00001720          	L27_LF2:
  747  00001720  8fc2fff4	lw	r2,-12(r30)
  748  00001724  20410001	addi	r1,r2,#1
  749  00001728  00011020	add	r2,r0,r1
  750  0000172c  afc2fff4	sw	-12(r30),r2
  751  00001730  0bffff64	j	L25_LF2
  752  00001734  54000000	nop; delay slot nop
  753  00001738          	L26_LF2:
  754  00001738  8fc1fff4	lw	r1,-12(r30)
  755  0000173c  8fc20008	lw	r2,8(r30)
  756  00001740  00220828	seq	r1,r1,r2
  757  00001744  10200018	beqz	r1,L32_LF2
  758  00001748  54000000	nop; delay slot nop
  759  0000174c  20010000	addi	r1,r0,#0
  760  00001750  08000054	j	L24_LF2
  761  00001754  54000000	nop; delay slot nop
  762  00001758  0800004c	j	L33_LF2
  763  0000175c  54000000	nop; delay slot nop
  764  00001760          	L32_LF2:
  765  00001760  8fc20000	lw	r2,(r30)
  766  00001764  90410000	lbu	r1,(r2)
  767  00001768  8fc20004	lw	r2,4(r30)
  768  0000176c  90430000	lbu	r3,(r2)
  769  00001770  00230822	sub	r1,r1,r3
  770  00001774  74220000	sgei	r2,r1,#0
  771  00001778  10400020	beqz	r2,L34_LF2
  772  0000177c  54000000	nop; delay slot nop
  773  00001780  8fc10000	lw	r1,(r30)
  774  00001784  8fc20004	lw	r2,4(r30)
  775  00001788  90210000	lbu	r1,(r1)
  776  0000178c  90420000	lbu	r2,(r2)
  777  00001790  00220829	sne	r1,r1,r2
  778  00001794  08000008	j	L35_LF2
  779  00001798  54000000	nop; delay slot nop
  780  0000179c          	L34_LF2:
  781  0000179c  2001ffff	addi	r1,r0,#-1
  782  000017a0          	L35_LF2:
  783  000017a0  08000004	j	L24_LF2
  784  000017a4  54000000	nop; delay slot nop
  785  000017a8          	L33_LF2:
  786  000017a8          	L24_LF2:
  787  000017a8  8fa20000	lw	r2,0(r29)
  788  000017ac  8fa30004	lw	r3,4(r29)
  789  000017b0  8fdffff8	lw	r31,-8(r30)
  790  000017b4  001ee820	add	r29,r0,r30
  791  000017b8  8fdefffc	lw	r30,-4(r30)
  792  000017bc  4be00000	jr	r31
  793  000017c0  54000000	nop
  794  000017c4          	.endproc _dstrncmp
  795  000017c4          	.align 2
  796  000017c4          	.proc _dstrlen
  797  000017c4          	.global _dstrlen
  798  000017c4          	_dstrlen:
  799                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  800  000017c4  afbefffc	sw	-4(r29),r30; push fp
  801  000017c8  001df020	add	r30,r0,r29; fp = sp
  802  000017cc  afbffff8	sw	-8(r29),r31; push ret addr
  803  000017d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  804  000017d4  afa20000	sw	0(r29),r2
  805  000017d8  20010000	addi	r1,r0,#0
  806  000017dc  afc1fff4	sw	-12(r30),r1
  807  000017e0          	L37_LF2:
  808  000017e0  8fc10000	lw	r1,(r30)
  809  000017e4  20220001	addi	r2,r1,#1
  810  000017e8  afc20000	sw	(r30),r2
  811  000017ec  90210000	lbu	r1,(r1)
  812  000017f0  64220000	snei	r2,r1,#0
  813  000017f4  1440000c	bnez	r2,L39_LF2
  814  000017f8  54000000	nop; delay slot nop
  815  000017fc  0800001c	j	L38_LF2
  816  00001800  54000000	nop; delay slot nop
  817  00001804          	L39_LF2:
  818  00001804  8fc2fff4	lw	r2,-12(r30)
  819  00001808  20410001	addi	r1,r2,#1
  820  0000180c  00011020	add	r2,r0,r1
  821  00001810  afc2fff4	sw	-12(r30),r2
  822  00001814  0bffffc8	j	L37_LF2
  823  00001818  54000000	nop; delay slot nop
  824  0000181c          	L38_LF2:
  825  0000181c  8fc1fff4	lw	r1,-12(r30)
  826  00001820  08000004	j	L36_LF2
  827  00001824  54000000	nop; delay slot nop
  828  00001828          	L36_LF2:
  829  00001828  8fa20000	lw	r2,0(r29)
  830  0000182c  8fdffff8	lw	r31,-8(r30)
  831  00001830  001ee820	add	r29,r0,r30
  832  00001834  8fdefffc	lw	r30,-4(r30)
  833  00001838  4be00000	jr	r31
  834  0000183c  54000000	nop
  835  00001840          	.endproc _dstrlen
  836  00001840          	.align 2
  837  00001840          	.proc _dstrstr
  838  00001840          	.global _dstrstr
  839  00001840          	_dstrstr:
  840                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  841  00001840  afbefffc	sw	-4(r29),r30; push fp
  842  00001844  001df020	add	r30,r0,r29; fp = sp
  843  00001848  afbffff8	sw	-8(r29),r31; push ret addr
  844  0000184c  2fbd0018	subui	r29,r29,#24; alloc local storage
  845  00001850  afa20000	sw	0(r29),r2
  846  00001854  23bdfff8	addi	r29,r29,#-8
  847  00001858  001d0820	add	r1,r0,r29
  848  0000185c  8fc20004	lw	r2,4(r30)
  849  00001860  ac220000	sw	(r1),r2
  850  00001864  0fffff5c	jal	_dstrlen
  851  00001868  54000000	nop; delay slot nop
  852  0000186c  23bd0008	addi	r29,r29,#8
  853  00001870  afc1fff4	sw	-12(r30),r1
  854  00001874          	L41_LF2:
  855  00001874  8fc10000	lw	r1,(r30)
  856  00001878  90220000	lbu	r2,(r1)
  857  0000187c  64410000	snei	r1,r2,#0
  858  00001880  1420000c	bnez	r1,L43_LF2
  859  00001884  54000000	nop; delay slot nop
  860  00001888  08000060	j	L42_LF2
  861  0000188c  54000000	nop; delay slot nop
  862  00001890          	L43_LF2:
  863  00001890  23bdfff0	addi	r29,r29,#-16
  864  00001894  001d0820	add	r1,r0,r29
  865  00001898  8fc20000	lw	r2,(r30)
  866  0000189c  ac220000	sw	(r1),r2
  867  000018a0  8fc20004	lw	r2,4(r30)
  868  000018a4  ac220004	sw	4(r1),r2
  869  000018a8  8fc2fff4	lw	r2,-12(r30)
  870  000018ac  ac220008	sw	8(r1),r2
  871  000018b0  0ffffdc0	jal	_dstrncmp
  872  000018b4  54000000	nop; delay slot nop
  873  000018b8  23bd0010	addi	r29,r29,#16
  874  000018bc  64220000	snei	r2,r1,#0
  875  000018c0  14400010	bnez	r2,L44_LF2
  876  000018c4  54000000	nop; delay slot nop
  877  000018c8  8fc10000	lw	r1,(r30)
  878  000018cc  08000028	j	L40_LF2
  879  000018d0  54000000	nop; delay slot nop
  880  000018d4          	L44_LF2:
  881  000018d4  8fc20000	lw	r2,(r30)
  882  000018d8  20410001	addi	r1,r2,#1
  883  000018dc  00011020	add	r2,r0,r1
  884  000018e0  afc20000	sw	(r30),r2
  885  000018e4  0bffff8c	j	L41_LF2
  886  000018e8  54000000	nop; delay slot nop
  887  000018ec          	L42_LF2:
  888  000018ec  20010000	addi	r1,r0,#0
  889  000018f0  08000004	j	L40_LF2
  890  000018f4  54000000	nop; delay slot nop
  891  000018f8          	L40_LF2:
  892  000018f8  8fa20000	lw	r2,0(r29)
  893  000018fc  8fdffff8	lw	r31,-8(r30)
  894  00001900  001ee820	add	r29,r0,r30
  895  00001904  8fdefffc	lw	r30,-4(r30)
  896  00001908  4be00000	jr	r31
  897  0000190c  54000000	nop
  898  00001910          	.endproc _dstrstr
  899  00001910          	.align 2
  900  00001910          	.proc _dmindex
  901  00001910          	.global _dmindex
  902  00001910          	_dmindex:
  903                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  904  00001910  afbefffc	sw	-4(r29),r30; push fp
  905  00001914  001df020	add	r30,r0,r29; fp = sp
  906  00001918  afbffff8	sw	-8(r29),r31; push ret addr
  907  0000191c  2fbd0018	subui	r29,r29,#24; alloc local storage
  908  00001920  afa20000	sw	0(r29),r2
  909  00001924  54000000	nop
  910  00001928          	L46_LF2:
  911  00001928  8fc10000	lw	r1,(r30)
  912  0000192c  90220000	lbu	r2,(r1)
  913  00001930  64410000	snei	r1,r2,#0
  914  00001934  1420000c	bnez	r1,L48_LF2
  915  00001938  54000000	nop; delay slot nop
  916  0000193c  08000070	j	L47_LF2
  917  00001940  54000000	nop; delay slot nop
  918  00001944          	L48_LF2:
  919  00001944  8fc10004	lw	r1,4(r30)
  920  00001948  afc1fff4	sw	-12(r30),r1
  921  0000194c          	L49_LF2:
  922  0000194c  8fc1fff4	lw	r1,-12(r30)
  923  00001950  90220000	lbu	r2,(r1)
  924  00001954  64410000	snei	r1,r2,#0
  925  00001958  1420000c	bnez	r1,L52_LF2
  926  0000195c  54000000	nop; delay slot nop
  927  00001960  08000044	j	L50_LF2
  928  00001964  54000000	nop; delay slot nop
  929  00001968          	L52_LF2:
  930  00001968  8fc10000	lw	r1,(r30)
  931  0000196c  8fc2fff4	lw	r2,-12(r30)
  932  00001970  90210000	lbu	r1,(r1)
  933  00001974  90420000	lbu	r2,(r2)
  934  00001978  00220828	seq	r1,r1,r2
  935  0000197c  10200010	beqz	r1,L51_LF2
  936  00001980  54000000	nop; delay slot nop
  937  00001984  8fc10000	lw	r1,(r30)
  938  00001988  08000030	j	L45_LF2
  939  0000198c  54000000	nop; delay slot nop
  940  00001990          	L53_LF2:
  941  00001990          	L51_LF2:
  942  00001990  8fc2fff4	lw	r2,-12(r30)
  943  00001994  20410001	addi	r1,r2,#1
  944  00001998  00011020	add	r2,r0,r1
  945  0000199c  afc2fff4	sw	-12(r30),r2
  946  000019a0  0bffffa8	j	L49_LF2
  947  000019a4  54000000	nop; delay slot nop
  948  000019a8          	L50_LF2:
  949  000019a8  0bffff7c	j	L46_LF2
  950  000019ac  54000000	nop; delay slot nop
  951  000019b0          	L47_LF2:
  952  000019b0  20010000	addi	r1,r0,#0
  953  000019b4  08000004	j	L45_LF2
  954  000019b8  54000000	nop; delay slot nop
  955  000019bc          	L45_LF2:
  956  000019bc  8fa20000	lw	r2,0(r29)
  957  000019c0  8fdffff8	lw	r31,-8(r30)
  958  000019c4  001ee820	add	r29,r0,r30
  959  000019c8  8fdefffc	lw	r30,-4(r30)
  960  000019cc  4be00000	jr	r31
  961  000019d0  54000000	nop
  962  000019d4          	.endproc _dmindex
  963  000019d4          	.align 2
  964  000019d4          	.proc _dindex
  965  000019d4          	.global _dindex
  966  000019d4          	_dindex:
  967                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  968  000019d4  afbefffc	sw	-4(r29),r30; push fp
  969  000019d8  001df020	add	r30,r0,r29; fp = sp
  970  000019dc  afbffff8	sw	-8(r29),r31; push ret addr
  971  000019e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  972  000019e4  afa20000	sw	0(r29),r2
  973  000019e8  54000000	nop
  974  000019ec          	L55_LF2:
  975  000019ec  8fc10000	lw	r1,(r30)
  976  000019f0  90220000	lbu	r2,(r1)
  977  000019f4  64410000	snei	r1,r2,#0
  978  000019f8  1420000c	bnez	r1,L57_LF2
  979  000019fc  54000000	nop; delay slot nop
  980  00001a00  08000040	j	L56_LF2
  981  00001a04  54000000	nop; delay slot nop
  982  00001a08          	L57_LF2:
  983  00001a08  8fc10000	lw	r1,(r30)
  984  00001a0c  90220000	lbu	r2,(r1)
  985  00001a10  8fc10004	lw	r1,4(r30)
  986  00001a14  00411028	seq	r2,r2,r1
  987  00001a18  10400010	beqz	r2,L58_LF2
  988  00001a1c  54000000	nop; delay slot nop
  989  00001a20  8fc10000	lw	r1,(r30)
  990  00001a24  08000028	j	L54_LF2
  991  00001a28  54000000	nop; delay slot nop
  992  00001a2c          	L58_LF2:
  993  00001a2c  8fc20000	lw	r2,(r30)
  994  00001a30  20410001	addi	r1,r2,#1
  995  00001a34  00011020	add	r2,r0,r1
  996  00001a38  afc20000	sw	(r30),r2
  997  00001a3c  0bffffac	j	L55_LF2
  998  00001a40  54000000	nop; delay slot nop
  999  00001a44          	L56_LF2:
 1000  00001a44  20010000	addi	r1,r0,#0
 1001  00001a48  08000004	j	L54_LF2
 1002  00001a4c  54000000	nop; delay slot nop
 1003  00001a50          	L54_LF2:
 1004  00001a50  8fa20000	lw	r2,0(r29)
 1005  00001a54  8fdffff8	lw	r31,-8(r30)
 1006  00001a58  001ee820	add	r29,r0,r30
 1007  00001a5c  8fdefffc	lw	r30,-4(r30)
 1008  00001a60  4be00000	jr	r31
 1009  00001a64  54000000	nop
 1010  00001a68          	.endproc _dindex
 1011  00001a68          	.align 2
 1012  00001a68          	.proc _ditoa
 1013  00001a68          	.global _ditoa
 1014  00001a68          	_ditoa:
 1015                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1016  00001a68  afbefffc	sw	-4(r29),r30; push fp
 1017  00001a6c  001df020	add	r30,r0,r29; fp = sp
 1018  00001a70  afbffff8	sw	-8(r29),r31; push ret addr
 1019  00001a74  2fbd0018	subui	r29,r29,#24; alloc local storage
 1020  00001a78  afa20000	sw	0(r29),r2
 1021  00001a7c  afa30004	sw	4(r29),r3
 1022  00001a80  8fc10000	lw	r1,(r30)
 1023  00001a84  68220000	slti	r2,r1,#0
 1024  00001a88  1040002c	beqz	r2,L60_LF2
 1025  00001a8c  54000000	nop; delay slot nop
 1026  00001a90  8fc10004	lw	r1,4(r30)
 1027  00001a94  20220001	addi	r2,r1,#1
 1028  00001a98  afc20004	sw	4(r30),r2
 1029  00001a9c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1030  00001aa0  a0220000	sb	(r1),r2
 1031  00001aa4  8fc10000	lw	r1,(r30)
 1032  00001aa8  00011022	sub	r2,r0,r1
 1033  00001aac  afc20000	sw	(r30),r2
 1034  00001ab0  08000118	j	L61_LF2
 1035  00001ab4  54000000	nop; delay slot nop
 1036  00001ab8          	L60_LF2:
 1037  00001ab8  8fc10000	lw	r1,(r30)
 1038  00001abc  64220000	snei	r2,r1,#0
 1039  00001ac0  14400020	bnez	r2,L62_LF2
 1040  00001ac4  54000000	nop; delay slot nop
 1041  00001ac8  8fc10004	lw	r1,4(r30)
 1042  00001acc  20220001	addi	r2,r1,#1
 1043  00001ad0  afc20004	sw	4(r30),r2
 1044  00001ad4  20020030	addi	r2,r0,(#0x30)&0xff
 1045  00001ad8  a0220000	sb	(r1),r2
 1046  00001adc  080000ec	j	L61_LF2
 1047  00001ae0  54000000	nop; delay slot nop
 1048  00001ae4          	L62_LF2:
 1049  00001ae4  20010001	addi	r1,r0,#1
 1050  00001ae8  afc1fff4	sw	-12(r30),r1
 1051  00001aec          	L64_LF2:
 1052  00001aec  8fc1fff4	lw	r1,-12(r30)
 1053  00001af0  8fc20000	lw	r2,(r30)
 1054  00001af4  0022082c	sle	r1,r1,r2
 1055  00001af8  1420000c	bnez	r1,L66_LF2
 1056  00001afc  54000000	nop; delay slot nop
 1057  00001b00  08000024	j	L65_LF2
 1058  00001b04  54000000	nop; delay slot nop
 1059  00001b08          	L67_LF2:
 1060  00001b08          	L66_LF2:
 1061  00001b08  8fc1fff4	lw	r1,-12(r30)
 1062  00001b0c  00011820	add	r3,r0,r1
 1063  00001b10  50620002	slli	r2,r3,#0x2
 1064  00001b14  00411020	add	r2,r2,r1
 1065  00001b18  50410001	slli	r1,r2,#0x1
 1066  00001b1c  afc1fff4	sw	-12(r30),r1
 1067  00001b20  0bffffc8	j	L64_LF2
 1068  00001b24  54000000	nop; delay slot nop
 1069  00001b28          	L65_LF2:
 1070  00001b28  54000000	nop
 1071  00001b2c          	L68_LF2:
 1072  00001b2c  8fc1fff4	lw	r1,-12(r30)
 1073  00001b30  2002000a	addi	r2,r0,#10
 1074  00001b34  00200035	movi2fp	f0,r1
 1075  00001b38  00400835	movi2fp	f1,r2
 1076  00001b3c  0401000f	div	f0,f0,f1
 1077  00001b40  00000834	movfp2i	r1,f0
 1078  00001b44  afc1fff4	sw	-12(r30),r1
 1079  00001b48  8fc10004	lw	r1,4(r30)
 1080  00001b4c  20220001	addi	r2,r1,#1
 1081  00001b50  afc20004	sw	4(r30),r2
 1082  00001b54  8fc20000	lw	r2,(r30)
 1083  00001b58  8fc3fff4	lw	r3,-12(r30)
 1084  00001b5c  00400035	movi2fp	f0,r2
 1085  00001b60  00600835	movi2fp	f1,r3
 1086  00001b64  0401000f	div	f0,f0,f1
 1087  00001b68  00001034	movfp2i	r2,f0
 1088  00001b6c  00021820	add	r3,r0,r2
 1089  00001b70  20620030	addi	r2,r3,#48
 1090  00001b74  a0220000	sb	(r1),r2
 1091  00001b78  8fc10000	lw	r1,(r30)
 1092  00001b7c  8fc3fff4	lw	r3,-12(r30)
 1093  00001b80  00200035	movi2fp	f0,r1
 1094  00001b84  00600835	movi2fp	f1,r3
 1095  00001b88  0401000f	div	f0,f0,f1
 1096  00001b8c  00001034	movfp2i	r2,f0
 1097  00001b90  8fc3fff4	lw	r3,-12(r30)
 1098  00001b94  00400035	movi2fp	f0,r2
 1099  00001b98  00600835	movi2fp	f1,r3
 1100  00001b9c  0401000e	mult	f0,f0,f1
 1101  00001ba0  00001034	movfp2i	r2,f0
 1102  00001ba4  00220822	sub	r1,r1,r2
 1103  00001ba8  afc10000	sw	(r30),r1
 1104  00001bac          	L70_LF2:
 1105  00001bac  8fc1fff4	lw	r1,-12(r30)
 1106  00001bb0  6c220001	sgti	r2,r1,#1
 1107  00001bb4  1440000c	bnez	r2,L71_LF2
 1108  00001bb8  54000000	nop; delay slot nop
 1109  00001bbc  0800000c	j	L61_LF2
 1110  00001bc0  54000000	nop; delay slot nop
 1111  00001bc4          	L71_LF2:
 1112  00001bc4  0bffff64	j	L68_LF2
 1113  00001bc8  54000000	nop; delay slot nop
 1114  00001bcc          	L69_LF2:
 1115  00001bcc          	L63_LF2:
 1116  00001bcc          	L61_LF2:
 1117  00001bcc  8fc10004	lw	r1,4(r30)
 1118  00001bd0  20020000	addi	r2,r0,(#0x0)&0xff
 1119  00001bd4  a0220000	sb	(r1),r2
 1120  00001bd8          	L59_LF2:
 1121  00001bd8  8fa20000	lw	r2,0(r29)
 1122  00001bdc  8fa30004	lw	r3,4(r29)
 1123  00001be0  8fdffff8	lw	r31,-8(r30)
 1124  00001be4  001ee820	add	r29,r0,r30
 1125  00001be8  8fdefffc	lw	r30,-4(r30)
 1126  00001bec  4be00000	jr	r31
 1127  00001bf0  54000000	nop
 1128  00001bf4          	.endproc _ditoa
 1129  00001bf4          	.align 2
 1130  00001bf4          	.proc _dstrtol
 1131  00001bf4          	.global _dstrtol
 1132  00001bf4          	_dstrtol:
 1133                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1134  00001bf4  afbefffc	sw	-4(r29),r30; push fp
 1135  00001bf8  001df020	add	r30,r0,r29; fp = sp
 1136  00001bfc  afbffff8	sw	-8(r29),r31; push ret addr
 1137  00001c00  2fbd0020	subui	r29,r29,#32; alloc local storage
 1138  00001c04  afa20000	sw	0(r29),r2
 1139  00001c08  20010000	addi	r1,r0,#0
 1140  00001c0c  afc1fff4	sw	-12(r30),r1
 1141  00001c10          	L73_LF2:
 1142  00001c10  8fc10000	lw	r1,(r30)
 1143  00001c14  90220000	lbu	r2,(r1)
 1144  00001c18  60410020	seqi	r1,r2,#32
 1145  00001c1c  14200034	bnez	r1,L75_LF2
 1146  00001c20  54000000	nop; delay slot nop
 1147  00001c24  8fc10000	lw	r1,(r30)
 1148  00001c28  90220000	lbu	r2,(r1)
 1149  00001c2c  60410009	seqi	r1,r2,#9
 1150  00001c30  14200020	bnez	r1,L75_LF2
 1151  00001c34  54000000	nop; delay slot nop
 1152  00001c38  8fc10000	lw	r1,(r30)
 1153  00001c3c  90220000	lbu	r2,(r1)
 1154  00001c40  6041000a	seqi	r1,r2,#10
 1155  00001c44  1420000c	bnez	r1,L75_LF2
 1156  00001c48  54000000	nop; delay slot nop
 1157  00001c4c  0800001c	j	L74_LF2
 1158  00001c50  54000000	nop; delay slot nop
 1159  00001c54          	L75_LF2:
 1160  00001c54  8fc20000	lw	r2,(r30)
 1161  00001c58  20410001	addi	r1,r2,#1
 1162  00001c5c  00011020	add	r2,r0,r1
 1163  00001c60  afc20000	sw	(r30),r2
 1164  00001c64  0bffffa8	j	L73_LF2
 1165  00001c68  54000000	nop; delay slot nop
 1166  00001c6c          	L74_LF2:
 1167  00001c6c  8fc10004	lw	r1,4(r30)
 1168  00001c70  64220000	snei	r2,r1,#0
 1169  00001c74  10400010	beqz	r2,L76_LF2
 1170  00001c78  54000000	nop; delay slot nop
 1171  00001c7c  8fc10004	lw	r1,4(r30)
 1172  00001c80  8fc20000	lw	r2,(r30)
 1173  00001c84  ac220000	sw	(r1),r2
 1174  00001c88          	L76_LF2:
 1175  00001c88  8fc10000	lw	r1,(r30)
 1176  00001c8c  90220000	lbu	r2,(r1)
 1177  00001c90  64410000	snei	r1,r2,#0
 1178  00001c94  14200010	bnez	r1,L77_LF2
 1179  00001c98  54000000	nop; delay slot nop
 1180  00001c9c  8fc1fff4	lw	r1,-12(r30)
 1181  00001ca0  08000294	j	L72_LF2
 1182  00001ca4  54000000	nop; delay slot nop
 1183  00001ca8          	L77_LF2:
 1184  00001ca8  8fc10000	lw	r1,(r30)
 1185  00001cac  90220000	lbu	r2,(r1)
 1186  00001cb0  6041002d	seqi	r1,r2,#45
 1187  00001cb4  10200024	beqz	r1,L78_LF2
 1188  00001cb8  54000000	nop; delay slot nop
 1189  00001cbc  2001ffff	addi	r1,r0,#-1
 1190  00001cc0  afc1ffec	sw	-20(r30),r1
 1191  00001cc4  8fc20000	lw	r2,(r30)
 1192  00001cc8  20410001	addi	r1,r2,#1
 1193  00001ccc  00011020	add	r2,r0,r1
 1194  00001cd0  afc20000	sw	(r30),r2
 1195  00001cd4  0800000c	j	L79_LF2
 1196  00001cd8  54000000	nop; delay slot nop
 1197  00001cdc          	L78_LF2:
 1198  00001cdc  20010001	addi	r1,r0,#1
 1199  00001ce0  afc1ffec	sw	-20(r30),r1
 1200  00001ce4          	L79_LF2:
 1201  00001ce4  8fc10008	lw	r1,8(r30)
 1202  00001ce8  64220000	snei	r2,r1,#0
 1203  00001cec  14400090	bnez	r2,L80_LF2
 1204  00001cf0  54000000	nop; delay slot nop
 1205  00001cf4  8fc10000	lw	r1,(r30)
 1206  00001cf8  90220000	lbu	r2,(r1)
 1207  00001cfc  60410030	seqi	r1,r2,#48
 1208  00001d00  10200074	beqz	r1,L81_LF2
 1209  00001d04  54000000	nop; delay slot nop
 1210  00001d08  8fc20000	lw	r2,(r30)
 1211  00001d0c  20410001	addi	r1,r2,#1
 1212  00001d10  00011020	add	r2,r0,r1
 1213  00001d14  afc20000	sw	(r30),r2
 1214  00001d18  8fc10000	lw	r1,(r30)
 1215  00001d1c  90220000	lbu	r2,(r1)
 1216  00001d20  60410078	seqi	r1,r2,#120
 1217  00001d24  14200020	bnez	r1,L83_LF2
 1218  00001d28  54000000	nop; delay slot nop
 1219  00001d2c  8fc10000	lw	r1,(r30)
 1220  00001d30  90220000	lbu	r2,(r1)
 1221  00001d34  60410058	seqi	r1,r2,#88
 1222  00001d38  1420000c	bnez	r1,L83_LF2
 1223  00001d3c  54000000	nop; delay slot nop
 1224  00001d40  08000024	j	L82_LF2
 1225  00001d44  54000000	nop; delay slot nop
 1226  00001d48          	L83_LF2:
 1227  00001d48  20010010	addi	r1,r0,#16
 1228  00001d4c  afc10008	sw	8(r30),r1
 1229  00001d50  8fc20000	lw	r2,(r30)
 1230  00001d54  20410001	addi	r1,r2,#1
 1231  00001d58  00011020	add	r2,r0,r1
 1232  00001d5c  afc20000	sw	(r30),r2
 1233  00001d60  0800000c	j	L84_LF2
 1234  00001d64  54000000	nop; delay slot nop
 1235  00001d68          	L82_LF2:
 1236  00001d68  20010008	addi	r1,r0,#8
 1237  00001d6c  afc10008	sw	8(r30),r1
 1238  00001d70          	L84_LF2:
 1239  00001d70  0800000c	j	L80_LF2
 1240  00001d74  54000000	nop; delay slot nop
 1241  00001d78          	L81_LF2:
 1242  00001d78  2001000a	addi	r1,r0,#10
 1243  00001d7c  afc10008	sw	8(r30),r1
 1244  00001d80          	L85_LF2:
 1245  00001d80          	L80_LF2:
 1246  00001d80  8fc10008	lw	r1,8(r30)
 1247  00001d84  70220000	slei	r2,r1,#0
 1248  00001d88  1440001c	bnez	r2,L87_LF2
 1249  00001d8c  54000000	nop; delay slot nop
 1250  00001d90  8fc10008	lw	r1,8(r30)
 1251  00001d94  6c220010	sgti	r2,r1,#16
 1252  00001d98  1440000c	bnez	r2,L87_LF2
 1253  00001d9c  54000000	nop; delay slot nop
 1254  00001da0  08000010	j	L86_LF2
 1255  00001da4  54000000	nop; delay slot nop
 1256  00001da8          	L87_LF2:
 1257  00001da8  8fc1fff4	lw	r1,-12(r30)
 1258  00001dac  08000188	j	L72_LF2
 1259  00001db0  54000000	nop; delay slot nop
 1260  00001db4          	L86_LF2:
 1261  00001db4  54000000	nop
 1262  00001db8          	L88_LF2:
 1263  00001db8  8fc10000	lw	r1,(r30)
 1264  00001dbc  90220000	lbu	r2,(r1)
 1265  00001dc0  6c41002f	sgtui	r1,r2,#47
 1266  00001dc4  10200030	beqz	r1,L91_LF2
 1267  00001dc8  54000000	nop; delay slot nop
 1268  00001dcc  8fc10000	lw	r1,(r30)
 1269  00001dd0  90220000	lbu	r2,(r1)
 1270  00001dd4  70410039	sleui	r1,r2,#57
 1271  00001dd8  1020001c	beqz	r1,L91_LF2
 1272  00001ddc  54000000	nop; delay slot nop
 1273  00001de0  8fc10000	lw	r1,(r30)
 1274  00001de4  90220000	lbu	r2,(r1)
 1275  00001de8  2041ffd0	addi	r1,r2,#-48
 1276  00001dec  afc1fff0	sw	-16(r30),r1
 1277  00001df0  0800008c	j	L92_LF2
 1278  00001df4  54000000	nop; delay slot nop
 1279  00001df8          	L91_LF2:
 1280  00001df8  8fc10000	lw	r1,(r30)
 1281  00001dfc  90220000	lbu	r2,(r1)
 1282  00001e00  6c410060	sgtui	r1,r2,#96
 1283  00001e04  10200030	beqz	r1,L93_LF2
 1284  00001e08  54000000	nop; delay slot nop
 1285  00001e0c  8fc10000	lw	r1,(r30)
 1286  00001e10  90220000	lbu	r2,(r1)
 1287  00001e14  7041007a	sleui	r1,r2,#122
 1288  00001e18  1020001c	beqz	r1,L93_LF2
 1289  00001e1c  54000000	nop; delay slot nop
 1290  00001e20  8fc10000	lw	r1,(r30)
 1291  00001e24  90220000	lbu	r2,(r1)
 1292  00001e28  2041ffa9	addi	r1,r2,#-87
 1293  00001e2c  afc1fff0	sw	-16(r30),r1
 1294  00001e30  0800004c	j	L92_LF2
 1295  00001e34  54000000	nop; delay slot nop
 1296  00001e38          	L93_LF2:
 1297  00001e38  8fc10000	lw	r1,(r30)
 1298  00001e3c  90220000	lbu	r2,(r1)
 1299  00001e40  6c410040	sgtui	r1,r2,#64
 1300  00001e44  10200030	beqz	r1,L95_LF2
 1301  00001e48  54000000	nop; delay slot nop
 1302  00001e4c  8fc10000	lw	r1,(r30)
 1303  00001e50  90220000	lbu	r2,(r1)
 1304  00001e54  7041005a	sleui	r1,r2,#90
 1305  00001e58  1020001c	beqz	r1,L95_LF2
 1306  00001e5c  54000000	nop; delay slot nop
 1307  00001e60  8fc10000	lw	r1,(r30)
 1308  00001e64  90220000	lbu	r2,(r1)
 1309  00001e68  2041ffc9	addi	r1,r2,#-55
 1310  00001e6c  afc1fff0	sw	-16(r30),r1
 1311  00001e70  0800000c	j	L92_LF2
 1312  00001e74  54000000	nop; delay slot nop
 1313  00001e78          	L95_LF2:
 1314  00001e78  200103e8	addi	r1,r0,#1000
 1315  00001e7c  afc1fff0	sw	-16(r30),r1
 1316  00001e80          	L96_LF2:
 1317  00001e80          	L94_LF2:
 1318  00001e80          	L92_LF2:
 1319  00001e80  8fc1fff0	lw	r1,-16(r30)
 1320  00001e84  8fc20008	lw	r2,8(r30)
 1321  00001e88  0022082a	slt	r1,r1,r2
 1322  00001e8c  10200040	beqz	r1,L90_LF2
 1323  00001e90  54000000	nop; delay slot nop
 1324  00001e94  8fc1fff4	lw	r1,-12(r30)
 1325  00001e98  8fc20008	lw	r2,8(r30)
 1326  00001e9c  00200035	movi2fp	f0,r1
 1327  00001ea0  00400835	movi2fp	f1,r2
 1328  00001ea4  0401000e	mult	f0,f0,f1
 1329  00001ea8  00000834	movfp2i	r1,f0
 1330  00001eac  afc1fff4	sw	-12(r30),r1
 1331  00001eb0  8fc1fff4	lw	r1,-12(r30)
 1332  00001eb4  8fc2fff0	lw	r2,-16(r30)
 1333  00001eb8  00220820	add	r1,r1,r2
 1334  00001ebc  afc1fff4	sw	-12(r30),r1
 1335  00001ec0  8fc20000	lw	r2,(r30)
 1336  00001ec4  20410001	addi	r1,r2,#1
 1337  00001ec8  00011020	add	r2,r0,r1
 1338  00001ecc  afc20000	sw	(r30),r2
 1339  00001ed0          	L97_LF2:
 1340  00001ed0          	L90_LF2:
 1341  00001ed0  8fc1fff0	lw	r1,-16(r30)
 1342  00001ed4  8fc20008	lw	r2,8(r30)
 1343  00001ed8  0022082a	slt	r1,r1,r2
 1344  00001edc  1420000c	bnez	r1,L98_LF2
 1345  00001ee0  54000000	nop; delay slot nop
 1346  00001ee4  0800000c	j	L89_LF2
 1347  00001ee8  54000000	nop; delay slot nop
 1348  00001eec          	L98_LF2:
 1349  00001eec  0bfffec8	j	L88_LF2
 1350  00001ef0  54000000	nop; delay slot nop
 1351  00001ef4          	L89_LF2:
 1352  00001ef4  8fc10004	lw	r1,4(r30)
 1353  00001ef8  64220000	snei	r2,r1,#0
 1354  00001efc  10400010	beqz	r2,L99_LF2
 1355  00001f00  54000000	nop; delay slot nop
 1356  00001f04  8fc10004	lw	r1,4(r30)
 1357  00001f08  8fc20000	lw	r2,(r30)
 1358  00001f0c  ac220000	sw	(r1),r2
 1359  00001f10          	L99_LF2:
 1360  00001f10  8fc1fff4	lw	r1,-12(r30)
 1361  00001f14  8fc2ffec	lw	r2,-20(r30)
 1362  00001f18  00200035	movi2fp	f0,r1
 1363  00001f1c  00400835	movi2fp	f1,r2
 1364  00001f20  0401000e	mult	f0,f0,f1
 1365  00001f24  00000834	movfp2i	r1,f0
 1366  00001f28  afc1fff4	sw	-12(r30),r1
 1367  00001f2c  8fc1fff4	lw	r1,-12(r30)
 1368  00001f30  08000004	j	L72_LF2
 1369  00001f34  54000000	nop; delay slot nop
 1370  00001f38          	L72_LF2:
 1371  00001f38  8fa20000	lw	r2,0(r29)
 1372  00001f3c  8fdffff8	lw	r31,-8(r30)
 1373  00001f40  001ee820	add	r29,r0,r30
 1374  00001f44  8fdefffc	lw	r30,-4(r30)
 1375  00001f48  4be00000	jr	r31
 1376  00001f4c  54000000	nop
 1377  00001f50          	.endproc _dstrtol
 1378  00001f50          	.align 2
 1379  00001f50          	.proc _bcopy
 1380  00001f50          	.global _bcopy
 1381  00001f50          	_bcopy:
 1382                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1383  00001f50  afbefffc	sw	-4(r29),r30; push fp
 1384  00001f54  001df020	add	r30,r0,r29; fp = sp
 1385  00001f58  afbffff8	sw	-8(r29),r31; push ret addr
 1386  00001f5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1387  00001f60  afa20000	sw	0(r29),r2
 1388  00001f64  afa30004	sw	4(r29),r3
 1389  00001f68  54000000	nop
 1390  00001f6c          	L101_LF2:
 1391  00001f6c  8fc10008	lw	r1,8(r30)
 1392  00001f70  2022ffff	addi	r2,r1,#-1
 1393  00001f74  afc20008	sw	8(r30),r2
 1394  00001f78  6c210000	sgti	r1,r1,#0
 1395  00001f7c  1420000c	bnez	r1,L103_LF2
 1396  00001f80  54000000	nop; delay slot nop
 1397  00001f84  0800002c	j	L102_LF2
 1398  00001f88  54000000	nop; delay slot nop
 1399  00001f8c          	L103_LF2:
 1400  00001f8c  8fc10004	lw	r1,4(r30)
 1401  00001f90  20220001	addi	r2,r1,#1
 1402  00001f94  afc20004	sw	4(r30),r2
 1403  00001f98  8fc20000	lw	r2,(r30)
 1404  00001f9c  20430001	addi	r3,r2,#1
 1405  00001fa0  afc30000	sw	(r30),r3
 1406  00001fa4  80420000	lb	r2,(r2)
 1407  00001fa8  a0220000	sb	(r1),r2
 1408  00001fac  0bffffbc	j	L101_LF2
 1409  00001fb0  54000000	nop; delay slot nop
 1410  00001fb4          	L102_LF2:
 1411  00001fb4          	L100_LF2:
 1412  00001fb4  8fa20000	lw	r2,0(r29)
 1413  00001fb8  8fa30004	lw	r3,4(r29)
 1414  00001fbc  8fdffff8	lw	r31,-8(r30)
 1415  00001fc0  001ee820	add	r29,r0,r30
 1416  00001fc4  8fdefffc	lw	r30,-4(r30)
 1417  00001fc8  4be00000	jr	r31
 1418  00001fcc  54000000	nop
 1419  00001fd0          	.endproc _bcopy
 1420  00001fd0          	.align 2
 1421  00001fd0          	.proc _bzero
 1422  00001fd0          	.global _bzero
 1423  00001fd0          	_bzero:
 1424                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1425  00001fd0  afbefffc	sw	-4(r29),r30; push fp
 1426  00001fd4  001df020	add	r30,r0,r29; fp = sp
 1427  00001fd8  afbffff8	sw	-8(r29),r31; push ret addr
 1428  00001fdc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1429  00001fe0  afa20000	sw	0(r29),r2
 1430  00001fe4  54000000	nop
 1431  00001fe8          	L105_LF2:
 1432  00001fe8  8fc10004	lw	r1,4(r30)
 1433  00001fec  2022ffff	addi	r2,r1,#-1
 1434  00001ff0  afc20004	sw	4(r30),r2
 1435  00001ff4  6c210000	sgti	r1,r1,#0
 1436  00001ff8  1420000c	bnez	r1,L107_LF2
 1437  00001ffc  54000000	nop; delay slot nop
 1438  00002000  08000020	j	L106_LF2
 1439  00002004  54000000	nop; delay slot nop
 1440  00002008          	L107_LF2:
 1441  00002008  8fc10000	lw	r1,(r30)
 1442  0000200c  20220001	addi	r2,r1,#1
 1443  00002010  afc20000	sw	(r30),r2
 1444  00002014  20020000	addi	r2,r0,(#0x0)&0xff
 1445  00002018  a0220000	sb	(r1),r2
 1446  0000201c  0bffffc8	j	L105_LF2
 1447  00002020  54000000	nop; delay slot nop
 1448  00002024          	L106_LF2:
 1449  00002024          	L104_LF2:
 1450  00002024  8fa20000	lw	r2,0(r29)
 1451  00002028  8fdffff8	lw	r31,-8(r30)
 1452  0000202c  001ee820	add	r29,r0,r30
 1453  00002030  8fdefffc	lw	r30,-4(r30)
 1454  00002034  4be00000	jr	r31
 1455  00002038  54000000	nop
 1456  0000203c          	.endproc _bzero
 1457  0000203c          	.align 2
 1458  0000203c          	.proc _min
 1459  0000203c          	.global _min
 1460  0000203c          	_min:
 1461                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1462  0000203c  afbefffc	sw	-4(r29),r30; push fp
 1463  00002040  001df020	add	r30,r0,r29; fp = sp
 1464  00002044  afbffff8	sw	-8(r29),r31; push ret addr
 1465  00002048  2fbd0010	subui	r29,r29,#16; alloc local storage
 1466  0000204c  afa20000	sw	0(r29),r2
 1467  00002050  afa30004	sw	4(r29),r3
 1468  00002054  8fc10000	lw	r1,(r30)
 1469  00002058  8fc20004	lw	r2,4(r30)
 1470  0000205c  0022182c	sle	r3,r1,r2
 1471  00002060  14600008	bnez	r3,L109_LF2
 1472  00002064  54000000	nop; delay slot nop
 1473  00002068  8fc10004	lw	r1,4(r30)
 1474  0000206c          	L109_LF2:
 1475  0000206c  08000004	j	L108_LF2
 1476  00002070  54000000	nop; delay slot nop
 1477  00002074          	L108_LF2:
 1478  00002074  8fa20000	lw	r2,0(r29)
 1479  00002078  8fa30004	lw	r3,4(r29)
 1480  0000207c  8fdffff8	lw	r31,-8(r30)
 1481  00002080  001ee820	add	r29,r0,r30
 1482  00002084  8fdefffc	lw	r30,-4(r30)
 1483  00002088  4be00000	jr	r31
 1484  0000208c  54000000	nop
 1485  00002090          	.endproc _min
 1486  00002090          	.align 2
 1487  00002090          	.proc _max
 1488  00002090          	.global _max
 1489  00002090          	_max:
 1490                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1491  00002090  afbefffc	sw	-4(r29),r30; push fp
 1492  00002094  001df020	add	r30,r0,r29; fp = sp
 1493  00002098  afbffff8	sw	-8(r29),r31; push ret addr
 1494  0000209c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1495  000020a0  afa20000	sw	0(r29),r2
 1496  000020a4  afa30004	sw	4(r29),r3
 1497  000020a8  8fc10000	lw	r1,(r30)
 1498  000020ac  8fc20004	lw	r2,4(r30)
 1499  000020b0  0022182d	sge	r3,r1,r2
 1500  000020b4  14600008	bnez	r3,L111_LF2
 1501  000020b8  54000000	nop; delay slot nop
 1502  000020bc  8fc10004	lw	r1,4(r30)
 1503  000020c0          	L111_LF2:
 1504  000020c0  08000004	j	L110_LF2
 1505  000020c4  54000000	nop; delay slot nop
 1506  000020c8          	L110_LF2:
 1507  000020c8  8fa20000	lw	r2,0(r29)
 1508  000020cc  8fa30004	lw	r3,4(r29)
 1509  000020d0  8fdffff8	lw	r31,-8(r30)
 1510  000020d4  001ee820	add	r29,r0,r30
 1511  000020d8  8fdefffc	lw	r30,-4(r30)
 1512  000020dc  4be00000	jr	r31
 1513  000020e0  54000000	nop
 1514  000020e4          	.endproc _max
 1515                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1516                      ;;;
 1517                      ;;; Most of the traps are called in files from libtraps.
 1520  000020e4          	.align 2
 1521  000020e4          	.proc _exit
 1522  000020e4          	.global _exit
 1523  000020e4          	_exit:
 1524  000020e4  44000300	trap	#0x300
 1525  000020e8  4be00000	jr	r31
 1526  000020ec  54000000	nop
 1527  000020f0          	.endproc _exit
 1529                      ; for the benefit of gcc.
 1530  000020f0          	.proc ___main
 1531  000020f0          	.global ___main
 1532  000020f0          	___main:
 1533  000020f0  4be00000	jr	r31
 1534  000020f4  54000000	nop
 1535  000020f8          	.endproc ___main
 1536  000020f8          	.text
 1537  000020f8          	.global _etext
 1538  000020f8          	_etext:
 1539  000020f8          	.align 3
 1540  000020f8          	.data
 1541  000030cd          	.global _edata
 1542  000030cd          	_edata:
