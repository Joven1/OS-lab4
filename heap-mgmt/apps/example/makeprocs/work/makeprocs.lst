 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 210
    4                      ; Text size: 4748
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  46726565	.ascii "Freeing A:\n\000"
   82  00003004  696e6720	
   82  00003008  413a0a00	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  46726565	.ascii "Freeing B:\n\000"
   85  00003010  696e6720	
   85  00003014  423a0a00	
   86  00003018          	.align 2
   87  00003018          	LC2_LF0:
   88  00003018  46726565	.ascii "Freeing C:\n\000"
   88  0000301c  696e6720	
   88  00003020  433a0a00	
   89  00003024          	.align 2
   90  00003024          	LC3_LF0:
   91  00003024  46726565	.ascii "Freeing D:\n\000"
   91  00003028  696e6720	
   91  0000302c  443a0a00	
   92  00003030          	.align 2
   93  00003030          	LC4_LF0:
   94  00003030  55736167	.ascii "Usage: %s <which program to run (1-6) or all of them (0) \n\000"
   94  00003034  653a2025	
   94  00003038  73203c77	
   94  0000303c  68696368	
   94  00003040  2070726f	
   94  00003044  6772616d	
   94  00003048  20746f20	
   94  0000304c  72756e20	
   94  00003050  28312d36	
   94  00003054  29206f72	
   94  00003058  20616c6c	
   94  0000305c  206f6620	
   94  00003060  7468656d	
   94  00003064  20283029	
   94  00003068  200a00  	
   95  0000306b          	.align 2
   96  0000306c          	LC5_LF0:
   97  0000306c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   97  00003070  70726f63	
   97  00003074  73202825	
   97  00003078  64293a20	
   97  0000307c  42616420	
   97  00003080  73656d5f	
   97  00003084  63726561	
   97  00003088  74650a00	
   98  0000308c          	.align 2
   99  0000308c          	LC6_LF0:
  100  0000308c  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  100  00003090  70726f63	
  100  00003094  73202825	
  100  00003098  64293a20	
  100  0000309c  416c6c20	
  100  000030a0  6f746865	
  100  000030a4  72207072	
  100  000030a8  6f636573	
  100  000030ac  73657320	
  100  000030b0  636f6d70	
  100  000030b4  6c657465	
  100  000030b8  642c2065	
  100  000030bc  78697469	
  100  000030c0  6e67206d	
  100  000030c4  61696e20	
  100  000030c8  70726f63	
  100  000030cc  6573732e	
  100  000030d0  0a      	
  101  000030d1  00      	.ascii "\000"
  102  000030d2          	.text
  103  000010d4          	.align 2
  104  000010d4          	.proc _main
  105  000010d4          	.global _main
  106  000010d4          	_main:
  107                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  108  000010d4  afbefffc	sw	-4(r29),r30; push fp
  109  000010d8  001df020	add	r30,r0,r29; fp = sp
  110  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  111  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  112  000010e4  8fc60000	lw	r6,(r30)
  113  000010e8  8fcb0004	lw	r11,4(r30)
  114  000010ec  0c001188	jal	___main
  115  000010f0  54000000	nop; not filled.
  116  000010f4  23bdfff8	addi	r29,r29,#-8
  117  000010f8  200c0020	addi	r12,r0,#32
  118  000010fc  afac0000	sw	(r29),r12
  119  00001100  0c0003c8	jal	_malloc
  120  00001104  54000000	nop; not filled.
  121  00001108  00013820	add	r7,r0,r1
  122  0000110c  200c0064	addi	r12,r0,#100
  123  00001110  afac0000	sw	(r29),r12
  124  00001114  0c0003b4	jal	_malloc
  125  00001118  54000000	nop; not filled.
  126  0000111c  00014020	add	r8,r0,r1
  127  00001120  200c0400	addi	r12,r0,#1024
  128  00001124  afac0000	sw	(r29),r12
  129  00001128  0c0003a0	jal	_malloc
  130  0000112c  54000000	nop; not filled.
  131  00001130  00014820	add	r9,r0,r1
  132  00001134  200c0080	addi	r12,r0,#128
  133  00001138  afac0000	sw	(r29),r12
  134  0000113c  0c00038c	jal	_malloc
  135  00001140  54000000	nop; not filled.
  136  00001144  00015020	add	r10,r0,r1
  137  00001148  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  138  0000114c  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  139  00001150  afa50000	sw	(r29),r5
  140  00001154  0c001128	jal	_printf
  141  00001158  54000000	nop; not filled.
  142  0000115c  afa70000	sw	(r29),r7
  143  00001160  0c000370	jal	_mfree
  144  00001164  54000000	nop; not filled.
  145  00001168  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  146  0000116c  2484300c	addui	r4,r4,(LC1_LF0)&0xffff
  147  00001170  afa40000	sw	(r29),r4
  148  00001174  0c001108	jal	_printf
  149  00001178  54000000	nop; not filled.
  150  0000117c  afa80000	sw	(r29),r8
  151  00001180  0c000350	jal	_mfree
  152  00001184  54000000	nop; not filled.
  153  00001188  3c030000	lhi	r3,((LC2_LF0)>>16)&0xffff
  154  0000118c  24633018	addui	r3,r3,(LC2_LF0)&0xffff
  155  00001190  afa30000	sw	(r29),r3
  156  00001194  0c0010e8	jal	_printf
  157  00001198  54000000	nop; not filled.
  158  0000119c  afa90000	sw	(r29),r9
  159  000011a0  0c000330	jal	_mfree
  160  000011a4  54000000	nop; not filled.
  161  000011a8  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  162  000011ac  24423024	addui	r2,r2,(LC3_LF0)&0xffff
  163  000011b0  afa20000	sw	(r29),r2
  164  000011b4  0c0010c8	jal	_printf
  165  000011b8  54000000	nop; not filled.
  166  000011bc  afaa0000	sw	(r29),r10
  167  000011c0  0c000310	jal	_mfree
  168  000011c4  54000000	nop; not filled.
  169  000011c8  200c0020	addi	r12,r0,#32
  170  000011cc  afac0000	sw	(r29),r12
  171  000011d0  0c0002f8	jal	_malloc
  172  000011d4  54000000	nop; not filled.
  173  000011d8  00013820	add	r7,r0,r1
  174  000011dc  200c0064	addi	r12,r0,#100
  175  000011e0  afac0000	sw	(r29),r12
  176  000011e4  0c0002e4	jal	_malloc
  177  000011e8  54000000	nop; not filled.
  178  000011ec  00014020	add	r8,r0,r1
  179  000011f0  200c0400	addi	r12,r0,#1024
  180  000011f4  afac0000	sw	(r29),r12
  181  000011f8  0c0002d0	jal	_malloc
  182  000011fc  54000000	nop; not filled.
  183  00001200  00014820	add	r9,r0,r1
  184  00001204  200c0080	addi	r12,r0,#128
  185  00001208  afac0000	sw	(r29),r12
  186  0000120c  0c0002bc	jal	_malloc
  187  00001210  54000000	nop; not filled.
  188  00001214  00015020	add	r10,r0,r1
  189  00001218  afa50000	sw	(r29),r5
  190  0000121c  0c001060	jal	_printf
  191  00001220  54000000	nop; not filled.
  192  00001224  afa70000	sw	(r29),r7
  193  00001228  0c0002a8	jal	_mfree
  194  0000122c  54000000	nop; not filled.
  195  00001230  afa40000	sw	(r29),r4
  196  00001234  0c001048	jal	_printf
  197  00001238  54000000	nop; not filled.
  198  0000123c  afa80000	sw	(r29),r8
  199  00001240  0c000290	jal	_mfree
  200  00001244  54000000	nop; not filled.
  201  00001248  afa30000	sw	(r29),r3
  202  0000124c  0c001030	jal	_printf
  203  00001250  54000000	nop; not filled.
  204  00001254  afa90000	sw	(r29),r9
  205  00001258  0c000278	jal	_mfree
  206  0000125c  54000000	nop; not filled.
  207  00001260  afa20000	sw	(r29),r2
  208  00001264  0c001018	jal	_printf
  209  00001268  54000000	nop; not filled.
  210  0000126c  afaa0000	sw	(r29),r10
  211  00001270  0c000260	jal	_mfree
  212  00001274  54000000	nop; not filled.
  213  00001278  23bd0008	addi	r29,r29,#8
  214  0000127c  64c10002	snei	r1,r6,#2
  215  00001280  10200030	beqz	r1,L14_LF0
  216  00001284  54000000	nop; not filled.
  217  00001288  23bdfff8	addi	r29,r29,#-8
  218  0000128c  3c0c0000	lhi	r12,((LC4_LF0)>>16)&0xffff
  219  00001290  258c3030	addui	r12,r12,(LC4_LF0)&0xffff
  220  00001294  afac0000	sw	(r29),r12
  221  00001298  8d610000	lw	r1,(r11)
  222  0000129c  afa10004	sw	4(r29),r1
  223  000012a0  0c000114	jal	_Printf
  224  000012a4  54000000	nop; not filled.
  225  000012a8  0c000214	jal	_Exit
  226  000012ac  54000000	nop; not filled.
  227  000012b0  23bd0008	addi	r29,r29,#8
  228  000012b4          	L14_LF0:
  229  000012b4  23bdfff0	addi	r29,r29,#-16
  230  000012b8  8d6b0004	lw	r11,4(r11)
  231  000012bc  afab0000	sw	(r29),r11
  232  000012c0  200c0000	addi	r12,r0,#0
  233  000012c4  afac0004	sw	4(r29),r12
  234  000012c8  200c000a	addi	r12,r0,#10
  235  000012cc  afac0008	sw	8(r29),r12
  236  000012d0  0c000aa8	jal	_dstrtol
  237  000012d4  54000000	nop; not filled.
  238  000012d8  200c0000	addi	r12,r0,#0
  239  000012dc  afac0000	sw	(r29),r12
  240  000012e0  0c000110	jal	_sem_create
  241  000012e4  54000000	nop; not filled.
  242  000012e8  00011020	add	r2,r0,r1
  243  000012ec  23bd0010	addi	r29,r29,#16
  244  000012f0  6041ffff	seqi	r1,r2,#-1
  245  000012f4  10200034	beqz	r1,L15_LF0
  246  000012f8  54000000	nop; not filled.
  247  000012fc  0c0000c4	jal	_getpid
  248  00001300  54000000	nop; not filled.
  249  00001304  23bdfff8	addi	r29,r29,#-8
  250  00001308  3c0c0000	lhi	r12,((LC5_LF0)>>16)&0xffff
  251  0000130c  258c306c	addui	r12,r12,(LC5_LF0)&0xffff
  252  00001310  afac0000	sw	(r29),r12
  253  00001314  afa10004	sw	4(r29),r1
  254  00001318  0c00009c	jal	_Printf
  255  0000131c  54000000	nop; not filled.
  256  00001320  0c00019c	jal	_Exit
  257  00001324  54000000	nop; not filled.
  258  00001328  23bd0008	addi	r29,r29,#8
  259  0000132c          	L15_LF0:
  260  0000132c  23bdfff8	addi	r29,r29,#-8
  261  00001330  afa20000	sw	(r29),r2
  262  00001334  23c1ffe8	addi	r1,r30,#-24
  263  00001338  afa10004	sw	4(r29),r1
  264  0000133c  0c0008b0	jal	_ditoa
  265  00001340  54000000	nop; not filled.
  266  00001344  0c00007c	jal	_getpid
  267  00001348  54000000	nop; not filled.
  268  0000134c  3c0c0000	lhi	r12,((LC6_LF0)>>16)&0xffff
  269  00001350  258c308c	addui	r12,r12,(LC6_LF0)&0xffff
  270  00001354  afac0000	sw	(r29),r12
  271  00001358  afa10004	sw	4(r29),r1
  272  0000135c  0c000058	jal	_Printf
  273  00001360  54000000	nop; not filled.
  274  00001364  23bd0008	addi	r29,r29,#8
  275  00001368  0c000f00	jal	_exit
  276  0000136c  54000000	nop
  277  00001370          	.endproc _main
  278                      ;;;
  279                      ;;; Stub functions for DLX traps.
  280                      ;;;
  281                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  282                      ;;;
  283                      ;;; The traps such as Open and Close
  284                      ;;; (note the capital letters) are for use by user programs.  The traps
  285                      ;;; with names such as open and close (lower case) are for use by the OS.
  286                      ;;;
  289  00001370          	.align 2
  291                      ;;; The following are the traps to be used by user-level programs
  292                      ;;;
  294  00001370          	.align 2
  295  00001370          	.proc _Open
  296  00001370          	.global _Open
  297  00001370          	_Open:
  298                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  299                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  300                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  301  00001370  44000213	trap	#0x213
  302  00001374  4be00000	jr	r31
  303  00001378  54000000	nop
  304  0000137c          	.endproc _Open
  306  0000137c          	.proc _Close
  307  0000137c          	.global _Close
  308  0000137c          	_Close:
  309  0000137c  44000214	trap	#0x214
  310  00001380  4be00000	jr	r31
  311  00001384  54000000	nop
  312  00001388          	.endproc _Close
  314  00001388          	.proc _Read
  315  00001388          	.global _Read
  316  00001388          	_Read:
  317  00001388  44000210	trap	#0x210
  318  0000138c  4be00000	jr	r31
  319  00001390  54000000	nop
  320  00001394          	.endproc _Read
  322  00001394          	.proc _Write
  323  00001394          	.global _Write
  324  00001394          	_Write:
  325  00001394  44000211	trap	#0x211
  326  00001398  4be00000	jr	r31
  327  0000139c  54000000	nop
  328  000013a0          	.endproc _Write
  330  000013a0          	.proc _Lseek
  331  000013a0          	.global _Lseek
  332  000013a0          	_Lseek:
  333  000013a0  44000212	trap	#0x212
  334  000013a4  4be00000	jr	r31
  335  000013a8  54000000	nop
  336  000013ac          	.endproc _Lseek
  338  000013ac          	.proc _Putchar
  339  000013ac          	.global _Putchar
  340  000013ac          	_Putchar:
  341  000013ac  44000280	trap	#0x280
  342  000013b0  4be00000	jr	r31
  343  000013b4  54000000	nop
  344  000013b8          	.endproc _Putchar
  346  000013b8          	.proc _Printf
  347  000013b8          	.global _Printf
  348  000013b8          	_Printf:
  349  000013b8  44000201	trap	#0x201
  350  000013bc  4be00000	jr	r31
  351  000013c0  54000000	nop
  352  000013c4          	.endproc _Printf
  354  000013c4          	.proc _getpid
  355  000013c4          	.global _getpid
  356  000013c4          	_getpid:
  357  000013c4  44000431	trap	#0x431
  358  000013c8  4be00000	jr	r31
  359  000013cc  54000000	nop
  360  000013d0          	.endproc _getpid
  362  000013d0          	.proc _process_create
  363  000013d0          	.global _process_create
  364  000013d0          	_process_create:
  365  000013d0  44000432	trap	#0x432
  366  000013d4  4be00000	jr	r31
  367  000013d8  54000000	nop
  368  000013dc          	.endproc _process_create
  370  000013dc          	.proc _shmget
  371  000013dc          	.global _shmget
  372  000013dc          	_shmget:
  373  000013dc  44000440	trap	#0x440
  374  000013e0  4be00000	jr	r31
  375  000013e4  54000000	nop
  376  000013e8          	.endproc _shmget
  378  000013e8          	.proc _shmat
  379  000013e8          	.global _shmat
  380  000013e8          	_shmat:
  381  000013e8  44000441	trap	#0x441
  382  000013ec  4be00000	jr	r31
  383  000013f0  54000000	nop
  384  000013f4          	.endproc _shmat
  386  000013f4          	.proc _sem_create
  387  000013f4          	.global _sem_create
  388  000013f4          	_sem_create:
  389  000013f4  44000450	trap	#0x450
  390  000013f8  4be00000	jr	r31
  391  000013fc  54000000	nop
  392  00001400          	.endproc _sem_create
  394  00001400          	.proc _sem_wait
  395  00001400          	.global _sem_wait
  396  00001400          	_sem_wait:
  397  00001400  44000451	trap	#0x451
  398  00001404  4be00000	jr	r31
  399  00001408  54000000	nop
  400  0000140c          	.endproc _sem_wait
  402  0000140c          	.proc _sem_signal
  403  0000140c          	.global _sem_signal
  404  0000140c          	_sem_signal:
  405  0000140c  44000452	trap	#0x452
  406  00001410  4be00000	jr	r31
  407  00001414  54000000	nop
  408  00001418          	.endproc _sem_signal
  410  00001418          	.proc _lock_create
  411  00001418          	.global _lock_create
  412  00001418          	_lock_create:
  413  00001418  44000453	trap	#0x453
  414  0000141c  4be00000	jr	r31
  415  00001420  54000000	nop
  416  00001424          	.endproc _lock_create
  418  00001424          	.proc _lock_acquire
  419  00001424          	.global _lock_acquire
  420  00001424          	_lock_acquire:
  421  00001424  44000454	trap	#0x454
  422  00001428  4be00000	jr	r31
  423  0000142c  54000000	nop
  424  00001430          	.endproc _lock_acquire
  426  00001430          	.proc _lock_release
  427  00001430          	.global _lock_release
  428  00001430          	_lock_release:
  429  00001430  44000455	trap	#0x455
  430  00001434  4be00000	jr	r31
  431  00001438  54000000	nop
  432  0000143c          	.endproc _lock_release
  434  0000143c          	.proc _cond_create
  435  0000143c          	.global _cond_create
  436  0000143c          	_cond_create:
  437  0000143c  44000456	trap	#0x456
  438  00001440  4be00000	jr	r31
  439  00001444  54000000	nop
  440  00001448          	.endproc _cond_create
  442  00001448          	.proc _cond_wait
  443  00001448          	.global _cond_wait
  444  00001448          	_cond_wait:
  445  00001448  44000457	trap	#0x457
  446  0000144c  4be00000	jr	r31
  447  00001450  54000000	nop
  448  00001454          	.endproc _cond_wait
  450  00001454          	.proc _cond_signal
  451  00001454          	.global _cond_signal
  452  00001454          	_cond_signal:
  453  00001454  44000458	trap	#0x458
  454  00001458  4be00000	jr	r31
  455  0000145c  54000000	nop
  456  00001460          	.endproc _cond_signal
  458  00001460          	.proc _cond_broadcast
  459  00001460          	.global _cond_broadcast
  460  00001460          	_cond_broadcast:
  461  00001460  44000459	trap	#0x459
  462  00001464  4be00000	jr	r31
  463  00001468  54000000	nop
  464  0000146c          	.endproc _cond_broadcast
  466  0000146c          	.proc _mbox_create
  467  0000146c          	.global _mbox_create
  468  0000146c          	_mbox_create:
  469  0000146c  44000460	trap	#0x460
  470  00001470  4be00000	jr	r31
  471  00001474  54000000	nop
  472  00001478          	.endproc _mbox_create
  474  00001478          	.proc _mbox_open
  475  00001478          	.global _mbox_open
  476  00001478          	_mbox_open:
  477  00001478  44000461	trap	#0x461
  478  0000147c  4be00000	jr	r31
  479  00001480  54000000	nop
  480  00001484          	.endproc _mbox_open
  482  00001484          	.proc _mbox_close
  483  00001484          	.global _mbox_close
  484  00001484          	_mbox_close:
  485  00001484  44000462	trap	#0x462
  486  00001488  4be00000	jr	r31
  487  0000148c  54000000	nop
  488  00001490          	.endproc _mbox_close
  490  00001490          	.proc _mbox_send
  491  00001490          	.global _mbox_send
  492  00001490          	_mbox_send:
  493  00001490  44000463	trap	#0x463
  494  00001494  4be00000	jr	r31
  495  00001498  54000000	nop
  496  0000149c          	.endproc _mbox_send
  498  0000149c          	.proc _mbox_recv
  499  0000149c          	.global _mbox_recv
  500  0000149c          	_mbox_recv:
  501  0000149c  44000464	trap	#0x464
  502  000014a0  4be00000	jr	r31
  503  000014a4  54000000	nop
  504  000014a8          	.endproc _mbox_recv
  506  000014a8          	.proc _sleep
  507  000014a8          	.global _sleep
  508  000014a8          	_sleep:
  509  000014a8  44000465	trap	#0x465
  510  000014ac  4be00000	jr	r31
  511  000014b0  54000000	nop
  512  000014b4          	.endproc _sleep
  514  000014b4          	.proc _yield
  515  000014b4          	.global _yield
  516  000014b4          	_yield:
  517  000014b4  44000466	trap	#0x466
  518  000014b8  4be00000	jr	r31
  519  000014bc  54000000	nop
  520  000014c0          	.endproc _yield
  523  000014c0          	.proc _Exit
  524  000014c0          	.global _Exit
  525  000014c0          	_Exit:
  526  000014c0  44000500	trap	#0x500
  527  000014c4  4be00000	jr	r31
  528  000014c8  54000000	nop
  529  000014cc          	.endproc _Exit
  532  000014cc          	.proc _malloc
  533  000014cc          	.global _malloc
  534  000014cc          	_malloc:
  535  000014cc  44000467	trap	#0x467
  536  000014d0  4be00000	jr	r31
  537  000014d4          	.endproc _malloc
  540  000014d4          	.proc _mfree
  541  000014d4          	.global _mfree
  542  000014d4          	_mfree:
  543  000014d4  44000468	trap	#0x468
  544  000014d8  4be00000	jr	r31
  545  000014dc          	.endproc _mfree
  546                      ; Compiled by GCC
  548  000014dc          	.align 2
  549  000014dc          	.proc _isspace
  550  000014dc          	.global _isspace
  551  000014dc          	_isspace:
  552                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  553  000014dc  afbefffc	sw	-4(r29),r30; push fp
  554  000014e0  001df020	add	r30,r0,r29; fp = sp
  555  000014e4  afbffff8	sw	-8(r29),r31; push ret addr
  556  000014e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  557  000014ec  afa20000	sw	0(r29),r2
  558  000014f0  afa30004	sw	4(r29),r3
  559  000014f4  afa40008	sw	8(r29),r4
  560  000014f8  83c20003	lb	r2,3(r30)
  561  000014fc  20010000	addi	r1,r0,#0
  562  00001500  304300ff	andi	r3,r2,#0x00ff
  563  00001504  60640020	seqi	r4,r3,#32
  564  00001508  1480002c	bnez	r4,L3_LF2
  565  0000150c  54000000	nop; delay slot nop
  566  00001510  304300ff	andi	r3,r2,#0x00ff
  567  00001514  60640009	seqi	r4,r3,#9
  568  00001518  1480001c	bnez	r4,L3_LF2
  569  0000151c  54000000	nop; delay slot nop
  570  00001520  304300ff	andi	r3,r2,#0x00ff
  571  00001524  6064000a	seqi	r4,r3,#10
  572  00001528  1480000c	bnez	r4,L3_LF2
  573  0000152c  54000000	nop; delay slot nop
  574  00001530  08000008	j	L2_LF2
  575  00001534  54000000	nop; delay slot nop
  576  00001538          	L3_LF2:
  577  00001538  20010001	addi	r1,r0,#1
  578  0000153c          	L2_LF2:
  579  0000153c  08000004	j	L1_LF2
  580  00001540  54000000	nop; delay slot nop
  581  00001544          	L1_LF2:
  582  00001544  8fa20000	lw	r2,0(r29)
  583  00001548  8fa30004	lw	r3,4(r29)
  584  0000154c  8fa40008	lw	r4,8(r29)
  585  00001550  8fdffff8	lw	r31,-8(r30)
  586  00001554  001ee820	add	r29,r0,r30
  587  00001558  8fdefffc	lw	r30,-4(r30)
  588  0000155c  4be00000	jr	r31
  589  00001560  54000000	nop
  590  00001564          	.endproc _isspace
  591  00001564          	.align 2
  592  00001564          	.proc _isxdigit
  593  00001564          	.global _isxdigit
  594  00001564          	_isxdigit:
  595                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  596  00001564  afbefffc	sw	-4(r29),r30; push fp
  597  00001568  001df020	add	r30,r0,r29; fp = sp
  598  0000156c  afbffff8	sw	-8(r29),r31; push ret addr
  599  00001570  2fbd0018	subui	r29,r29,#24; alloc local storage
  600  00001574  afa20000	sw	0(r29),r2
  601  00001578  afa30004	sw	4(r29),r3
  602  0000157c  afa40008	sw	8(r29),r4
  603  00001580  83c20003	lb	r2,3(r30)
  604  00001584  20010000	addi	r1,r0,#0
  605  00001588  304300ff	andi	r3,r2,#0x00ff
  606  0000158c  6c64002f	sgtui	r4,r3,#47
  607  00001590  1080001c	beqz	r4,L7_LF2
  608  00001594  54000000	nop; delay slot nop
  609  00001598  304300ff	andi	r3,r2,#0x00ff
  610  0000159c  70640039	sleui	r4,r3,#57
  611  000015a0  1480005c	bnez	r4,L6_LF2
  612  000015a4  54000000	nop; delay slot nop
  613  000015a8  08000004	j	L7_LF2
  614  000015ac  54000000	nop; delay slot nop
  615  000015b0          	L7_LF2:
  616  000015b0  304300ff	andi	r3,r2,#0x00ff
  617  000015b4  6c640060	sgtui	r4,r3,#96
  618  000015b8  1080001c	beqz	r4,L8_LF2
  619  000015bc  54000000	nop; delay slot nop
  620  000015c0  304300ff	andi	r3,r2,#0x00ff
  621  000015c4  70640066	sleui	r4,r3,#102
  622  000015c8  14800034	bnez	r4,L6_LF2
  623  000015cc  54000000	nop; delay slot nop
  624  000015d0  08000004	j	L8_LF2
  625  000015d4  54000000	nop; delay slot nop
  626  000015d8          	L8_LF2:
  627  000015d8  304300ff	andi	r3,r2,#0x00ff
  628  000015dc  6c640040	sgtui	r4,r3,#64
  629  000015e0  10800020	beqz	r4,L5_LF2
  630  000015e4  54000000	nop; delay slot nop
  631  000015e8  304300ff	andi	r3,r2,#0x00ff
  632  000015ec  70640041	sleui	r4,r3,#65
  633  000015f0  1480000c	bnez	r4,L6_LF2
  634  000015f4  54000000	nop; delay slot nop
  635  000015f8  08000008	j	L5_LF2
  636  000015fc  54000000	nop; delay slot nop
  637  00001600          	L6_LF2:
  638  00001600  20010001	addi	r1,r0,#1
  639  00001604          	L5_LF2:
  640  00001604  08000004	j	L4_LF2
  641  00001608  54000000	nop; delay slot nop
  642  0000160c          	L4_LF2:
  643  0000160c  8fa20000	lw	r2,0(r29)
  644  00001610  8fa30004	lw	r3,4(r29)
  645  00001614  8fa40008	lw	r4,8(r29)
  646  00001618  8fdffff8	lw	r31,-8(r30)
  647  0000161c  001ee820	add	r29,r0,r30
  648  00001620  8fdefffc	lw	r30,-4(r30)
  649  00001624  4be00000	jr	r31
  650  00001628  54000000	nop
  651  0000162c          	.endproc _isxdigit
  652  0000162c          	.align 2
  653  0000162c          	.proc _dstrcpy
  654  0000162c          	.global _dstrcpy
  655  0000162c          	_dstrcpy:
  656                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  657  0000162c  afbefffc	sw	-4(r29),r30; push fp
  658  00001630  001df020	add	r30,r0,r29; fp = sp
  659  00001634  afbffff8	sw	-8(r29),r31; push ret addr
  660  00001638  2fbd0018	subui	r29,r29,#24; alloc local storage
  661  0000163c  afa20000	sw	0(r29),r2
  662  00001640  afa30004	sw	4(r29),r3
  663  00001644  8fc10000	lw	r1,(r30)
  664  00001648  afc1fff4	sw	-12(r30),r1
  665  0000164c          	L10_LF2:
  666  0000164c  8fc10000	lw	r1,(r30)
  667  00001650  20220001	addi	r2,r1,#1
  668  00001654  afc20000	sw	(r30),r2
  669  00001658  8fc20004	lw	r2,4(r30)
  670  0000165c  20430001	addi	r3,r2,#1
  671  00001660  afc30004	sw	4(r30),r3
  672  00001664  80420000	lb	r2,(r2)
  673  00001668  a0220000	sb	(r1),r2
  674  0000166c  a3c2fff3	sb	-13(r30),r2
  675  00001670          	L12_LF2:
  676  00001670  93c1fff3	lbu	r1,-13(r30)
  677  00001674  64220000	snei	r2,r1,#0
  678  00001678  1440000c	bnez	r2,L13_LF2
  679  0000167c  54000000	nop; delay slot nop
  680  00001680  0800000c	j	L11_LF2
  681  00001684  54000000	nop; delay slot nop
  682  00001688          	L13_LF2:
  683  00001688  0bffffc0	j	L10_LF2
  684  0000168c  54000000	nop; delay slot nop
  685  00001690          	L11_LF2:
  686  00001690  8fc1fff4	lw	r1,-12(r30)
  687  00001694  08000004	j	L9_LF2
  688  00001698  54000000	nop; delay slot nop
  689  0000169c          	L9_LF2:
  690  0000169c  8fa20000	lw	r2,0(r29)
  691  000016a0  8fa30004	lw	r3,4(r29)
  692  000016a4  8fdffff8	lw	r31,-8(r30)
  693  000016a8  001ee820	add	r29,r0,r30
  694  000016ac  8fdefffc	lw	r30,-4(r30)
  695  000016b0  4be00000	jr	r31
  696  000016b4  54000000	nop
  697  000016b8          	.endproc _dstrcpy
  698  000016b8          	.align 2
  699  000016b8          	.proc _dstrncpy
  700  000016b8          	.global _dstrncpy
  701  000016b8          	_dstrncpy:
  702                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  703  000016b8  afbefffc	sw	-4(r29),r30; push fp
  704  000016bc  001df020	add	r30,r0,r29; fp = sp
  705  000016c0  afbffff8	sw	-8(r29),r31; push ret addr
  706  000016c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  707  000016c8  afa20000	sw	0(r29),r2
  708  000016cc  afa30004	sw	4(r29),r3
  709  000016d0  8fc10000	lw	r1,(r30)
  710  000016d4  afc1fff4	sw	-12(r30),r1
  711  000016d8          	L15_LF2:
  712  000016d8  8fc10008	lw	r1,8(r30)
  713  000016dc  2022ffff	addi	r2,r1,#-1
  714  000016e0  afc20008	sw	8(r30),r2
  715  000016e4  70210000	slei	r1,r1,#0
  716  000016e8  1020000c	beqz	r1,L18_LF2
  717  000016ec  54000000	nop; delay slot nop
  718  000016f0  08000048	j	L16_LF2
  719  000016f4  54000000	nop; delay slot nop
  720  000016f8          	L18_LF2:
  721  000016f8  8fc10000	lw	r1,(r30)
  722  000016fc  20220001	addi	r2,r1,#1
  723  00001700  afc20000	sw	(r30),r2
  724  00001704  8fc20004	lw	r2,4(r30)
  725  00001708  20430001	addi	r3,r2,#1
  726  0000170c  afc30004	sw	4(r30),r3
  727  00001710  80420000	lb	r2,(r2)
  728  00001714  a0220000	sb	(r1),r2
  729  00001718  a3c2fff3	sb	-13(r30),r2
  730  0000171c          	L17_LF2:
  731  0000171c  93c1fff3	lbu	r1,-13(r30)
  732  00001720  64220000	snei	r2,r1,#0
  733  00001724  1440000c	bnez	r2,L19_LF2
  734  00001728  54000000	nop; delay slot nop
  735  0000172c  0800000c	j	L16_LF2
  736  00001730  54000000	nop; delay slot nop
  737  00001734          	L19_LF2:
  738  00001734  0bffffa0	j	L15_LF2
  739  00001738  54000000	nop; delay slot nop
  740  0000173c          	L16_LF2:
  741  0000173c  8fc1fff4	lw	r1,-12(r30)
  742  00001740  08000004	j	L14_LF2
  743  00001744  54000000	nop; delay slot nop
  744  00001748          	L14_LF2:
  745  00001748  8fa20000	lw	r2,0(r29)
  746  0000174c  8fa30004	lw	r3,4(r29)
  747  00001750  8fdffff8	lw	r31,-8(r30)
  748  00001754  001ee820	add	r29,r0,r30
  749  00001758  8fdefffc	lw	r30,-4(r30)
  750  0000175c  4be00000	jr	r31
  751  00001760  54000000	nop
  752  00001764          	.endproc _dstrncpy
  753  00001764          	.align 2
  754  00001764          	.proc _dstrcat
  755  00001764          	.global _dstrcat
  756  00001764          	_dstrcat:
  757                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  758  00001764  afbefffc	sw	-4(r29),r30; push fp
  759  00001768  001df020	add	r30,r0,r29; fp = sp
  760  0000176c  afbffff8	sw	-8(r29),r31; push ret addr
  761  00001770  2fbd0018	subui	r29,r29,#24; alloc local storage
  762  00001774  afa20000	sw	0(r29),r2
  763  00001778  8fc10000	lw	r1,(r30)
  764  0000177c  afc1fff4	sw	-12(r30),r1
  765  00001780          	L21_LF2:
  766  00001780  8fc10000	lw	r1,(r30)
  767  00001784  90220000	lbu	r2,(r1)
  768  00001788  64410000	snei	r1,r2,#0
  769  0000178c  1420000c	bnez	r1,L23_LF2
  770  00001790  54000000	nop; delay slot nop
  771  00001794  0800001c	j	L22_LF2
  772  00001798  54000000	nop; delay slot nop
  773  0000179c          	L23_LF2:
  774  0000179c  8fc20000	lw	r2,(r30)
  775  000017a0  20410001	addi	r1,r2,#1
  776  000017a4  00011020	add	r2,r0,r1
  777  000017a8  afc20000	sw	(r30),r2
  778  000017ac  0bffffd0	j	L21_LF2
  779  000017b0  54000000	nop; delay slot nop
  780  000017b4          	L22_LF2:
  781  000017b4  23bdfff8	addi	r29,r29,#-8
  782  000017b8  001d0820	add	r1,r0,r29
  783  000017bc  8fc20000	lw	r2,(r30)
  784  000017c0  ac220000	sw	(r1),r2
  785  000017c4  8fc20004	lw	r2,4(r30)
  786  000017c8  ac220004	sw	4(r1),r2
  787  000017cc  0ffffe5c	jal	_dstrcpy
  788  000017d0  54000000	nop; delay slot nop
  789  000017d4  23bd0008	addi	r29,r29,#8
  790  000017d8  8fc1fff4	lw	r1,-12(r30)
  791  000017dc  08000004	j	L20_LF2
  792  000017e0  54000000	nop; delay slot nop
  793  000017e4          	L20_LF2:
  794  000017e4  8fa20000	lw	r2,0(r29)
  795  000017e8  8fdffff8	lw	r31,-8(r30)
  796  000017ec  001ee820	add	r29,r0,r30
  797  000017f0  8fdefffc	lw	r30,-4(r30)
  798  000017f4  4be00000	jr	r31
  799  000017f8  54000000	nop
  800  000017fc          	.endproc _dstrcat
  801  000017fc          	.align 2
  802  000017fc          	.proc _dstrncmp
  803  000017fc          	.global _dstrncmp
  804  000017fc          	_dstrncmp:
  805                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  806  000017fc  afbefffc	sw	-4(r29),r30; push fp
  807  00001800  001df020	add	r30,r0,r29; fp = sp
  808  00001804  afbffff8	sw	-8(r29),r31; push ret addr
  809  00001808  2fbd0018	subui	r29,r29,#24; alloc local storage
  810  0000180c  afa20000	sw	0(r29),r2
  811  00001810  afa30004	sw	4(r29),r3
  812  00001814  54000000	nop
  813  00001818  20010000	addi	r1,r0,#0
  814  0000181c  afc1fff4	sw	-12(r30),r1
  815  00001820          	L25_LF2:
  816  00001820  8fc1fff4	lw	r1,-12(r30)
  817  00001824  8fc20008	lw	r2,8(r30)
  818  00001828  0022082a	slt	r1,r1,r2
  819  0000182c  1420000c	bnez	r1,L28_LF2
  820  00001830  54000000	nop; delay slot nop
  821  00001834  08000088	j	L26_LF2
  822  00001838  54000000	nop; delay slot nop
  823  0000183c          	L28_LF2:
  824  0000183c  8fc10004	lw	r1,4(r30)
  825  00001840  90220000	lbu	r2,(r1)
  826  00001844  64410000	snei	r1,r2,#0
  827  00001848  14200018	bnez	r1,L29_LF2
  828  0000184c  54000000	nop; delay slot nop
  829  00001850  20010000	addi	r1,r0,#0
  830  00001854  080000d8	j	L24_LF2
  831  00001858  54000000	nop; delay slot nop
  832  0000185c  08000028	j	L30_LF2
  833  00001860  54000000	nop; delay slot nop
  834  00001864          	L29_LF2:
  835  00001864  8fc10000	lw	r1,(r30)
  836  00001868  8fc20004	lw	r2,4(r30)
  837  0000186c  90210000	lbu	r1,(r1)
  838  00001870  90420000	lbu	r2,(r2)
  839  00001874  00220829	sne	r1,r1,r2
  840  00001878  1020000c	beqz	r1,L30_LF2
  841  0000187c  54000000	nop; delay slot nop
  842  00001880  0800003c	j	L26_LF2
  843  00001884  54000000	nop; delay slot nop
  844  00001888          	L31_LF2:
  845  00001888          	L30_LF2:
  846  00001888  8fc20000	lw	r2,(r30)
  847  0000188c  20410001	addi	r1,r2,#1
  848  00001890  00011020	add	r2,r0,r1
  849  00001894  afc20000	sw	(r30),r2
  850  00001898  8fc20004	lw	r2,4(r30)
  851  0000189c  20410001	addi	r1,r2,#1
  852  000018a0  00011020	add	r2,r0,r1
  853  000018a4  afc20004	sw	4(r30),r2
  854  000018a8          	L27_LF2:
  855  000018a8  8fc2fff4	lw	r2,-12(r30)
  856  000018ac  20410001	addi	r1,r2,#1
  857  000018b0  00011020	add	r2,r0,r1
  858  000018b4  afc2fff4	sw	-12(r30),r2
  859  000018b8  0bffff64	j	L25_LF2
  860  000018bc  54000000	nop; delay slot nop
  861  000018c0          	L26_LF2:
  862  000018c0  8fc1fff4	lw	r1,-12(r30)
  863  000018c4  8fc20008	lw	r2,8(r30)
  864  000018c8  00220828	seq	r1,r1,r2
  865  000018cc  10200018	beqz	r1,L32_LF2
  866  000018d0  54000000	nop; delay slot nop
  867  000018d4  20010000	addi	r1,r0,#0
  868  000018d8  08000054	j	L24_LF2
  869  000018dc  54000000	nop; delay slot nop
  870  000018e0  0800004c	j	L33_LF2
  871  000018e4  54000000	nop; delay slot nop
  872  000018e8          	L32_LF2:
  873  000018e8  8fc20000	lw	r2,(r30)
  874  000018ec  90410000	lbu	r1,(r2)
  875  000018f0  8fc20004	lw	r2,4(r30)
  876  000018f4  90430000	lbu	r3,(r2)
  877  000018f8  00230822	sub	r1,r1,r3
  878  000018fc  74220000	sgei	r2,r1,#0
  879  00001900  10400020	beqz	r2,L34_LF2
  880  00001904  54000000	nop; delay slot nop
  881  00001908  8fc10000	lw	r1,(r30)
  882  0000190c  8fc20004	lw	r2,4(r30)
  883  00001910  90210000	lbu	r1,(r1)
  884  00001914  90420000	lbu	r2,(r2)
  885  00001918  00220829	sne	r1,r1,r2
  886  0000191c  08000008	j	L35_LF2
  887  00001920  54000000	nop; delay slot nop
  888  00001924          	L34_LF2:
  889  00001924  2001ffff	addi	r1,r0,#-1
  890  00001928          	L35_LF2:
  891  00001928  08000004	j	L24_LF2
  892  0000192c  54000000	nop; delay slot nop
  893  00001930          	L33_LF2:
  894  00001930          	L24_LF2:
  895  00001930  8fa20000	lw	r2,0(r29)
  896  00001934  8fa30004	lw	r3,4(r29)
  897  00001938  8fdffff8	lw	r31,-8(r30)
  898  0000193c  001ee820	add	r29,r0,r30
  899  00001940  8fdefffc	lw	r30,-4(r30)
  900  00001944  4be00000	jr	r31
  901  00001948  54000000	nop
  902  0000194c          	.endproc _dstrncmp
  903  0000194c          	.align 2
  904  0000194c          	.proc _dstrlen
  905  0000194c          	.global _dstrlen
  906  0000194c          	_dstrlen:
  907                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  908  0000194c  afbefffc	sw	-4(r29),r30; push fp
  909  00001950  001df020	add	r30,r0,r29; fp = sp
  910  00001954  afbffff8	sw	-8(r29),r31; push ret addr
  911  00001958  2fbd0018	subui	r29,r29,#24; alloc local storage
  912  0000195c  afa20000	sw	0(r29),r2
  913  00001960  20010000	addi	r1,r0,#0
  914  00001964  afc1fff4	sw	-12(r30),r1
  915  00001968          	L37_LF2:
  916  00001968  8fc10000	lw	r1,(r30)
  917  0000196c  20220001	addi	r2,r1,#1
  918  00001970  afc20000	sw	(r30),r2
  919  00001974  90210000	lbu	r1,(r1)
  920  00001978  64220000	snei	r2,r1,#0
  921  0000197c  1440000c	bnez	r2,L39_LF2
  922  00001980  54000000	nop; delay slot nop
  923  00001984  0800001c	j	L38_LF2
  924  00001988  54000000	nop; delay slot nop
  925  0000198c          	L39_LF2:
  926  0000198c  8fc2fff4	lw	r2,-12(r30)
  927  00001990  20410001	addi	r1,r2,#1
  928  00001994  00011020	add	r2,r0,r1
  929  00001998  afc2fff4	sw	-12(r30),r2
  930  0000199c  0bffffc8	j	L37_LF2
  931  000019a0  54000000	nop; delay slot nop
  932  000019a4          	L38_LF2:
  933  000019a4  8fc1fff4	lw	r1,-12(r30)
  934  000019a8  08000004	j	L36_LF2
  935  000019ac  54000000	nop; delay slot nop
  936  000019b0          	L36_LF2:
  937  000019b0  8fa20000	lw	r2,0(r29)
  938  000019b4  8fdffff8	lw	r31,-8(r30)
  939  000019b8  001ee820	add	r29,r0,r30
  940  000019bc  8fdefffc	lw	r30,-4(r30)
  941  000019c0  4be00000	jr	r31
  942  000019c4  54000000	nop
  943  000019c8          	.endproc _dstrlen
  944  000019c8          	.align 2
  945  000019c8          	.proc _dstrstr
  946  000019c8          	.global _dstrstr
  947  000019c8          	_dstrstr:
  948                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  949  000019c8  afbefffc	sw	-4(r29),r30; push fp
  950  000019cc  001df020	add	r30,r0,r29; fp = sp
  951  000019d0  afbffff8	sw	-8(r29),r31; push ret addr
  952  000019d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  953  000019d8  afa20000	sw	0(r29),r2
  954  000019dc  23bdfff8	addi	r29,r29,#-8
  955  000019e0  001d0820	add	r1,r0,r29
  956  000019e4  8fc20004	lw	r2,4(r30)
  957  000019e8  ac220000	sw	(r1),r2
  958  000019ec  0fffff5c	jal	_dstrlen
  959  000019f0  54000000	nop; delay slot nop
  960  000019f4  23bd0008	addi	r29,r29,#8
  961  000019f8  afc1fff4	sw	-12(r30),r1
  962  000019fc          	L41_LF2:
  963  000019fc  8fc10000	lw	r1,(r30)
  964  00001a00  90220000	lbu	r2,(r1)
  965  00001a04  64410000	snei	r1,r2,#0
  966  00001a08  1420000c	bnez	r1,L43_LF2
  967  00001a0c  54000000	nop; delay slot nop
  968  00001a10  08000060	j	L42_LF2
  969  00001a14  54000000	nop; delay slot nop
  970  00001a18          	L43_LF2:
  971  00001a18  23bdfff0	addi	r29,r29,#-16
  972  00001a1c  001d0820	add	r1,r0,r29
  973  00001a20  8fc20000	lw	r2,(r30)
  974  00001a24  ac220000	sw	(r1),r2
  975  00001a28  8fc20004	lw	r2,4(r30)
  976  00001a2c  ac220004	sw	4(r1),r2
  977  00001a30  8fc2fff4	lw	r2,-12(r30)
  978  00001a34  ac220008	sw	8(r1),r2
  979  00001a38  0ffffdc0	jal	_dstrncmp
  980  00001a3c  54000000	nop; delay slot nop
  981  00001a40  23bd0010	addi	r29,r29,#16
  982  00001a44  64220000	snei	r2,r1,#0
  983  00001a48  14400010	bnez	r2,L44_LF2
  984  00001a4c  54000000	nop; delay slot nop
  985  00001a50  8fc10000	lw	r1,(r30)
  986  00001a54  08000028	j	L40_LF2
  987  00001a58  54000000	nop; delay slot nop
  988  00001a5c          	L44_LF2:
  989  00001a5c  8fc20000	lw	r2,(r30)
  990  00001a60  20410001	addi	r1,r2,#1
  991  00001a64  00011020	add	r2,r0,r1
  992  00001a68  afc20000	sw	(r30),r2
  993  00001a6c  0bffff8c	j	L41_LF2
  994  00001a70  54000000	nop; delay slot nop
  995  00001a74          	L42_LF2:
  996  00001a74  20010000	addi	r1,r0,#0
  997  00001a78  08000004	j	L40_LF2
  998  00001a7c  54000000	nop; delay slot nop
  999  00001a80          	L40_LF2:
 1000  00001a80  8fa20000	lw	r2,0(r29)
 1001  00001a84  8fdffff8	lw	r31,-8(r30)
 1002  00001a88  001ee820	add	r29,r0,r30
 1003  00001a8c  8fdefffc	lw	r30,-4(r30)
 1004  00001a90  4be00000	jr	r31
 1005  00001a94  54000000	nop
 1006  00001a98          	.endproc _dstrstr
 1007  00001a98          	.align 2
 1008  00001a98          	.proc _dmindex
 1009  00001a98          	.global _dmindex
 1010  00001a98          	_dmindex:
 1011                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1012  00001a98  afbefffc	sw	-4(r29),r30; push fp
 1013  00001a9c  001df020	add	r30,r0,r29; fp = sp
 1014  00001aa0  afbffff8	sw	-8(r29),r31; push ret addr
 1015  00001aa4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1016  00001aa8  afa20000	sw	0(r29),r2
 1017  00001aac  54000000	nop
 1018  00001ab0          	L46_LF2:
 1019  00001ab0  8fc10000	lw	r1,(r30)
 1020  00001ab4  90220000	lbu	r2,(r1)
 1021  00001ab8  64410000	snei	r1,r2,#0
 1022  00001abc  1420000c	bnez	r1,L48_LF2
 1023  00001ac0  54000000	nop; delay slot nop
 1024  00001ac4  08000070	j	L47_LF2
 1025  00001ac8  54000000	nop; delay slot nop
 1026  00001acc          	L48_LF2:
 1027  00001acc  8fc10004	lw	r1,4(r30)
 1028  00001ad0  afc1fff4	sw	-12(r30),r1
 1029  00001ad4          	L49_LF2:
 1030  00001ad4  8fc1fff4	lw	r1,-12(r30)
 1031  00001ad8  90220000	lbu	r2,(r1)
 1032  00001adc  64410000	snei	r1,r2,#0
 1033  00001ae0  1420000c	bnez	r1,L52_LF2
 1034  00001ae4  54000000	nop; delay slot nop
 1035  00001ae8  08000044	j	L50_LF2
 1036  00001aec  54000000	nop; delay slot nop
 1037  00001af0          	L52_LF2:
 1038  00001af0  8fc10000	lw	r1,(r30)
 1039  00001af4  8fc2fff4	lw	r2,-12(r30)
 1040  00001af8  90210000	lbu	r1,(r1)
 1041  00001afc  90420000	lbu	r2,(r2)
 1042  00001b00  00220828	seq	r1,r1,r2
 1043  00001b04  10200010	beqz	r1,L51_LF2
 1044  00001b08  54000000	nop; delay slot nop
 1045  00001b0c  8fc10000	lw	r1,(r30)
 1046  00001b10  08000030	j	L45_LF2
 1047  00001b14  54000000	nop; delay slot nop
 1048  00001b18          	L53_LF2:
 1049  00001b18          	L51_LF2:
 1050  00001b18  8fc2fff4	lw	r2,-12(r30)
 1051  00001b1c  20410001	addi	r1,r2,#1
 1052  00001b20  00011020	add	r2,r0,r1
 1053  00001b24  afc2fff4	sw	-12(r30),r2
 1054  00001b28  0bffffa8	j	L49_LF2
 1055  00001b2c  54000000	nop; delay slot nop
 1056  00001b30          	L50_LF2:
 1057  00001b30  0bffff7c	j	L46_LF2
 1058  00001b34  54000000	nop; delay slot nop
 1059  00001b38          	L47_LF2:
 1060  00001b38  20010000	addi	r1,r0,#0
 1061  00001b3c  08000004	j	L45_LF2
 1062  00001b40  54000000	nop; delay slot nop
 1063  00001b44          	L45_LF2:
 1064  00001b44  8fa20000	lw	r2,0(r29)
 1065  00001b48  8fdffff8	lw	r31,-8(r30)
 1066  00001b4c  001ee820	add	r29,r0,r30
 1067  00001b50  8fdefffc	lw	r30,-4(r30)
 1068  00001b54  4be00000	jr	r31
 1069  00001b58  54000000	nop
 1070  00001b5c          	.endproc _dmindex
 1071  00001b5c          	.align 2
 1072  00001b5c          	.proc _dindex
 1073  00001b5c          	.global _dindex
 1074  00001b5c          	_dindex:
 1075                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1076  00001b5c  afbefffc	sw	-4(r29),r30; push fp
 1077  00001b60  001df020	add	r30,r0,r29; fp = sp
 1078  00001b64  afbffff8	sw	-8(r29),r31; push ret addr
 1079  00001b68  2fbd0010	subui	r29,r29,#16; alloc local storage
 1080  00001b6c  afa20000	sw	0(r29),r2
 1081  00001b70  54000000	nop
 1082  00001b74          	L55_LF2:
 1083  00001b74  8fc10000	lw	r1,(r30)
 1084  00001b78  90220000	lbu	r2,(r1)
 1085  00001b7c  64410000	snei	r1,r2,#0
 1086  00001b80  1420000c	bnez	r1,L57_LF2
 1087  00001b84  54000000	nop; delay slot nop
 1088  00001b88  08000040	j	L56_LF2
 1089  00001b8c  54000000	nop; delay slot nop
 1090  00001b90          	L57_LF2:
 1091  00001b90  8fc10000	lw	r1,(r30)
 1092  00001b94  90220000	lbu	r2,(r1)
 1093  00001b98  8fc10004	lw	r1,4(r30)
 1094  00001b9c  00411028	seq	r2,r2,r1
 1095  00001ba0  10400010	beqz	r2,L58_LF2
 1096  00001ba4  54000000	nop; delay slot nop
 1097  00001ba8  8fc10000	lw	r1,(r30)
 1098  00001bac  08000028	j	L54_LF2
 1099  00001bb0  54000000	nop; delay slot nop
 1100  00001bb4          	L58_LF2:
 1101  00001bb4  8fc20000	lw	r2,(r30)
 1102  00001bb8  20410001	addi	r1,r2,#1
 1103  00001bbc  00011020	add	r2,r0,r1
 1104  00001bc0  afc20000	sw	(r30),r2
 1105  00001bc4  0bffffac	j	L55_LF2
 1106  00001bc8  54000000	nop; delay slot nop
 1107  00001bcc          	L56_LF2:
 1108  00001bcc  20010000	addi	r1,r0,#0
 1109  00001bd0  08000004	j	L54_LF2
 1110  00001bd4  54000000	nop; delay slot nop
 1111  00001bd8          	L54_LF2:
 1112  00001bd8  8fa20000	lw	r2,0(r29)
 1113  00001bdc  8fdffff8	lw	r31,-8(r30)
 1114  00001be0  001ee820	add	r29,r0,r30
 1115  00001be4  8fdefffc	lw	r30,-4(r30)
 1116  00001be8  4be00000	jr	r31
 1117  00001bec  54000000	nop
 1118  00001bf0          	.endproc _dindex
 1119  00001bf0          	.align 2
 1120  00001bf0          	.proc _ditoa
 1121  00001bf0          	.global _ditoa
 1122  00001bf0          	_ditoa:
 1123                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1124  00001bf0  afbefffc	sw	-4(r29),r30; push fp
 1125  00001bf4  001df020	add	r30,r0,r29; fp = sp
 1126  00001bf8  afbffff8	sw	-8(r29),r31; push ret addr
 1127  00001bfc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1128  00001c00  afa20000	sw	0(r29),r2
 1129  00001c04  afa30004	sw	4(r29),r3
 1130  00001c08  8fc10000	lw	r1,(r30)
 1131  00001c0c  68220000	slti	r2,r1,#0
 1132  00001c10  1040002c	beqz	r2,L60_LF2
 1133  00001c14  54000000	nop; delay slot nop
 1134  00001c18  8fc10004	lw	r1,4(r30)
 1135  00001c1c  20220001	addi	r2,r1,#1
 1136  00001c20  afc20004	sw	4(r30),r2
 1137  00001c24  2002002d	addi	r2,r0,(#0x2d)&0xff
 1138  00001c28  a0220000	sb	(r1),r2
 1139  00001c2c  8fc10000	lw	r1,(r30)
 1140  00001c30  00011022	sub	r2,r0,r1
 1141  00001c34  afc20000	sw	(r30),r2
 1142  00001c38  08000118	j	L61_LF2
 1143  00001c3c  54000000	nop; delay slot nop
 1144  00001c40          	L60_LF2:
 1145  00001c40  8fc10000	lw	r1,(r30)
 1146  00001c44  64220000	snei	r2,r1,#0
 1147  00001c48  14400020	bnez	r2,L62_LF2
 1148  00001c4c  54000000	nop; delay slot nop
 1149  00001c50  8fc10004	lw	r1,4(r30)
 1150  00001c54  20220001	addi	r2,r1,#1
 1151  00001c58  afc20004	sw	4(r30),r2
 1152  00001c5c  20020030	addi	r2,r0,(#0x30)&0xff
 1153  00001c60  a0220000	sb	(r1),r2
 1154  00001c64  080000ec	j	L61_LF2
 1155  00001c68  54000000	nop; delay slot nop
 1156  00001c6c          	L62_LF2:
 1157  00001c6c  20010001	addi	r1,r0,#1
 1158  00001c70  afc1fff4	sw	-12(r30),r1
 1159  00001c74          	L64_LF2:
 1160  00001c74  8fc1fff4	lw	r1,-12(r30)
 1161  00001c78  8fc20000	lw	r2,(r30)
 1162  00001c7c  0022082c	sle	r1,r1,r2
 1163  00001c80  1420000c	bnez	r1,L66_LF2
 1164  00001c84  54000000	nop; delay slot nop
 1165  00001c88  08000024	j	L65_LF2
 1166  00001c8c  54000000	nop; delay slot nop
 1167  00001c90          	L67_LF2:
 1168  00001c90          	L66_LF2:
 1169  00001c90  8fc1fff4	lw	r1,-12(r30)
 1170  00001c94  00011820	add	r3,r0,r1
 1171  00001c98  50620002	slli	r2,r3,#0x2
 1172  00001c9c  00411020	add	r2,r2,r1
 1173  00001ca0  50410001	slli	r1,r2,#0x1
 1174  00001ca4  afc1fff4	sw	-12(r30),r1
 1175  00001ca8  0bffffc8	j	L64_LF2
 1176  00001cac  54000000	nop; delay slot nop
 1177  00001cb0          	L65_LF2:
 1178  00001cb0  54000000	nop
 1179  00001cb4          	L68_LF2:
 1180  00001cb4  8fc1fff4	lw	r1,-12(r30)
 1181  00001cb8  2002000a	addi	r2,r0,#10
 1182  00001cbc  00200035	movi2fp	f0,r1
 1183  00001cc0  00400835	movi2fp	f1,r2
 1184  00001cc4  0401000f	div	f0,f0,f1
 1185  00001cc8  00000834	movfp2i	r1,f0
 1186  00001ccc  afc1fff4	sw	-12(r30),r1
 1187  00001cd0  8fc10004	lw	r1,4(r30)
 1188  00001cd4  20220001	addi	r2,r1,#1
 1189  00001cd8  afc20004	sw	4(r30),r2
 1190  00001cdc  8fc20000	lw	r2,(r30)
 1191  00001ce0  8fc3fff4	lw	r3,-12(r30)
 1192  00001ce4  00400035	movi2fp	f0,r2
 1193  00001ce8  00600835	movi2fp	f1,r3
 1194  00001cec  0401000f	div	f0,f0,f1
 1195  00001cf0  00001034	movfp2i	r2,f0
 1196  00001cf4  00021820	add	r3,r0,r2
 1197  00001cf8  20620030	addi	r2,r3,#48
 1198  00001cfc  a0220000	sb	(r1),r2
 1199  00001d00  8fc10000	lw	r1,(r30)
 1200  00001d04  8fc3fff4	lw	r3,-12(r30)
 1201  00001d08  00200035	movi2fp	f0,r1
 1202  00001d0c  00600835	movi2fp	f1,r3
 1203  00001d10  0401000f	div	f0,f0,f1
 1204  00001d14  00001034	movfp2i	r2,f0
 1205  00001d18  8fc3fff4	lw	r3,-12(r30)
 1206  00001d1c  00400035	movi2fp	f0,r2
 1207  00001d20  00600835	movi2fp	f1,r3
 1208  00001d24  0401000e	mult	f0,f0,f1
 1209  00001d28  00001034	movfp2i	r2,f0
 1210  00001d2c  00220822	sub	r1,r1,r2
 1211  00001d30  afc10000	sw	(r30),r1
 1212  00001d34          	L70_LF2:
 1213  00001d34  8fc1fff4	lw	r1,-12(r30)
 1214  00001d38  6c220001	sgti	r2,r1,#1
 1215  00001d3c  1440000c	bnez	r2,L71_LF2
 1216  00001d40  54000000	nop; delay slot nop
 1217  00001d44  0800000c	j	L61_LF2
 1218  00001d48  54000000	nop; delay slot nop
 1219  00001d4c          	L71_LF2:
 1220  00001d4c  0bffff64	j	L68_LF2
 1221  00001d50  54000000	nop; delay slot nop
 1222  00001d54          	L69_LF2:
 1223  00001d54          	L63_LF2:
 1224  00001d54          	L61_LF2:
 1225  00001d54  8fc10004	lw	r1,4(r30)
 1226  00001d58  20020000	addi	r2,r0,(#0x0)&0xff
 1227  00001d5c  a0220000	sb	(r1),r2
 1228  00001d60          	L59_LF2:
 1229  00001d60  8fa20000	lw	r2,0(r29)
 1230  00001d64  8fa30004	lw	r3,4(r29)
 1231  00001d68  8fdffff8	lw	r31,-8(r30)
 1232  00001d6c  001ee820	add	r29,r0,r30
 1233  00001d70  8fdefffc	lw	r30,-4(r30)
 1234  00001d74  4be00000	jr	r31
 1235  00001d78  54000000	nop
 1236  00001d7c          	.endproc _ditoa
 1237  00001d7c          	.align 2
 1238  00001d7c          	.proc _dstrtol
 1239  00001d7c          	.global _dstrtol
 1240  00001d7c          	_dstrtol:
 1241                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1242  00001d7c  afbefffc	sw	-4(r29),r30; push fp
 1243  00001d80  001df020	add	r30,r0,r29; fp = sp
 1244  00001d84  afbffff8	sw	-8(r29),r31; push ret addr
 1245  00001d88  2fbd0020	subui	r29,r29,#32; alloc local storage
 1246  00001d8c  afa20000	sw	0(r29),r2
 1247  00001d90  20010000	addi	r1,r0,#0
 1248  00001d94  afc1fff4	sw	-12(r30),r1
 1249  00001d98          	L73_LF2:
 1250  00001d98  8fc10000	lw	r1,(r30)
 1251  00001d9c  90220000	lbu	r2,(r1)
 1252  00001da0  60410020	seqi	r1,r2,#32
 1253  00001da4  14200034	bnez	r1,L75_LF2
 1254  00001da8  54000000	nop; delay slot nop
 1255  00001dac  8fc10000	lw	r1,(r30)
 1256  00001db0  90220000	lbu	r2,(r1)
 1257  00001db4  60410009	seqi	r1,r2,#9
 1258  00001db8  14200020	bnez	r1,L75_LF2
 1259  00001dbc  54000000	nop; delay slot nop
 1260  00001dc0  8fc10000	lw	r1,(r30)
 1261  00001dc4  90220000	lbu	r2,(r1)
 1262  00001dc8  6041000a	seqi	r1,r2,#10
 1263  00001dcc  1420000c	bnez	r1,L75_LF2
 1264  00001dd0  54000000	nop; delay slot nop
 1265  00001dd4  0800001c	j	L74_LF2
 1266  00001dd8  54000000	nop; delay slot nop
 1267  00001ddc          	L75_LF2:
 1268  00001ddc  8fc20000	lw	r2,(r30)
 1269  00001de0  20410001	addi	r1,r2,#1
 1270  00001de4  00011020	add	r2,r0,r1
 1271  00001de8  afc20000	sw	(r30),r2
 1272  00001dec  0bffffa8	j	L73_LF2
 1273  00001df0  54000000	nop; delay slot nop
 1274  00001df4          	L74_LF2:
 1275  00001df4  8fc10004	lw	r1,4(r30)
 1276  00001df8  64220000	snei	r2,r1,#0
 1277  00001dfc  10400010	beqz	r2,L76_LF2
 1278  00001e00  54000000	nop; delay slot nop
 1279  00001e04  8fc10004	lw	r1,4(r30)
 1280  00001e08  8fc20000	lw	r2,(r30)
 1281  00001e0c  ac220000	sw	(r1),r2
 1282  00001e10          	L76_LF2:
 1283  00001e10  8fc10000	lw	r1,(r30)
 1284  00001e14  90220000	lbu	r2,(r1)
 1285  00001e18  64410000	snei	r1,r2,#0
 1286  00001e1c  14200010	bnez	r1,L77_LF2
 1287  00001e20  54000000	nop; delay slot nop
 1288  00001e24  8fc1fff4	lw	r1,-12(r30)
 1289  00001e28  08000294	j	L72_LF2
 1290  00001e2c  54000000	nop; delay slot nop
 1291  00001e30          	L77_LF2:
 1292  00001e30  8fc10000	lw	r1,(r30)
 1293  00001e34  90220000	lbu	r2,(r1)
 1294  00001e38  6041002d	seqi	r1,r2,#45
 1295  00001e3c  10200024	beqz	r1,L78_LF2
 1296  00001e40  54000000	nop; delay slot nop
 1297  00001e44  2001ffff	addi	r1,r0,#-1
 1298  00001e48  afc1ffec	sw	-20(r30),r1
 1299  00001e4c  8fc20000	lw	r2,(r30)
 1300  00001e50  20410001	addi	r1,r2,#1
 1301  00001e54  00011020	add	r2,r0,r1
 1302  00001e58  afc20000	sw	(r30),r2
 1303  00001e5c  0800000c	j	L79_LF2
 1304  00001e60  54000000	nop; delay slot nop
 1305  00001e64          	L78_LF2:
 1306  00001e64  20010001	addi	r1,r0,#1
 1307  00001e68  afc1ffec	sw	-20(r30),r1
 1308  00001e6c          	L79_LF2:
 1309  00001e6c  8fc10008	lw	r1,8(r30)
 1310  00001e70  64220000	snei	r2,r1,#0
 1311  00001e74  14400090	bnez	r2,L80_LF2
 1312  00001e78  54000000	nop; delay slot nop
 1313  00001e7c  8fc10000	lw	r1,(r30)
 1314  00001e80  90220000	lbu	r2,(r1)
 1315  00001e84  60410030	seqi	r1,r2,#48
 1316  00001e88  10200074	beqz	r1,L81_LF2
 1317  00001e8c  54000000	nop; delay slot nop
 1318  00001e90  8fc20000	lw	r2,(r30)
 1319  00001e94  20410001	addi	r1,r2,#1
 1320  00001e98  00011020	add	r2,r0,r1
 1321  00001e9c  afc20000	sw	(r30),r2
 1322  00001ea0  8fc10000	lw	r1,(r30)
 1323  00001ea4  90220000	lbu	r2,(r1)
 1324  00001ea8  60410078	seqi	r1,r2,#120
 1325  00001eac  14200020	bnez	r1,L83_LF2
 1326  00001eb0  54000000	nop; delay slot nop
 1327  00001eb4  8fc10000	lw	r1,(r30)
 1328  00001eb8  90220000	lbu	r2,(r1)
 1329  00001ebc  60410058	seqi	r1,r2,#88
 1330  00001ec0  1420000c	bnez	r1,L83_LF2
 1331  00001ec4  54000000	nop; delay slot nop
 1332  00001ec8  08000024	j	L82_LF2
 1333  00001ecc  54000000	nop; delay slot nop
 1334  00001ed0          	L83_LF2:
 1335  00001ed0  20010010	addi	r1,r0,#16
 1336  00001ed4  afc10008	sw	8(r30),r1
 1337  00001ed8  8fc20000	lw	r2,(r30)
 1338  00001edc  20410001	addi	r1,r2,#1
 1339  00001ee0  00011020	add	r2,r0,r1
 1340  00001ee4  afc20000	sw	(r30),r2
 1341  00001ee8  0800000c	j	L84_LF2
 1342  00001eec  54000000	nop; delay slot nop
 1343  00001ef0          	L82_LF2:
 1344  00001ef0  20010008	addi	r1,r0,#8
 1345  00001ef4  afc10008	sw	8(r30),r1
 1346  00001ef8          	L84_LF2:
 1347  00001ef8  0800000c	j	L80_LF2
 1348  00001efc  54000000	nop; delay slot nop
 1349  00001f00          	L81_LF2:
 1350  00001f00  2001000a	addi	r1,r0,#10
 1351  00001f04  afc10008	sw	8(r30),r1
 1352  00001f08          	L85_LF2:
 1353  00001f08          	L80_LF2:
 1354  00001f08  8fc10008	lw	r1,8(r30)
 1355  00001f0c  70220000	slei	r2,r1,#0
 1356  00001f10  1440001c	bnez	r2,L87_LF2
 1357  00001f14  54000000	nop; delay slot nop
 1358  00001f18  8fc10008	lw	r1,8(r30)
 1359  00001f1c  6c220010	sgti	r2,r1,#16
 1360  00001f20  1440000c	bnez	r2,L87_LF2
 1361  00001f24  54000000	nop; delay slot nop
 1362  00001f28  08000010	j	L86_LF2
 1363  00001f2c  54000000	nop; delay slot nop
 1364  00001f30          	L87_LF2:
 1365  00001f30  8fc1fff4	lw	r1,-12(r30)
 1366  00001f34  08000188	j	L72_LF2
 1367  00001f38  54000000	nop; delay slot nop
 1368  00001f3c          	L86_LF2:
 1369  00001f3c  54000000	nop
 1370  00001f40          	L88_LF2:
 1371  00001f40  8fc10000	lw	r1,(r30)
 1372  00001f44  90220000	lbu	r2,(r1)
 1373  00001f48  6c41002f	sgtui	r1,r2,#47
 1374  00001f4c  10200030	beqz	r1,L91_LF2
 1375  00001f50  54000000	nop; delay slot nop
 1376  00001f54  8fc10000	lw	r1,(r30)
 1377  00001f58  90220000	lbu	r2,(r1)
 1378  00001f5c  70410039	sleui	r1,r2,#57
 1379  00001f60  1020001c	beqz	r1,L91_LF2
 1380  00001f64  54000000	nop; delay slot nop
 1381  00001f68  8fc10000	lw	r1,(r30)
 1382  00001f6c  90220000	lbu	r2,(r1)
 1383  00001f70  2041ffd0	addi	r1,r2,#-48
 1384  00001f74  afc1fff0	sw	-16(r30),r1
 1385  00001f78  0800008c	j	L92_LF2
 1386  00001f7c  54000000	nop; delay slot nop
 1387  00001f80          	L91_LF2:
 1388  00001f80  8fc10000	lw	r1,(r30)
 1389  00001f84  90220000	lbu	r2,(r1)
 1390  00001f88  6c410060	sgtui	r1,r2,#96
 1391  00001f8c  10200030	beqz	r1,L93_LF2
 1392  00001f90  54000000	nop; delay slot nop
 1393  00001f94  8fc10000	lw	r1,(r30)
 1394  00001f98  90220000	lbu	r2,(r1)
 1395  00001f9c  7041007a	sleui	r1,r2,#122
 1396  00001fa0  1020001c	beqz	r1,L93_LF2
 1397  00001fa4  54000000	nop; delay slot nop
 1398  00001fa8  8fc10000	lw	r1,(r30)
 1399  00001fac  90220000	lbu	r2,(r1)
 1400  00001fb0  2041ffa9	addi	r1,r2,#-87
 1401  00001fb4  afc1fff0	sw	-16(r30),r1
 1402  00001fb8  0800004c	j	L92_LF2
 1403  00001fbc  54000000	nop; delay slot nop
 1404  00001fc0          	L93_LF2:
 1405  00001fc0  8fc10000	lw	r1,(r30)
 1406  00001fc4  90220000	lbu	r2,(r1)
 1407  00001fc8  6c410040	sgtui	r1,r2,#64
 1408  00001fcc  10200030	beqz	r1,L95_LF2
 1409  00001fd0  54000000	nop; delay slot nop
 1410  00001fd4  8fc10000	lw	r1,(r30)
 1411  00001fd8  90220000	lbu	r2,(r1)
 1412  00001fdc  7041005a	sleui	r1,r2,#90
 1413  00001fe0  1020001c	beqz	r1,L95_LF2
 1414  00001fe4  54000000	nop; delay slot nop
 1415  00001fe8  8fc10000	lw	r1,(r30)
 1416  00001fec  90220000	lbu	r2,(r1)
 1417  00001ff0  2041ffc9	addi	r1,r2,#-55
 1418  00001ff4  afc1fff0	sw	-16(r30),r1
 1419  00001ff8  0800000c	j	L92_LF2
 1420  00001ffc  54000000	nop; delay slot nop
 1421  00002000          	L95_LF2:
 1422  00002000  200103e8	addi	r1,r0,#1000
 1423  00002004  afc1fff0	sw	-16(r30),r1
 1424  00002008          	L96_LF2:
 1425  00002008          	L94_LF2:
 1426  00002008          	L92_LF2:
 1427  00002008  8fc1fff0	lw	r1,-16(r30)
 1428  0000200c  8fc20008	lw	r2,8(r30)
 1429  00002010  0022082a	slt	r1,r1,r2
 1430  00002014  10200040	beqz	r1,L90_LF2
 1431  00002018  54000000	nop; delay slot nop
 1432  0000201c  8fc1fff4	lw	r1,-12(r30)
 1433  00002020  8fc20008	lw	r2,8(r30)
 1434  00002024  00200035	movi2fp	f0,r1
 1435  00002028  00400835	movi2fp	f1,r2
 1436  0000202c  0401000e	mult	f0,f0,f1
 1437  00002030  00000834	movfp2i	r1,f0
 1438  00002034  afc1fff4	sw	-12(r30),r1
 1439  00002038  8fc1fff4	lw	r1,-12(r30)
 1440  0000203c  8fc2fff0	lw	r2,-16(r30)
 1441  00002040  00220820	add	r1,r1,r2
 1442  00002044  afc1fff4	sw	-12(r30),r1
 1443  00002048  8fc20000	lw	r2,(r30)
 1444  0000204c  20410001	addi	r1,r2,#1
 1445  00002050  00011020	add	r2,r0,r1
 1446  00002054  afc20000	sw	(r30),r2
 1447  00002058          	L97_LF2:
 1448  00002058          	L90_LF2:
 1449  00002058  8fc1fff0	lw	r1,-16(r30)
 1450  0000205c  8fc20008	lw	r2,8(r30)
 1451  00002060  0022082a	slt	r1,r1,r2
 1452  00002064  1420000c	bnez	r1,L98_LF2
 1453  00002068  54000000	nop; delay slot nop
 1454  0000206c  0800000c	j	L89_LF2
 1455  00002070  54000000	nop; delay slot nop
 1456  00002074          	L98_LF2:
 1457  00002074  0bfffec8	j	L88_LF2
 1458  00002078  54000000	nop; delay slot nop
 1459  0000207c          	L89_LF2:
 1460  0000207c  8fc10004	lw	r1,4(r30)
 1461  00002080  64220000	snei	r2,r1,#0
 1462  00002084  10400010	beqz	r2,L99_LF2
 1463  00002088  54000000	nop; delay slot nop
 1464  0000208c  8fc10004	lw	r1,4(r30)
 1465  00002090  8fc20000	lw	r2,(r30)
 1466  00002094  ac220000	sw	(r1),r2
 1467  00002098          	L99_LF2:
 1468  00002098  8fc1fff4	lw	r1,-12(r30)
 1469  0000209c  8fc2ffec	lw	r2,-20(r30)
 1470  000020a0  00200035	movi2fp	f0,r1
 1471  000020a4  00400835	movi2fp	f1,r2
 1472  000020a8  0401000e	mult	f0,f0,f1
 1473  000020ac  00000834	movfp2i	r1,f0
 1474  000020b0  afc1fff4	sw	-12(r30),r1
 1475  000020b4  8fc1fff4	lw	r1,-12(r30)
 1476  000020b8  08000004	j	L72_LF2
 1477  000020bc  54000000	nop; delay slot nop
 1478  000020c0          	L72_LF2:
 1479  000020c0  8fa20000	lw	r2,0(r29)
 1480  000020c4  8fdffff8	lw	r31,-8(r30)
 1481  000020c8  001ee820	add	r29,r0,r30
 1482  000020cc  8fdefffc	lw	r30,-4(r30)
 1483  000020d0  4be00000	jr	r31
 1484  000020d4  54000000	nop
 1485  000020d8          	.endproc _dstrtol
 1486  000020d8          	.align 2
 1487  000020d8          	.proc _bcopy
 1488  000020d8          	.global _bcopy
 1489  000020d8          	_bcopy:
 1490                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1491  000020d8  afbefffc	sw	-4(r29),r30; push fp
 1492  000020dc  001df020	add	r30,r0,r29; fp = sp
 1493  000020e0  afbffff8	sw	-8(r29),r31; push ret addr
 1494  000020e4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1495  000020e8  afa20000	sw	0(r29),r2
 1496  000020ec  afa30004	sw	4(r29),r3
 1497  000020f0  54000000	nop
 1498  000020f4          	L101_LF2:
 1499  000020f4  8fc10008	lw	r1,8(r30)
 1500  000020f8  2022ffff	addi	r2,r1,#-1
 1501  000020fc  afc20008	sw	8(r30),r2
 1502  00002100  6c210000	sgti	r1,r1,#0
 1503  00002104  1420000c	bnez	r1,L103_LF2
 1504  00002108  54000000	nop; delay slot nop
 1505  0000210c  0800002c	j	L102_LF2
 1506  00002110  54000000	nop; delay slot nop
 1507  00002114          	L103_LF2:
 1508  00002114  8fc10004	lw	r1,4(r30)
 1509  00002118  20220001	addi	r2,r1,#1
 1510  0000211c  afc20004	sw	4(r30),r2
 1511  00002120  8fc20000	lw	r2,(r30)
 1512  00002124  20430001	addi	r3,r2,#1
 1513  00002128  afc30000	sw	(r30),r3
 1514  0000212c  80420000	lb	r2,(r2)
 1515  00002130  a0220000	sb	(r1),r2
 1516  00002134  0bffffbc	j	L101_LF2
 1517  00002138  54000000	nop; delay slot nop
 1518  0000213c          	L102_LF2:
 1519  0000213c          	L100_LF2:
 1520  0000213c  8fa20000	lw	r2,0(r29)
 1521  00002140  8fa30004	lw	r3,4(r29)
 1522  00002144  8fdffff8	lw	r31,-8(r30)
 1523  00002148  001ee820	add	r29,r0,r30
 1524  0000214c  8fdefffc	lw	r30,-4(r30)
 1525  00002150  4be00000	jr	r31
 1526  00002154  54000000	nop
 1527  00002158          	.endproc _bcopy
 1528  00002158          	.align 2
 1529  00002158          	.proc _bzero
 1530  00002158          	.global _bzero
 1531  00002158          	_bzero:
 1532                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1533  00002158  afbefffc	sw	-4(r29),r30; push fp
 1534  0000215c  001df020	add	r30,r0,r29; fp = sp
 1535  00002160  afbffff8	sw	-8(r29),r31; push ret addr
 1536  00002164  2fbd0010	subui	r29,r29,#16; alloc local storage
 1537  00002168  afa20000	sw	0(r29),r2
 1538  0000216c  54000000	nop
 1539  00002170          	L105_LF2:
 1540  00002170  8fc10004	lw	r1,4(r30)
 1541  00002174  2022ffff	addi	r2,r1,#-1
 1542  00002178  afc20004	sw	4(r30),r2
 1543  0000217c  6c210000	sgti	r1,r1,#0
 1544  00002180  1420000c	bnez	r1,L107_LF2
 1545  00002184  54000000	nop; delay slot nop
 1546  00002188  08000020	j	L106_LF2
 1547  0000218c  54000000	nop; delay slot nop
 1548  00002190          	L107_LF2:
 1549  00002190  8fc10000	lw	r1,(r30)
 1550  00002194  20220001	addi	r2,r1,#1
 1551  00002198  afc20000	sw	(r30),r2
 1552  0000219c  20020000	addi	r2,r0,(#0x0)&0xff
 1553  000021a0  a0220000	sb	(r1),r2
 1554  000021a4  0bffffc8	j	L105_LF2
 1555  000021a8  54000000	nop; delay slot nop
 1556  000021ac          	L106_LF2:
 1557  000021ac          	L104_LF2:
 1558  000021ac  8fa20000	lw	r2,0(r29)
 1559  000021b0  8fdffff8	lw	r31,-8(r30)
 1560  000021b4  001ee820	add	r29,r0,r30
 1561  000021b8  8fdefffc	lw	r30,-4(r30)
 1562  000021bc  4be00000	jr	r31
 1563  000021c0  54000000	nop
 1564  000021c4          	.endproc _bzero
 1565  000021c4          	.align 2
 1566  000021c4          	.proc _min
 1567  000021c4          	.global _min
 1568  000021c4          	_min:
 1569                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1570  000021c4  afbefffc	sw	-4(r29),r30; push fp
 1571  000021c8  001df020	add	r30,r0,r29; fp = sp
 1572  000021cc  afbffff8	sw	-8(r29),r31; push ret addr
 1573  000021d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1574  000021d4  afa20000	sw	0(r29),r2
 1575  000021d8  afa30004	sw	4(r29),r3
 1576  000021dc  8fc10000	lw	r1,(r30)
 1577  000021e0  8fc20004	lw	r2,4(r30)
 1578  000021e4  0022182c	sle	r3,r1,r2
 1579  000021e8  14600008	bnez	r3,L109_LF2
 1580  000021ec  54000000	nop; delay slot nop
 1581  000021f0  8fc10004	lw	r1,4(r30)
 1582  000021f4          	L109_LF2:
 1583  000021f4  08000004	j	L108_LF2
 1584  000021f8  54000000	nop; delay slot nop
 1585  000021fc          	L108_LF2:
 1586  000021fc  8fa20000	lw	r2,0(r29)
 1587  00002200  8fa30004	lw	r3,4(r29)
 1588  00002204  8fdffff8	lw	r31,-8(r30)
 1589  00002208  001ee820	add	r29,r0,r30
 1590  0000220c  8fdefffc	lw	r30,-4(r30)
 1591  00002210  4be00000	jr	r31
 1592  00002214  54000000	nop
 1593  00002218          	.endproc _min
 1594  00002218          	.align 2
 1595  00002218          	.proc _max
 1596  00002218          	.global _max
 1597  00002218          	_max:
 1598                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1599  00002218  afbefffc	sw	-4(r29),r30; push fp
 1600  0000221c  001df020	add	r30,r0,r29; fp = sp
 1601  00002220  afbffff8	sw	-8(r29),r31; push ret addr
 1602  00002224  2fbd0010	subui	r29,r29,#16; alloc local storage
 1603  00002228  afa20000	sw	0(r29),r2
 1604  0000222c  afa30004	sw	4(r29),r3
 1605  00002230  8fc10000	lw	r1,(r30)
 1606  00002234  8fc20004	lw	r2,4(r30)
 1607  00002238  0022182d	sge	r3,r1,r2
 1608  0000223c  14600008	bnez	r3,L111_LF2
 1609  00002240  54000000	nop; delay slot nop
 1610  00002244  8fc10004	lw	r1,4(r30)
 1611  00002248          	L111_LF2:
 1612  00002248  08000004	j	L110_LF2
 1613  0000224c  54000000	nop; delay slot nop
 1614  00002250          	L110_LF2:
 1615  00002250  8fa20000	lw	r2,0(r29)
 1616  00002254  8fa30004	lw	r3,4(r29)
 1617  00002258  8fdffff8	lw	r31,-8(r30)
 1618  0000225c  001ee820	add	r29,r0,r30
 1619  00002260  8fdefffc	lw	r30,-4(r30)
 1620  00002264  4be00000	jr	r31
 1621  00002268  54000000	nop
 1622  0000226c          	.endproc _max
 1623                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1624                      ;;;
 1625                      ;;; Most of the traps are called in files from libtraps.
 1628  0000226c          	.align 2
 1629  0000226c          	.proc _exit
 1630  0000226c          	.global _exit
 1631  0000226c          	_exit:
 1632  0000226c  44000300	trap	#0x300
 1633  00002270  4be00000	jr	r31
 1634  00002274  54000000	nop
 1635  00002278          	.endproc _exit
 1637                      ; for the benefit of gcc.
 1638  00002278          	.proc ___main
 1639  00002278          	.global ___main
 1640  00002278          	___main:
 1641  00002278  4be00000	jr	r31
 1642  0000227c  54000000	nop
 1643  00002280          	.endproc ___main
 1644                      ;
 1645                      ; Stub functions for DLX traps.
 1646                      ;
 1647                      ; Aaron Sawdey 1996; released to the Public Domain.
 1648                      ;
 1650  00002280          	.proc _printf
 1651  00002280          	.global _printf
 1652  00002280          	_printf:
 1653  00002280  44002001	trap	#0x2001
 1654  00002284  4be00000	jr	r31
 1655  00002288  54000000	nop
 1656  0000228c          	.endproc _printf
 1658  0000228c          	.text
 1659  0000228c          	.global _etext
 1660  0000228c          	_etext:
 1661  0000228c          	.align 3
 1662  00002290          	.data
 1663  000030d2          	.global _edata
 1664  000030d2          	_edata:
