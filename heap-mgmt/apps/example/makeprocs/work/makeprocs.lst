 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 210
    4                      ; Text size: 4560
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  46726565	.ascii "Freeing A:\n\000"
   82  00003004  696e6720	
   82  00003008  413a0a00	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  46726565	.ascii "Freeing B:\n\000"
   85  00003010  696e6720	
   85  00003014  423a0a00	
   86  00003018          	.align 2
   87  00003018          	LC2_LF0:
   88  00003018  46726565	.ascii "Freeing C:\n\000"
   88  0000301c  696e6720	
   88  00003020  433a0a00	
   89  00003024          	.align 2
   90  00003024          	LC3_LF0:
   91  00003024  46726565	.ascii "Freeing D:\n\000"
   91  00003028  696e6720	
   91  0000302c  443a0a00	
   92  00003030          	.align 2
   93  00003030          	LC4_LF0:
   94  00003030  55736167	.ascii "Usage: %s <which program to run (1-6) or all of them (0) \n\000"
   94  00003034  653a2025	
   94  00003038  73203c77	
   94  0000303c  68696368	
   94  00003040  2070726f	
   94  00003044  6772616d	
   94  00003048  20746f20	
   94  0000304c  72756e20	
   94  00003050  28312d36	
   94  00003054  29206f72	
   94  00003058  20616c6c	
   94  0000305c  206f6620	
   94  00003060  7468656d	
   94  00003064  20283029	
   94  00003068  200a00  	
   95  0000306b          	.align 2
   96  0000306c          	LC5_LF0:
   97  0000306c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   97  00003070  70726f63	
   97  00003074  73202825	
   97  00003078  64293a20	
   97  0000307c  42616420	
   97  00003080  73656d5f	
   97  00003084  63726561	
   97  00003088  74650a00	
   98  0000308c          	.align 2
   99  0000308c          	LC6_LF0:
  100  0000308c  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  100  00003090  70726f63	
  100  00003094  73202825	
  100  00003098  64293a20	
  100  0000309c  416c6c20	
  100  000030a0  6f746865	
  100  000030a4  72207072	
  100  000030a8  6f636573	
  100  000030ac  73657320	
  100  000030b0  636f6d70	
  100  000030b4  6c657465	
  100  000030b8  642c2065	
  100  000030bc  78697469	
  100  000030c0  6e67206d	
  100  000030c4  61696e20	
  100  000030c8  70726f63	
  100  000030cc  6573732e	
  100  000030d0  0a      	
  101  000030d1  00      	.ascii "\000"
  102  000030d2          	.text
  103  000010d4          	.align 2
  104  000010d4          	.proc _main
  105  000010d4          	.global _main
  106  000010d4          	_main:
  107                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  108  000010d4  afbefffc	sw	-4(r29),r30; push fp
  109  000010d8  001df020	add	r30,r0,r29; fp = sp
  110  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  111  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  112  000010e4  8fc60000	lw	r6,(r30)
  113  000010e8  8fc70004	lw	r7,4(r30)
  114  000010ec  0c0010cc	jal	___main
  115  000010f0  54000000	nop; not filled.
  116  000010f4  23bdfff8	addi	r29,r29,#-8
  117  000010f8  20080020	addi	r8,r0,#32
  118  000010fc  afa80000	sw	(r29),r8
  119  00001100  0c00030c	jal	_malloc
  120  00001104  54000000	nop; not filled.
  121  00001108  00011020	add	r2,r0,r1
  122  0000110c  afa80000	sw	(r29),r8
  123  00001110  0c0002fc	jal	_malloc
  124  00001114  54000000	nop; not filled.
  125  00001118  00011820	add	r3,r0,r1
  126  0000111c  afa80000	sw	(r29),r8
  127  00001120  0c0002ec	jal	_malloc
  128  00001124  54000000	nop; not filled.
  129  00001128  00012020	add	r4,r0,r1
  130  0000112c  afa80000	sw	(r29),r8
  131  00001130  0c0002dc	jal	_malloc
  132  00001134  54000000	nop; not filled.
  133  00001138  00012820	add	r5,r0,r1
  134  0000113c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  135  00001140  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  136  00001144  afa80000	sw	(r29),r8
  137  00001148  0c001078	jal	_printf
  138  0000114c  54000000	nop; not filled.
  139  00001150  afa20000	sw	(r29),r2
  140  00001154  0c0002c0	jal	_mfree
  141  00001158  54000000	nop; not filled.
  142  0000115c  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  143  00001160  2508300c	addui	r8,r8,(LC1_LF0)&0xffff
  144  00001164  afa80000	sw	(r29),r8
  145  00001168  0c001058	jal	_printf
  146  0000116c  54000000	nop; not filled.
  147  00001170  afa30000	sw	(r29),r3
  148  00001174  0c0002a0	jal	_mfree
  149  00001178  54000000	nop; not filled.
  150  0000117c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  151  00001180  25083018	addui	r8,r8,(LC2_LF0)&0xffff
  152  00001184  afa80000	sw	(r29),r8
  153  00001188  0c001038	jal	_printf
  154  0000118c  54000000	nop; not filled.
  155  00001190  afa40000	sw	(r29),r4
  156  00001194  0c000280	jal	_mfree
  157  00001198  54000000	nop; not filled.
  158  0000119c  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  159  000011a0  25083024	addui	r8,r8,(LC3_LF0)&0xffff
  160  000011a4  afa80000	sw	(r29),r8
  161  000011a8  0c001018	jal	_printf
  162  000011ac  54000000	nop; not filled.
  163  000011b0  afa50000	sw	(r29),r5
  164  000011b4  0c000260	jal	_mfree
  165  000011b8  54000000	nop; not filled.
  166  000011bc  23bd0008	addi	r29,r29,#8
  167  000011c0  64c10002	snei	r1,r6,#2
  168  000011c4  10200030	beqz	r1,L14_LF0
  169  000011c8  54000000	nop; not filled.
  170  000011cc  23bdfff8	addi	r29,r29,#-8
  171  000011d0  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  172  000011d4  25083030	addui	r8,r8,(LC4_LF0)&0xffff
  173  000011d8  afa80000	sw	(r29),r8
  174  000011dc  8ce10000	lw	r1,(r7)
  175  000011e0  afa10004	sw	4(r29),r1
  176  000011e4  0c000114	jal	_Printf
  177  000011e8  54000000	nop; not filled.
  178  000011ec  0c000214	jal	_Exit
  179  000011f0  54000000	nop; not filled.
  180  000011f4  23bd0008	addi	r29,r29,#8
  181  000011f8          	L14_LF0:
  182  000011f8  23bdfff0	addi	r29,r29,#-16
  183  000011fc  8ce70004	lw	r7,4(r7)
  184  00001200  afa70000	sw	(r29),r7
  185  00001204  20080000	addi	r8,r0,#0
  186  00001208  afa80004	sw	4(r29),r8
  187  0000120c  2008000a	addi	r8,r0,#10
  188  00001210  afa80008	sw	8(r29),r8
  189  00001214  0c000aa8	jal	_dstrtol
  190  00001218  54000000	nop; not filled.
  191  0000121c  20080000	addi	r8,r0,#0
  192  00001220  afa80000	sw	(r29),r8
  193  00001224  0c000110	jal	_sem_create
  194  00001228  54000000	nop; not filled.
  195  0000122c  00011020	add	r2,r0,r1
  196  00001230  23bd0010	addi	r29,r29,#16
  197  00001234  6041ffff	seqi	r1,r2,#-1
  198  00001238  10200034	beqz	r1,L15_LF0
  199  0000123c  54000000	nop; not filled.
  200  00001240  0c0000c4	jal	_getpid
  201  00001244  54000000	nop; not filled.
  202  00001248  23bdfff8	addi	r29,r29,#-8
  203  0000124c  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  204  00001250  2508306c	addui	r8,r8,(LC5_LF0)&0xffff
  205  00001254  afa80000	sw	(r29),r8
  206  00001258  afa10004	sw	4(r29),r1
  207  0000125c  0c00009c	jal	_Printf
  208  00001260  54000000	nop; not filled.
  209  00001264  0c00019c	jal	_Exit
  210  00001268  54000000	nop; not filled.
  211  0000126c  23bd0008	addi	r29,r29,#8
  212  00001270          	L15_LF0:
  213  00001270  23bdfff8	addi	r29,r29,#-8
  214  00001274  afa20000	sw	(r29),r2
  215  00001278  23c1ffe8	addi	r1,r30,#-24
  216  0000127c  afa10004	sw	4(r29),r1
  217  00001280  0c0008b0	jal	_ditoa
  218  00001284  54000000	nop; not filled.
  219  00001288  0c00007c	jal	_getpid
  220  0000128c  54000000	nop; not filled.
  221  00001290  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  222  00001294  2508308c	addui	r8,r8,(LC6_LF0)&0xffff
  223  00001298  afa80000	sw	(r29),r8
  224  0000129c  afa10004	sw	4(r29),r1
  225  000012a0  0c000058	jal	_Printf
  226  000012a4  54000000	nop; not filled.
  227  000012a8  23bd0008	addi	r29,r29,#8
  228  000012ac  0c000f00	jal	_exit
  229  000012b0  54000000	nop
  230  000012b4          	.endproc _main
  231                      ;;;
  232                      ;;; Stub functions for DLX traps.
  233                      ;;;
  234                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  235                      ;;;
  236                      ;;; The traps such as Open and Close
  237                      ;;; (note the capital letters) are for use by user programs.  The traps
  238                      ;;; with names such as open and close (lower case) are for use by the OS.
  239                      ;;;
  242  000012b4          	.align 2
  244                      ;;; The following are the traps to be used by user-level programs
  245                      ;;;
  247  000012b4          	.align 2
  248  000012b4          	.proc _Open
  249  000012b4          	.global _Open
  250  000012b4          	_Open:
  251                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  252                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  253                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  254  000012b4  44000213	trap	#0x213
  255  000012b8  4be00000	jr	r31
  256  000012bc  54000000	nop
  257  000012c0          	.endproc _Open
  259  000012c0          	.proc _Close
  260  000012c0          	.global _Close
  261  000012c0          	_Close:
  262  000012c0  44000214	trap	#0x214
  263  000012c4  4be00000	jr	r31
  264  000012c8  54000000	nop
  265  000012cc          	.endproc _Close
  267  000012cc          	.proc _Read
  268  000012cc          	.global _Read
  269  000012cc          	_Read:
  270  000012cc  44000210	trap	#0x210
  271  000012d0  4be00000	jr	r31
  272  000012d4  54000000	nop
  273  000012d8          	.endproc _Read
  275  000012d8          	.proc _Write
  276  000012d8          	.global _Write
  277  000012d8          	_Write:
  278  000012d8  44000211	trap	#0x211
  279  000012dc  4be00000	jr	r31
  280  000012e0  54000000	nop
  281  000012e4          	.endproc _Write
  283  000012e4          	.proc _Lseek
  284  000012e4          	.global _Lseek
  285  000012e4          	_Lseek:
  286  000012e4  44000212	trap	#0x212
  287  000012e8  4be00000	jr	r31
  288  000012ec  54000000	nop
  289  000012f0          	.endproc _Lseek
  291  000012f0          	.proc _Putchar
  292  000012f0          	.global _Putchar
  293  000012f0          	_Putchar:
  294  000012f0  44000280	trap	#0x280
  295  000012f4  4be00000	jr	r31
  296  000012f8  54000000	nop
  297  000012fc          	.endproc _Putchar
  299  000012fc          	.proc _Printf
  300  000012fc          	.global _Printf
  301  000012fc          	_Printf:
  302  000012fc  44000201	trap	#0x201
  303  00001300  4be00000	jr	r31
  304  00001304  54000000	nop
  305  00001308          	.endproc _Printf
  307  00001308          	.proc _getpid
  308  00001308          	.global _getpid
  309  00001308          	_getpid:
  310  00001308  44000431	trap	#0x431
  311  0000130c  4be00000	jr	r31
  312  00001310  54000000	nop
  313  00001314          	.endproc _getpid
  315  00001314          	.proc _process_create
  316  00001314          	.global _process_create
  317  00001314          	_process_create:
  318  00001314  44000432	trap	#0x432
  319  00001318  4be00000	jr	r31
  320  0000131c  54000000	nop
  321  00001320          	.endproc _process_create
  323  00001320          	.proc _shmget
  324  00001320          	.global _shmget
  325  00001320          	_shmget:
  326  00001320  44000440	trap	#0x440
  327  00001324  4be00000	jr	r31
  328  00001328  54000000	nop
  329  0000132c          	.endproc _shmget
  331  0000132c          	.proc _shmat
  332  0000132c          	.global _shmat
  333  0000132c          	_shmat:
  334  0000132c  44000441	trap	#0x441
  335  00001330  4be00000	jr	r31
  336  00001334  54000000	nop
  337  00001338          	.endproc _shmat
  339  00001338          	.proc _sem_create
  340  00001338          	.global _sem_create
  341  00001338          	_sem_create:
  342  00001338  44000450	trap	#0x450
  343  0000133c  4be00000	jr	r31
  344  00001340  54000000	nop
  345  00001344          	.endproc _sem_create
  347  00001344          	.proc _sem_wait
  348  00001344          	.global _sem_wait
  349  00001344          	_sem_wait:
  350  00001344  44000451	trap	#0x451
  351  00001348  4be00000	jr	r31
  352  0000134c  54000000	nop
  353  00001350          	.endproc _sem_wait
  355  00001350          	.proc _sem_signal
  356  00001350          	.global _sem_signal
  357  00001350          	_sem_signal:
  358  00001350  44000452	trap	#0x452
  359  00001354  4be00000	jr	r31
  360  00001358  54000000	nop
  361  0000135c          	.endproc _sem_signal
  363  0000135c          	.proc _lock_create
  364  0000135c          	.global _lock_create
  365  0000135c          	_lock_create:
  366  0000135c  44000453	trap	#0x453
  367  00001360  4be00000	jr	r31
  368  00001364  54000000	nop
  369  00001368          	.endproc _lock_create
  371  00001368          	.proc _lock_acquire
  372  00001368          	.global _lock_acquire
  373  00001368          	_lock_acquire:
  374  00001368  44000454	trap	#0x454
  375  0000136c  4be00000	jr	r31
  376  00001370  54000000	nop
  377  00001374          	.endproc _lock_acquire
  379  00001374          	.proc _lock_release
  380  00001374          	.global _lock_release
  381  00001374          	_lock_release:
  382  00001374  44000455	trap	#0x455
  383  00001378  4be00000	jr	r31
  384  0000137c  54000000	nop
  385  00001380          	.endproc _lock_release
  387  00001380          	.proc _cond_create
  388  00001380          	.global _cond_create
  389  00001380          	_cond_create:
  390  00001380  44000456	trap	#0x456
  391  00001384  4be00000	jr	r31
  392  00001388  54000000	nop
  393  0000138c          	.endproc _cond_create
  395  0000138c          	.proc _cond_wait
  396  0000138c          	.global _cond_wait
  397  0000138c          	_cond_wait:
  398  0000138c  44000457	trap	#0x457
  399  00001390  4be00000	jr	r31
  400  00001394  54000000	nop
  401  00001398          	.endproc _cond_wait
  403  00001398          	.proc _cond_signal
  404  00001398          	.global _cond_signal
  405  00001398          	_cond_signal:
  406  00001398  44000458	trap	#0x458
  407  0000139c  4be00000	jr	r31
  408  000013a0  54000000	nop
  409  000013a4          	.endproc _cond_signal
  411  000013a4          	.proc _cond_broadcast
  412  000013a4          	.global _cond_broadcast
  413  000013a4          	_cond_broadcast:
  414  000013a4  44000459	trap	#0x459
  415  000013a8  4be00000	jr	r31
  416  000013ac  54000000	nop
  417  000013b0          	.endproc _cond_broadcast
  419  000013b0          	.proc _mbox_create
  420  000013b0          	.global _mbox_create
  421  000013b0          	_mbox_create:
  422  000013b0  44000460	trap	#0x460
  423  000013b4  4be00000	jr	r31
  424  000013b8  54000000	nop
  425  000013bc          	.endproc _mbox_create
  427  000013bc          	.proc _mbox_open
  428  000013bc          	.global _mbox_open
  429  000013bc          	_mbox_open:
  430  000013bc  44000461	trap	#0x461
  431  000013c0  4be00000	jr	r31
  432  000013c4  54000000	nop
  433  000013c8          	.endproc _mbox_open
  435  000013c8          	.proc _mbox_close
  436  000013c8          	.global _mbox_close
  437  000013c8          	_mbox_close:
  438  000013c8  44000462	trap	#0x462
  439  000013cc  4be00000	jr	r31
  440  000013d0  54000000	nop
  441  000013d4          	.endproc _mbox_close
  443  000013d4          	.proc _mbox_send
  444  000013d4          	.global _mbox_send
  445  000013d4          	_mbox_send:
  446  000013d4  44000463	trap	#0x463
  447  000013d8  4be00000	jr	r31
  448  000013dc  54000000	nop
  449  000013e0          	.endproc _mbox_send
  451  000013e0          	.proc _mbox_recv
  452  000013e0          	.global _mbox_recv
  453  000013e0          	_mbox_recv:
  454  000013e0  44000464	trap	#0x464
  455  000013e4  4be00000	jr	r31
  456  000013e8  54000000	nop
  457  000013ec          	.endproc _mbox_recv
  459  000013ec          	.proc _sleep
  460  000013ec          	.global _sleep
  461  000013ec          	_sleep:
  462  000013ec  44000465	trap	#0x465
  463  000013f0  4be00000	jr	r31
  464  000013f4  54000000	nop
  465  000013f8          	.endproc _sleep
  467  000013f8          	.proc _yield
  468  000013f8          	.global _yield
  469  000013f8          	_yield:
  470  000013f8  44000466	trap	#0x466
  471  000013fc  4be00000	jr	r31
  472  00001400  54000000	nop
  473  00001404          	.endproc _yield
  476  00001404          	.proc _Exit
  477  00001404          	.global _Exit
  478  00001404          	_Exit:
  479  00001404  44000500	trap	#0x500
  480  00001408  4be00000	jr	r31
  481  0000140c  54000000	nop
  482  00001410          	.endproc _Exit
  485  00001410          	.proc _malloc
  486  00001410          	.global _malloc
  487  00001410          	_malloc:
  488  00001410  44000467	trap	#0x467
  489  00001414  4be00000	jr	r31
  490  00001418          	.endproc _malloc
  493  00001418          	.proc _mfree
  494  00001418          	.global _mfree
  495  00001418          	_mfree:
  496  00001418  44000468	trap	#0x468
  497  0000141c  4be00000	jr	r31
  498  00001420          	.endproc _mfree
  499                      ; Compiled by GCC
  501  00001420          	.align 2
  502  00001420          	.proc _isspace
  503  00001420          	.global _isspace
  504  00001420          	_isspace:
  505                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  506  00001420  afbefffc	sw	-4(r29),r30; push fp
  507  00001424  001df020	add	r30,r0,r29; fp = sp
  508  00001428  afbffff8	sw	-8(r29),r31; push ret addr
  509  0000142c  2fbd0018	subui	r29,r29,#24; alloc local storage
  510  00001430  afa20000	sw	0(r29),r2
  511  00001434  afa30004	sw	4(r29),r3
  512  00001438  afa40008	sw	8(r29),r4
  513  0000143c  83c20003	lb	r2,3(r30)
  514  00001440  20010000	addi	r1,r0,#0
  515  00001444  304300ff	andi	r3,r2,#0x00ff
  516  00001448  60640020	seqi	r4,r3,#32
  517  0000144c  1480002c	bnez	r4,L3_LF2
  518  00001450  54000000	nop; delay slot nop
  519  00001454  304300ff	andi	r3,r2,#0x00ff
  520  00001458  60640009	seqi	r4,r3,#9
  521  0000145c  1480001c	bnez	r4,L3_LF2
  522  00001460  54000000	nop; delay slot nop
  523  00001464  304300ff	andi	r3,r2,#0x00ff
  524  00001468  6064000a	seqi	r4,r3,#10
  525  0000146c  1480000c	bnez	r4,L3_LF2
  526  00001470  54000000	nop; delay slot nop
  527  00001474  08000008	j	L2_LF2
  528  00001478  54000000	nop; delay slot nop
  529  0000147c          	L3_LF2:
  530  0000147c  20010001	addi	r1,r0,#1
  531  00001480          	L2_LF2:
  532  00001480  08000004	j	L1_LF2
  533  00001484  54000000	nop; delay slot nop
  534  00001488          	L1_LF2:
  535  00001488  8fa20000	lw	r2,0(r29)
  536  0000148c  8fa30004	lw	r3,4(r29)
  537  00001490  8fa40008	lw	r4,8(r29)
  538  00001494  8fdffff8	lw	r31,-8(r30)
  539  00001498  001ee820	add	r29,r0,r30
  540  0000149c  8fdefffc	lw	r30,-4(r30)
  541  000014a0  4be00000	jr	r31
  542  000014a4  54000000	nop
  543  000014a8          	.endproc _isspace
  544  000014a8          	.align 2
  545  000014a8          	.proc _isxdigit
  546  000014a8          	.global _isxdigit
  547  000014a8          	_isxdigit:
  548                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  549  000014a8  afbefffc	sw	-4(r29),r30; push fp
  550  000014ac  001df020	add	r30,r0,r29; fp = sp
  551  000014b0  afbffff8	sw	-8(r29),r31; push ret addr
  552  000014b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  553  000014b8  afa20000	sw	0(r29),r2
  554  000014bc  afa30004	sw	4(r29),r3
  555  000014c0  afa40008	sw	8(r29),r4
  556  000014c4  83c20003	lb	r2,3(r30)
  557  000014c8  20010000	addi	r1,r0,#0
  558  000014cc  304300ff	andi	r3,r2,#0x00ff
  559  000014d0  6c64002f	sgtui	r4,r3,#47
  560  000014d4  1080001c	beqz	r4,L7_LF2
  561  000014d8  54000000	nop; delay slot nop
  562  000014dc  304300ff	andi	r3,r2,#0x00ff
  563  000014e0  70640039	sleui	r4,r3,#57
  564  000014e4  1480005c	bnez	r4,L6_LF2
  565  000014e8  54000000	nop; delay slot nop
  566  000014ec  08000004	j	L7_LF2
  567  000014f0  54000000	nop; delay slot nop
  568  000014f4          	L7_LF2:
  569  000014f4  304300ff	andi	r3,r2,#0x00ff
  570  000014f8  6c640060	sgtui	r4,r3,#96
  571  000014fc  1080001c	beqz	r4,L8_LF2
  572  00001500  54000000	nop; delay slot nop
  573  00001504  304300ff	andi	r3,r2,#0x00ff
  574  00001508  70640066	sleui	r4,r3,#102
  575  0000150c  14800034	bnez	r4,L6_LF2
  576  00001510  54000000	nop; delay slot nop
  577  00001514  08000004	j	L8_LF2
  578  00001518  54000000	nop; delay slot nop
  579  0000151c          	L8_LF2:
  580  0000151c  304300ff	andi	r3,r2,#0x00ff
  581  00001520  6c640040	sgtui	r4,r3,#64
  582  00001524  10800020	beqz	r4,L5_LF2
  583  00001528  54000000	nop; delay slot nop
  584  0000152c  304300ff	andi	r3,r2,#0x00ff
  585  00001530  70640041	sleui	r4,r3,#65
  586  00001534  1480000c	bnez	r4,L6_LF2
  587  00001538  54000000	nop; delay slot nop
  588  0000153c  08000008	j	L5_LF2
  589  00001540  54000000	nop; delay slot nop
  590  00001544          	L6_LF2:
  591  00001544  20010001	addi	r1,r0,#1
  592  00001548          	L5_LF2:
  593  00001548  08000004	j	L4_LF2
  594  0000154c  54000000	nop; delay slot nop
  595  00001550          	L4_LF2:
  596  00001550  8fa20000	lw	r2,0(r29)
  597  00001554  8fa30004	lw	r3,4(r29)
  598  00001558  8fa40008	lw	r4,8(r29)
  599  0000155c  8fdffff8	lw	r31,-8(r30)
  600  00001560  001ee820	add	r29,r0,r30
  601  00001564  8fdefffc	lw	r30,-4(r30)
  602  00001568  4be00000	jr	r31
  603  0000156c  54000000	nop
  604  00001570          	.endproc _isxdigit
  605  00001570          	.align 2
  606  00001570          	.proc _dstrcpy
  607  00001570          	.global _dstrcpy
  608  00001570          	_dstrcpy:
  609                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  610  00001570  afbefffc	sw	-4(r29),r30; push fp
  611  00001574  001df020	add	r30,r0,r29; fp = sp
  612  00001578  afbffff8	sw	-8(r29),r31; push ret addr
  613  0000157c  2fbd0018	subui	r29,r29,#24; alloc local storage
  614  00001580  afa20000	sw	0(r29),r2
  615  00001584  afa30004	sw	4(r29),r3
  616  00001588  8fc10000	lw	r1,(r30)
  617  0000158c  afc1fff4	sw	-12(r30),r1
  618  00001590          	L10_LF2:
  619  00001590  8fc10000	lw	r1,(r30)
  620  00001594  20220001	addi	r2,r1,#1
  621  00001598  afc20000	sw	(r30),r2
  622  0000159c  8fc20004	lw	r2,4(r30)
  623  000015a0  20430001	addi	r3,r2,#1
  624  000015a4  afc30004	sw	4(r30),r3
  625  000015a8  80420000	lb	r2,(r2)
  626  000015ac  a0220000	sb	(r1),r2
  627  000015b0  a3c2fff3	sb	-13(r30),r2
  628  000015b4          	L12_LF2:
  629  000015b4  93c1fff3	lbu	r1,-13(r30)
  630  000015b8  64220000	snei	r2,r1,#0
  631  000015bc  1440000c	bnez	r2,L13_LF2
  632  000015c0  54000000	nop; delay slot nop
  633  000015c4  0800000c	j	L11_LF2
  634  000015c8  54000000	nop; delay slot nop
  635  000015cc          	L13_LF2:
  636  000015cc  0bffffc0	j	L10_LF2
  637  000015d0  54000000	nop; delay slot nop
  638  000015d4          	L11_LF2:
  639  000015d4  8fc1fff4	lw	r1,-12(r30)
  640  000015d8  08000004	j	L9_LF2
  641  000015dc  54000000	nop; delay slot nop
  642  000015e0          	L9_LF2:
  643  000015e0  8fa20000	lw	r2,0(r29)
  644  000015e4  8fa30004	lw	r3,4(r29)
  645  000015e8  8fdffff8	lw	r31,-8(r30)
  646  000015ec  001ee820	add	r29,r0,r30
  647  000015f0  8fdefffc	lw	r30,-4(r30)
  648  000015f4  4be00000	jr	r31
  649  000015f8  54000000	nop
  650  000015fc          	.endproc _dstrcpy
  651  000015fc          	.align 2
  652  000015fc          	.proc _dstrncpy
  653  000015fc          	.global _dstrncpy
  654  000015fc          	_dstrncpy:
  655                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  656  000015fc  afbefffc	sw	-4(r29),r30; push fp
  657  00001600  001df020	add	r30,r0,r29; fp = sp
  658  00001604  afbffff8	sw	-8(r29),r31; push ret addr
  659  00001608  2fbd0018	subui	r29,r29,#24; alloc local storage
  660  0000160c  afa20000	sw	0(r29),r2
  661  00001610  afa30004	sw	4(r29),r3
  662  00001614  8fc10000	lw	r1,(r30)
  663  00001618  afc1fff4	sw	-12(r30),r1
  664  0000161c          	L15_LF2:
  665  0000161c  8fc10008	lw	r1,8(r30)
  666  00001620  2022ffff	addi	r2,r1,#-1
  667  00001624  afc20008	sw	8(r30),r2
  668  00001628  70210000	slei	r1,r1,#0
  669  0000162c  1020000c	beqz	r1,L18_LF2
  670  00001630  54000000	nop; delay slot nop
  671  00001634  08000048	j	L16_LF2
  672  00001638  54000000	nop; delay slot nop
  673  0000163c          	L18_LF2:
  674  0000163c  8fc10000	lw	r1,(r30)
  675  00001640  20220001	addi	r2,r1,#1
  676  00001644  afc20000	sw	(r30),r2
  677  00001648  8fc20004	lw	r2,4(r30)
  678  0000164c  20430001	addi	r3,r2,#1
  679  00001650  afc30004	sw	4(r30),r3
  680  00001654  80420000	lb	r2,(r2)
  681  00001658  a0220000	sb	(r1),r2
  682  0000165c  a3c2fff3	sb	-13(r30),r2
  683  00001660          	L17_LF2:
  684  00001660  93c1fff3	lbu	r1,-13(r30)
  685  00001664  64220000	snei	r2,r1,#0
  686  00001668  1440000c	bnez	r2,L19_LF2
  687  0000166c  54000000	nop; delay slot nop
  688  00001670  0800000c	j	L16_LF2
  689  00001674  54000000	nop; delay slot nop
  690  00001678          	L19_LF2:
  691  00001678  0bffffa0	j	L15_LF2
  692  0000167c  54000000	nop; delay slot nop
  693  00001680          	L16_LF2:
  694  00001680  8fc1fff4	lw	r1,-12(r30)
  695  00001684  08000004	j	L14_LF2
  696  00001688  54000000	nop; delay slot nop
  697  0000168c          	L14_LF2:
  698  0000168c  8fa20000	lw	r2,0(r29)
  699  00001690  8fa30004	lw	r3,4(r29)
  700  00001694  8fdffff8	lw	r31,-8(r30)
  701  00001698  001ee820	add	r29,r0,r30
  702  0000169c  8fdefffc	lw	r30,-4(r30)
  703  000016a0  4be00000	jr	r31
  704  000016a4  54000000	nop
  705  000016a8          	.endproc _dstrncpy
  706  000016a8          	.align 2
  707  000016a8          	.proc _dstrcat
  708  000016a8          	.global _dstrcat
  709  000016a8          	_dstrcat:
  710                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  711  000016a8  afbefffc	sw	-4(r29),r30; push fp
  712  000016ac  001df020	add	r30,r0,r29; fp = sp
  713  000016b0  afbffff8	sw	-8(r29),r31; push ret addr
  714  000016b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  715  000016b8  afa20000	sw	0(r29),r2
  716  000016bc  8fc10000	lw	r1,(r30)
  717  000016c0  afc1fff4	sw	-12(r30),r1
  718  000016c4          	L21_LF2:
  719  000016c4  8fc10000	lw	r1,(r30)
  720  000016c8  90220000	lbu	r2,(r1)
  721  000016cc  64410000	snei	r1,r2,#0
  722  000016d0  1420000c	bnez	r1,L23_LF2
  723  000016d4  54000000	nop; delay slot nop
  724  000016d8  0800001c	j	L22_LF2
  725  000016dc  54000000	nop; delay slot nop
  726  000016e0          	L23_LF2:
  727  000016e0  8fc20000	lw	r2,(r30)
  728  000016e4  20410001	addi	r1,r2,#1
  729  000016e8  00011020	add	r2,r0,r1
  730  000016ec  afc20000	sw	(r30),r2
  731  000016f0  0bffffd0	j	L21_LF2
  732  000016f4  54000000	nop; delay slot nop
  733  000016f8          	L22_LF2:
  734  000016f8  23bdfff8	addi	r29,r29,#-8
  735  000016fc  001d0820	add	r1,r0,r29
  736  00001700  8fc20000	lw	r2,(r30)
  737  00001704  ac220000	sw	(r1),r2
  738  00001708  8fc20004	lw	r2,4(r30)
  739  0000170c  ac220004	sw	4(r1),r2
  740  00001710  0ffffe5c	jal	_dstrcpy
  741  00001714  54000000	nop; delay slot nop
  742  00001718  23bd0008	addi	r29,r29,#8
  743  0000171c  8fc1fff4	lw	r1,-12(r30)
  744  00001720  08000004	j	L20_LF2
  745  00001724  54000000	nop; delay slot nop
  746  00001728          	L20_LF2:
  747  00001728  8fa20000	lw	r2,0(r29)
  748  0000172c  8fdffff8	lw	r31,-8(r30)
  749  00001730  001ee820	add	r29,r0,r30
  750  00001734  8fdefffc	lw	r30,-4(r30)
  751  00001738  4be00000	jr	r31
  752  0000173c  54000000	nop
  753  00001740          	.endproc _dstrcat
  754  00001740          	.align 2
  755  00001740          	.proc _dstrncmp
  756  00001740          	.global _dstrncmp
  757  00001740          	_dstrncmp:
  758                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  759  00001740  afbefffc	sw	-4(r29),r30; push fp
  760  00001744  001df020	add	r30,r0,r29; fp = sp
  761  00001748  afbffff8	sw	-8(r29),r31; push ret addr
  762  0000174c  2fbd0018	subui	r29,r29,#24; alloc local storage
  763  00001750  afa20000	sw	0(r29),r2
  764  00001754  afa30004	sw	4(r29),r3
  765  00001758  54000000	nop
  766  0000175c  20010000	addi	r1,r0,#0
  767  00001760  afc1fff4	sw	-12(r30),r1
  768  00001764          	L25_LF2:
  769  00001764  8fc1fff4	lw	r1,-12(r30)
  770  00001768  8fc20008	lw	r2,8(r30)
  771  0000176c  0022082a	slt	r1,r1,r2
  772  00001770  1420000c	bnez	r1,L28_LF2
  773  00001774  54000000	nop; delay slot nop
  774  00001778  08000088	j	L26_LF2
  775  0000177c  54000000	nop; delay slot nop
  776  00001780          	L28_LF2:
  777  00001780  8fc10004	lw	r1,4(r30)
  778  00001784  90220000	lbu	r2,(r1)
  779  00001788  64410000	snei	r1,r2,#0
  780  0000178c  14200018	bnez	r1,L29_LF2
  781  00001790  54000000	nop; delay slot nop
  782  00001794  20010000	addi	r1,r0,#0
  783  00001798  080000d8	j	L24_LF2
  784  0000179c  54000000	nop; delay slot nop
  785  000017a0  08000028	j	L30_LF2
  786  000017a4  54000000	nop; delay slot nop
  787  000017a8          	L29_LF2:
  788  000017a8  8fc10000	lw	r1,(r30)
  789  000017ac  8fc20004	lw	r2,4(r30)
  790  000017b0  90210000	lbu	r1,(r1)
  791  000017b4  90420000	lbu	r2,(r2)
  792  000017b8  00220829	sne	r1,r1,r2
  793  000017bc  1020000c	beqz	r1,L30_LF2
  794  000017c0  54000000	nop; delay slot nop
  795  000017c4  0800003c	j	L26_LF2
  796  000017c8  54000000	nop; delay slot nop
  797  000017cc          	L31_LF2:
  798  000017cc          	L30_LF2:
  799  000017cc  8fc20000	lw	r2,(r30)
  800  000017d0  20410001	addi	r1,r2,#1
  801  000017d4  00011020	add	r2,r0,r1
  802  000017d8  afc20000	sw	(r30),r2
  803  000017dc  8fc20004	lw	r2,4(r30)
  804  000017e0  20410001	addi	r1,r2,#1
  805  000017e4  00011020	add	r2,r0,r1
  806  000017e8  afc20004	sw	4(r30),r2
  807  000017ec          	L27_LF2:
  808  000017ec  8fc2fff4	lw	r2,-12(r30)
  809  000017f0  20410001	addi	r1,r2,#1
  810  000017f4  00011020	add	r2,r0,r1
  811  000017f8  afc2fff4	sw	-12(r30),r2
  812  000017fc  0bffff64	j	L25_LF2
  813  00001800  54000000	nop; delay slot nop
  814  00001804          	L26_LF2:
  815  00001804  8fc1fff4	lw	r1,-12(r30)
  816  00001808  8fc20008	lw	r2,8(r30)
  817  0000180c  00220828	seq	r1,r1,r2
  818  00001810  10200018	beqz	r1,L32_LF2
  819  00001814  54000000	nop; delay slot nop
  820  00001818  20010000	addi	r1,r0,#0
  821  0000181c  08000054	j	L24_LF2
  822  00001820  54000000	nop; delay slot nop
  823  00001824  0800004c	j	L33_LF2
  824  00001828  54000000	nop; delay slot nop
  825  0000182c          	L32_LF2:
  826  0000182c  8fc20000	lw	r2,(r30)
  827  00001830  90410000	lbu	r1,(r2)
  828  00001834  8fc20004	lw	r2,4(r30)
  829  00001838  90430000	lbu	r3,(r2)
  830  0000183c  00230822	sub	r1,r1,r3
  831  00001840  74220000	sgei	r2,r1,#0
  832  00001844  10400020	beqz	r2,L34_LF2
  833  00001848  54000000	nop; delay slot nop
  834  0000184c  8fc10000	lw	r1,(r30)
  835  00001850  8fc20004	lw	r2,4(r30)
  836  00001854  90210000	lbu	r1,(r1)
  837  00001858  90420000	lbu	r2,(r2)
  838  0000185c  00220829	sne	r1,r1,r2
  839  00001860  08000008	j	L35_LF2
  840  00001864  54000000	nop; delay slot nop
  841  00001868          	L34_LF2:
  842  00001868  2001ffff	addi	r1,r0,#-1
  843  0000186c          	L35_LF2:
  844  0000186c  08000004	j	L24_LF2
  845  00001870  54000000	nop; delay slot nop
  846  00001874          	L33_LF2:
  847  00001874          	L24_LF2:
  848  00001874  8fa20000	lw	r2,0(r29)
  849  00001878  8fa30004	lw	r3,4(r29)
  850  0000187c  8fdffff8	lw	r31,-8(r30)
  851  00001880  001ee820	add	r29,r0,r30
  852  00001884  8fdefffc	lw	r30,-4(r30)
  853  00001888  4be00000	jr	r31
  854  0000188c  54000000	nop
  855  00001890          	.endproc _dstrncmp
  856  00001890          	.align 2
  857  00001890          	.proc _dstrlen
  858  00001890          	.global _dstrlen
  859  00001890          	_dstrlen:
  860                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  861  00001890  afbefffc	sw	-4(r29),r30; push fp
  862  00001894  001df020	add	r30,r0,r29; fp = sp
  863  00001898  afbffff8	sw	-8(r29),r31; push ret addr
  864  0000189c  2fbd0018	subui	r29,r29,#24; alloc local storage
  865  000018a0  afa20000	sw	0(r29),r2
  866  000018a4  20010000	addi	r1,r0,#0
  867  000018a8  afc1fff4	sw	-12(r30),r1
  868  000018ac          	L37_LF2:
  869  000018ac  8fc10000	lw	r1,(r30)
  870  000018b0  20220001	addi	r2,r1,#1
  871  000018b4  afc20000	sw	(r30),r2
  872  000018b8  90210000	lbu	r1,(r1)
  873  000018bc  64220000	snei	r2,r1,#0
  874  000018c0  1440000c	bnez	r2,L39_LF2
  875  000018c4  54000000	nop; delay slot nop
  876  000018c8  0800001c	j	L38_LF2
  877  000018cc  54000000	nop; delay slot nop
  878  000018d0          	L39_LF2:
  879  000018d0  8fc2fff4	lw	r2,-12(r30)
  880  000018d4  20410001	addi	r1,r2,#1
  881  000018d8  00011020	add	r2,r0,r1
  882  000018dc  afc2fff4	sw	-12(r30),r2
  883  000018e0  0bffffc8	j	L37_LF2
  884  000018e4  54000000	nop; delay slot nop
  885  000018e8          	L38_LF2:
  886  000018e8  8fc1fff4	lw	r1,-12(r30)
  887  000018ec  08000004	j	L36_LF2
  888  000018f0  54000000	nop; delay slot nop
  889  000018f4          	L36_LF2:
  890  000018f4  8fa20000	lw	r2,0(r29)
  891  000018f8  8fdffff8	lw	r31,-8(r30)
  892  000018fc  001ee820	add	r29,r0,r30
  893  00001900  8fdefffc	lw	r30,-4(r30)
  894  00001904  4be00000	jr	r31
  895  00001908  54000000	nop
  896  0000190c          	.endproc _dstrlen
  897  0000190c          	.align 2
  898  0000190c          	.proc _dstrstr
  899  0000190c          	.global _dstrstr
  900  0000190c          	_dstrstr:
  901                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  902  0000190c  afbefffc	sw	-4(r29),r30; push fp
  903  00001910  001df020	add	r30,r0,r29; fp = sp
  904  00001914  afbffff8	sw	-8(r29),r31; push ret addr
  905  00001918  2fbd0018	subui	r29,r29,#24; alloc local storage
  906  0000191c  afa20000	sw	0(r29),r2
  907  00001920  23bdfff8	addi	r29,r29,#-8
  908  00001924  001d0820	add	r1,r0,r29
  909  00001928  8fc20004	lw	r2,4(r30)
  910  0000192c  ac220000	sw	(r1),r2
  911  00001930  0fffff5c	jal	_dstrlen
  912  00001934  54000000	nop; delay slot nop
  913  00001938  23bd0008	addi	r29,r29,#8
  914  0000193c  afc1fff4	sw	-12(r30),r1
  915  00001940          	L41_LF2:
  916  00001940  8fc10000	lw	r1,(r30)
  917  00001944  90220000	lbu	r2,(r1)
  918  00001948  64410000	snei	r1,r2,#0
  919  0000194c  1420000c	bnez	r1,L43_LF2
  920  00001950  54000000	nop; delay slot nop
  921  00001954  08000060	j	L42_LF2
  922  00001958  54000000	nop; delay slot nop
  923  0000195c          	L43_LF2:
  924  0000195c  23bdfff0	addi	r29,r29,#-16
  925  00001960  001d0820	add	r1,r0,r29
  926  00001964  8fc20000	lw	r2,(r30)
  927  00001968  ac220000	sw	(r1),r2
  928  0000196c  8fc20004	lw	r2,4(r30)
  929  00001970  ac220004	sw	4(r1),r2
  930  00001974  8fc2fff4	lw	r2,-12(r30)
  931  00001978  ac220008	sw	8(r1),r2
  932  0000197c  0ffffdc0	jal	_dstrncmp
  933  00001980  54000000	nop; delay slot nop
  934  00001984  23bd0010	addi	r29,r29,#16
  935  00001988  64220000	snei	r2,r1,#0
  936  0000198c  14400010	bnez	r2,L44_LF2
  937  00001990  54000000	nop; delay slot nop
  938  00001994  8fc10000	lw	r1,(r30)
  939  00001998  08000028	j	L40_LF2
  940  0000199c  54000000	nop; delay slot nop
  941  000019a0          	L44_LF2:
  942  000019a0  8fc20000	lw	r2,(r30)
  943  000019a4  20410001	addi	r1,r2,#1
  944  000019a8  00011020	add	r2,r0,r1
  945  000019ac  afc20000	sw	(r30),r2
  946  000019b0  0bffff8c	j	L41_LF2
  947  000019b4  54000000	nop; delay slot nop
  948  000019b8          	L42_LF2:
  949  000019b8  20010000	addi	r1,r0,#0
  950  000019bc  08000004	j	L40_LF2
  951  000019c0  54000000	nop; delay slot nop
  952  000019c4          	L40_LF2:
  953  000019c4  8fa20000	lw	r2,0(r29)
  954  000019c8  8fdffff8	lw	r31,-8(r30)
  955  000019cc  001ee820	add	r29,r0,r30
  956  000019d0  8fdefffc	lw	r30,-4(r30)
  957  000019d4  4be00000	jr	r31
  958  000019d8  54000000	nop
  959  000019dc          	.endproc _dstrstr
  960  000019dc          	.align 2
  961  000019dc          	.proc _dmindex
  962  000019dc          	.global _dmindex
  963  000019dc          	_dmindex:
  964                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  965  000019dc  afbefffc	sw	-4(r29),r30; push fp
  966  000019e0  001df020	add	r30,r0,r29; fp = sp
  967  000019e4  afbffff8	sw	-8(r29),r31; push ret addr
  968  000019e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  969  000019ec  afa20000	sw	0(r29),r2
  970  000019f0  54000000	nop
  971  000019f4          	L46_LF2:
  972  000019f4  8fc10000	lw	r1,(r30)
  973  000019f8  90220000	lbu	r2,(r1)
  974  000019fc  64410000	snei	r1,r2,#0
  975  00001a00  1420000c	bnez	r1,L48_LF2
  976  00001a04  54000000	nop; delay slot nop
  977  00001a08  08000070	j	L47_LF2
  978  00001a0c  54000000	nop; delay slot nop
  979  00001a10          	L48_LF2:
  980  00001a10  8fc10004	lw	r1,4(r30)
  981  00001a14  afc1fff4	sw	-12(r30),r1
  982  00001a18          	L49_LF2:
  983  00001a18  8fc1fff4	lw	r1,-12(r30)
  984  00001a1c  90220000	lbu	r2,(r1)
  985  00001a20  64410000	snei	r1,r2,#0
  986  00001a24  1420000c	bnez	r1,L52_LF2
  987  00001a28  54000000	nop; delay slot nop
  988  00001a2c  08000044	j	L50_LF2
  989  00001a30  54000000	nop; delay slot nop
  990  00001a34          	L52_LF2:
  991  00001a34  8fc10000	lw	r1,(r30)
  992  00001a38  8fc2fff4	lw	r2,-12(r30)
  993  00001a3c  90210000	lbu	r1,(r1)
  994  00001a40  90420000	lbu	r2,(r2)
  995  00001a44  00220828	seq	r1,r1,r2
  996  00001a48  10200010	beqz	r1,L51_LF2
  997  00001a4c  54000000	nop; delay slot nop
  998  00001a50  8fc10000	lw	r1,(r30)
  999  00001a54  08000030	j	L45_LF2
 1000  00001a58  54000000	nop; delay slot nop
 1001  00001a5c          	L53_LF2:
 1002  00001a5c          	L51_LF2:
 1003  00001a5c  8fc2fff4	lw	r2,-12(r30)
 1004  00001a60  20410001	addi	r1,r2,#1
 1005  00001a64  00011020	add	r2,r0,r1
 1006  00001a68  afc2fff4	sw	-12(r30),r2
 1007  00001a6c  0bffffa8	j	L49_LF2
 1008  00001a70  54000000	nop; delay slot nop
 1009  00001a74          	L50_LF2:
 1010  00001a74  0bffff7c	j	L46_LF2
 1011  00001a78  54000000	nop; delay slot nop
 1012  00001a7c          	L47_LF2:
 1013  00001a7c  20010000	addi	r1,r0,#0
 1014  00001a80  08000004	j	L45_LF2
 1015  00001a84  54000000	nop; delay slot nop
 1016  00001a88          	L45_LF2:
 1017  00001a88  8fa20000	lw	r2,0(r29)
 1018  00001a8c  8fdffff8	lw	r31,-8(r30)
 1019  00001a90  001ee820	add	r29,r0,r30
 1020  00001a94  8fdefffc	lw	r30,-4(r30)
 1021  00001a98  4be00000	jr	r31
 1022  00001a9c  54000000	nop
 1023  00001aa0          	.endproc _dmindex
 1024  00001aa0          	.align 2
 1025  00001aa0          	.proc _dindex
 1026  00001aa0          	.global _dindex
 1027  00001aa0          	_dindex:
 1028                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1029  00001aa0  afbefffc	sw	-4(r29),r30; push fp
 1030  00001aa4  001df020	add	r30,r0,r29; fp = sp
 1031  00001aa8  afbffff8	sw	-8(r29),r31; push ret addr
 1032  00001aac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1033  00001ab0  afa20000	sw	0(r29),r2
 1034  00001ab4  54000000	nop
 1035  00001ab8          	L55_LF2:
 1036  00001ab8  8fc10000	lw	r1,(r30)
 1037  00001abc  90220000	lbu	r2,(r1)
 1038  00001ac0  64410000	snei	r1,r2,#0
 1039  00001ac4  1420000c	bnez	r1,L57_LF2
 1040  00001ac8  54000000	nop; delay slot nop
 1041  00001acc  08000040	j	L56_LF2
 1042  00001ad0  54000000	nop; delay slot nop
 1043  00001ad4          	L57_LF2:
 1044  00001ad4  8fc10000	lw	r1,(r30)
 1045  00001ad8  90220000	lbu	r2,(r1)
 1046  00001adc  8fc10004	lw	r1,4(r30)
 1047  00001ae0  00411028	seq	r2,r2,r1
 1048  00001ae4  10400010	beqz	r2,L58_LF2
 1049  00001ae8  54000000	nop; delay slot nop
 1050  00001aec  8fc10000	lw	r1,(r30)
 1051  00001af0  08000028	j	L54_LF2
 1052  00001af4  54000000	nop; delay slot nop
 1053  00001af8          	L58_LF2:
 1054  00001af8  8fc20000	lw	r2,(r30)
 1055  00001afc  20410001	addi	r1,r2,#1
 1056  00001b00  00011020	add	r2,r0,r1
 1057  00001b04  afc20000	sw	(r30),r2
 1058  00001b08  0bffffac	j	L55_LF2
 1059  00001b0c  54000000	nop; delay slot nop
 1060  00001b10          	L56_LF2:
 1061  00001b10  20010000	addi	r1,r0,#0
 1062  00001b14  08000004	j	L54_LF2
 1063  00001b18  54000000	nop; delay slot nop
 1064  00001b1c          	L54_LF2:
 1065  00001b1c  8fa20000	lw	r2,0(r29)
 1066  00001b20  8fdffff8	lw	r31,-8(r30)
 1067  00001b24  001ee820	add	r29,r0,r30
 1068  00001b28  8fdefffc	lw	r30,-4(r30)
 1069  00001b2c  4be00000	jr	r31
 1070  00001b30  54000000	nop
 1071  00001b34          	.endproc _dindex
 1072  00001b34          	.align 2
 1073  00001b34          	.proc _ditoa
 1074  00001b34          	.global _ditoa
 1075  00001b34          	_ditoa:
 1076                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1077  00001b34  afbefffc	sw	-4(r29),r30; push fp
 1078  00001b38  001df020	add	r30,r0,r29; fp = sp
 1079  00001b3c  afbffff8	sw	-8(r29),r31; push ret addr
 1080  00001b40  2fbd0018	subui	r29,r29,#24; alloc local storage
 1081  00001b44  afa20000	sw	0(r29),r2
 1082  00001b48  afa30004	sw	4(r29),r3
 1083  00001b4c  8fc10000	lw	r1,(r30)
 1084  00001b50  68220000	slti	r2,r1,#0
 1085  00001b54  1040002c	beqz	r2,L60_LF2
 1086  00001b58  54000000	nop; delay slot nop
 1087  00001b5c  8fc10004	lw	r1,4(r30)
 1088  00001b60  20220001	addi	r2,r1,#1
 1089  00001b64  afc20004	sw	4(r30),r2
 1090  00001b68  2002002d	addi	r2,r0,(#0x2d)&0xff
 1091  00001b6c  a0220000	sb	(r1),r2
 1092  00001b70  8fc10000	lw	r1,(r30)
 1093  00001b74  00011022	sub	r2,r0,r1
 1094  00001b78  afc20000	sw	(r30),r2
 1095  00001b7c  08000118	j	L61_LF2
 1096  00001b80  54000000	nop; delay slot nop
 1097  00001b84          	L60_LF2:
 1098  00001b84  8fc10000	lw	r1,(r30)
 1099  00001b88  64220000	snei	r2,r1,#0
 1100  00001b8c  14400020	bnez	r2,L62_LF2
 1101  00001b90  54000000	nop; delay slot nop
 1102  00001b94  8fc10004	lw	r1,4(r30)
 1103  00001b98  20220001	addi	r2,r1,#1
 1104  00001b9c  afc20004	sw	4(r30),r2
 1105  00001ba0  20020030	addi	r2,r0,(#0x30)&0xff
 1106  00001ba4  a0220000	sb	(r1),r2
 1107  00001ba8  080000ec	j	L61_LF2
 1108  00001bac  54000000	nop; delay slot nop
 1109  00001bb0          	L62_LF2:
 1110  00001bb0  20010001	addi	r1,r0,#1
 1111  00001bb4  afc1fff4	sw	-12(r30),r1
 1112  00001bb8          	L64_LF2:
 1113  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1114  00001bbc  8fc20000	lw	r2,(r30)
 1115  00001bc0  0022082c	sle	r1,r1,r2
 1116  00001bc4  1420000c	bnez	r1,L66_LF2
 1117  00001bc8  54000000	nop; delay slot nop
 1118  00001bcc  08000024	j	L65_LF2
 1119  00001bd0  54000000	nop; delay slot nop
 1120  00001bd4          	L67_LF2:
 1121  00001bd4          	L66_LF2:
 1122  00001bd4  8fc1fff4	lw	r1,-12(r30)
 1123  00001bd8  00011820	add	r3,r0,r1
 1124  00001bdc  50620002	slli	r2,r3,#0x2
 1125  00001be0  00411020	add	r2,r2,r1
 1126  00001be4  50410001	slli	r1,r2,#0x1
 1127  00001be8  afc1fff4	sw	-12(r30),r1
 1128  00001bec  0bffffc8	j	L64_LF2
 1129  00001bf0  54000000	nop; delay slot nop
 1130  00001bf4          	L65_LF2:
 1131  00001bf4  54000000	nop
 1132  00001bf8          	L68_LF2:
 1133  00001bf8  8fc1fff4	lw	r1,-12(r30)
 1134  00001bfc  2002000a	addi	r2,r0,#10
 1135  00001c00  00200035	movi2fp	f0,r1
 1136  00001c04  00400835	movi2fp	f1,r2
 1137  00001c08  0401000f	div	f0,f0,f1
 1138  00001c0c  00000834	movfp2i	r1,f0
 1139  00001c10  afc1fff4	sw	-12(r30),r1
 1140  00001c14  8fc10004	lw	r1,4(r30)
 1141  00001c18  20220001	addi	r2,r1,#1
 1142  00001c1c  afc20004	sw	4(r30),r2
 1143  00001c20  8fc20000	lw	r2,(r30)
 1144  00001c24  8fc3fff4	lw	r3,-12(r30)
 1145  00001c28  00400035	movi2fp	f0,r2
 1146  00001c2c  00600835	movi2fp	f1,r3
 1147  00001c30  0401000f	div	f0,f0,f1
 1148  00001c34  00001034	movfp2i	r2,f0
 1149  00001c38  00021820	add	r3,r0,r2
 1150  00001c3c  20620030	addi	r2,r3,#48
 1151  00001c40  a0220000	sb	(r1),r2
 1152  00001c44  8fc10000	lw	r1,(r30)
 1153  00001c48  8fc3fff4	lw	r3,-12(r30)
 1154  00001c4c  00200035	movi2fp	f0,r1
 1155  00001c50  00600835	movi2fp	f1,r3
 1156  00001c54  0401000f	div	f0,f0,f1
 1157  00001c58  00001034	movfp2i	r2,f0
 1158  00001c5c  8fc3fff4	lw	r3,-12(r30)
 1159  00001c60  00400035	movi2fp	f0,r2
 1160  00001c64  00600835	movi2fp	f1,r3
 1161  00001c68  0401000e	mult	f0,f0,f1
 1162  00001c6c  00001034	movfp2i	r2,f0
 1163  00001c70  00220822	sub	r1,r1,r2
 1164  00001c74  afc10000	sw	(r30),r1
 1165  00001c78          	L70_LF2:
 1166  00001c78  8fc1fff4	lw	r1,-12(r30)
 1167  00001c7c  6c220001	sgti	r2,r1,#1
 1168  00001c80  1440000c	bnez	r2,L71_LF2
 1169  00001c84  54000000	nop; delay slot nop
 1170  00001c88  0800000c	j	L61_LF2
 1171  00001c8c  54000000	nop; delay slot nop
 1172  00001c90          	L71_LF2:
 1173  00001c90  0bffff64	j	L68_LF2
 1174  00001c94  54000000	nop; delay slot nop
 1175  00001c98          	L69_LF2:
 1176  00001c98          	L63_LF2:
 1177  00001c98          	L61_LF2:
 1178  00001c98  8fc10004	lw	r1,4(r30)
 1179  00001c9c  20020000	addi	r2,r0,(#0x0)&0xff
 1180  00001ca0  a0220000	sb	(r1),r2
 1181  00001ca4          	L59_LF2:
 1182  00001ca4  8fa20000	lw	r2,0(r29)
 1183  00001ca8  8fa30004	lw	r3,4(r29)
 1184  00001cac  8fdffff8	lw	r31,-8(r30)
 1185  00001cb0  001ee820	add	r29,r0,r30
 1186  00001cb4  8fdefffc	lw	r30,-4(r30)
 1187  00001cb8  4be00000	jr	r31
 1188  00001cbc  54000000	nop
 1189  00001cc0          	.endproc _ditoa
 1190  00001cc0          	.align 2
 1191  00001cc0          	.proc _dstrtol
 1192  00001cc0          	.global _dstrtol
 1193  00001cc0          	_dstrtol:
 1194                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1195  00001cc0  afbefffc	sw	-4(r29),r30; push fp
 1196  00001cc4  001df020	add	r30,r0,r29; fp = sp
 1197  00001cc8  afbffff8	sw	-8(r29),r31; push ret addr
 1198  00001ccc  2fbd0020	subui	r29,r29,#32; alloc local storage
 1199  00001cd0  afa20000	sw	0(r29),r2
 1200  00001cd4  20010000	addi	r1,r0,#0
 1201  00001cd8  afc1fff4	sw	-12(r30),r1
 1202  00001cdc          	L73_LF2:
 1203  00001cdc  8fc10000	lw	r1,(r30)
 1204  00001ce0  90220000	lbu	r2,(r1)
 1205  00001ce4  60410020	seqi	r1,r2,#32
 1206  00001ce8  14200034	bnez	r1,L75_LF2
 1207  00001cec  54000000	nop; delay slot nop
 1208  00001cf0  8fc10000	lw	r1,(r30)
 1209  00001cf4  90220000	lbu	r2,(r1)
 1210  00001cf8  60410009	seqi	r1,r2,#9
 1211  00001cfc  14200020	bnez	r1,L75_LF2
 1212  00001d00  54000000	nop; delay slot nop
 1213  00001d04  8fc10000	lw	r1,(r30)
 1214  00001d08  90220000	lbu	r2,(r1)
 1215  00001d0c  6041000a	seqi	r1,r2,#10
 1216  00001d10  1420000c	bnez	r1,L75_LF2
 1217  00001d14  54000000	nop; delay slot nop
 1218  00001d18  0800001c	j	L74_LF2
 1219  00001d1c  54000000	nop; delay slot nop
 1220  00001d20          	L75_LF2:
 1221  00001d20  8fc20000	lw	r2,(r30)
 1222  00001d24  20410001	addi	r1,r2,#1
 1223  00001d28  00011020	add	r2,r0,r1
 1224  00001d2c  afc20000	sw	(r30),r2
 1225  00001d30  0bffffa8	j	L73_LF2
 1226  00001d34  54000000	nop; delay slot nop
 1227  00001d38          	L74_LF2:
 1228  00001d38  8fc10004	lw	r1,4(r30)
 1229  00001d3c  64220000	snei	r2,r1,#0
 1230  00001d40  10400010	beqz	r2,L76_LF2
 1231  00001d44  54000000	nop; delay slot nop
 1232  00001d48  8fc10004	lw	r1,4(r30)
 1233  00001d4c  8fc20000	lw	r2,(r30)
 1234  00001d50  ac220000	sw	(r1),r2
 1235  00001d54          	L76_LF2:
 1236  00001d54  8fc10000	lw	r1,(r30)
 1237  00001d58  90220000	lbu	r2,(r1)
 1238  00001d5c  64410000	snei	r1,r2,#0
 1239  00001d60  14200010	bnez	r1,L77_LF2
 1240  00001d64  54000000	nop; delay slot nop
 1241  00001d68  8fc1fff4	lw	r1,-12(r30)
 1242  00001d6c  08000294	j	L72_LF2
 1243  00001d70  54000000	nop; delay slot nop
 1244  00001d74          	L77_LF2:
 1245  00001d74  8fc10000	lw	r1,(r30)
 1246  00001d78  90220000	lbu	r2,(r1)
 1247  00001d7c  6041002d	seqi	r1,r2,#45
 1248  00001d80  10200024	beqz	r1,L78_LF2
 1249  00001d84  54000000	nop; delay slot nop
 1250  00001d88  2001ffff	addi	r1,r0,#-1
 1251  00001d8c  afc1ffec	sw	-20(r30),r1
 1252  00001d90  8fc20000	lw	r2,(r30)
 1253  00001d94  20410001	addi	r1,r2,#1
 1254  00001d98  00011020	add	r2,r0,r1
 1255  00001d9c  afc20000	sw	(r30),r2
 1256  00001da0  0800000c	j	L79_LF2
 1257  00001da4  54000000	nop; delay slot nop
 1258  00001da8          	L78_LF2:
 1259  00001da8  20010001	addi	r1,r0,#1
 1260  00001dac  afc1ffec	sw	-20(r30),r1
 1261  00001db0          	L79_LF2:
 1262  00001db0  8fc10008	lw	r1,8(r30)
 1263  00001db4  64220000	snei	r2,r1,#0
 1264  00001db8  14400090	bnez	r2,L80_LF2
 1265  00001dbc  54000000	nop; delay slot nop
 1266  00001dc0  8fc10000	lw	r1,(r30)
 1267  00001dc4  90220000	lbu	r2,(r1)
 1268  00001dc8  60410030	seqi	r1,r2,#48
 1269  00001dcc  10200074	beqz	r1,L81_LF2
 1270  00001dd0  54000000	nop; delay slot nop
 1271  00001dd4  8fc20000	lw	r2,(r30)
 1272  00001dd8  20410001	addi	r1,r2,#1
 1273  00001ddc  00011020	add	r2,r0,r1
 1274  00001de0  afc20000	sw	(r30),r2
 1275  00001de4  8fc10000	lw	r1,(r30)
 1276  00001de8  90220000	lbu	r2,(r1)
 1277  00001dec  60410078	seqi	r1,r2,#120
 1278  00001df0  14200020	bnez	r1,L83_LF2
 1279  00001df4  54000000	nop; delay slot nop
 1280  00001df8  8fc10000	lw	r1,(r30)
 1281  00001dfc  90220000	lbu	r2,(r1)
 1282  00001e00  60410058	seqi	r1,r2,#88
 1283  00001e04  1420000c	bnez	r1,L83_LF2
 1284  00001e08  54000000	nop; delay slot nop
 1285  00001e0c  08000024	j	L82_LF2
 1286  00001e10  54000000	nop; delay slot nop
 1287  00001e14          	L83_LF2:
 1288  00001e14  20010010	addi	r1,r0,#16
 1289  00001e18  afc10008	sw	8(r30),r1
 1290  00001e1c  8fc20000	lw	r2,(r30)
 1291  00001e20  20410001	addi	r1,r2,#1
 1292  00001e24  00011020	add	r2,r0,r1
 1293  00001e28  afc20000	sw	(r30),r2
 1294  00001e2c  0800000c	j	L84_LF2
 1295  00001e30  54000000	nop; delay slot nop
 1296  00001e34          	L82_LF2:
 1297  00001e34  20010008	addi	r1,r0,#8
 1298  00001e38  afc10008	sw	8(r30),r1
 1299  00001e3c          	L84_LF2:
 1300  00001e3c  0800000c	j	L80_LF2
 1301  00001e40  54000000	nop; delay slot nop
 1302  00001e44          	L81_LF2:
 1303  00001e44  2001000a	addi	r1,r0,#10
 1304  00001e48  afc10008	sw	8(r30),r1
 1305  00001e4c          	L85_LF2:
 1306  00001e4c          	L80_LF2:
 1307  00001e4c  8fc10008	lw	r1,8(r30)
 1308  00001e50  70220000	slei	r2,r1,#0
 1309  00001e54  1440001c	bnez	r2,L87_LF2
 1310  00001e58  54000000	nop; delay slot nop
 1311  00001e5c  8fc10008	lw	r1,8(r30)
 1312  00001e60  6c220010	sgti	r2,r1,#16
 1313  00001e64  1440000c	bnez	r2,L87_LF2
 1314  00001e68  54000000	nop; delay slot nop
 1315  00001e6c  08000010	j	L86_LF2
 1316  00001e70  54000000	nop; delay slot nop
 1317  00001e74          	L87_LF2:
 1318  00001e74  8fc1fff4	lw	r1,-12(r30)
 1319  00001e78  08000188	j	L72_LF2
 1320  00001e7c  54000000	nop; delay slot nop
 1321  00001e80          	L86_LF2:
 1322  00001e80  54000000	nop
 1323  00001e84          	L88_LF2:
 1324  00001e84  8fc10000	lw	r1,(r30)
 1325  00001e88  90220000	lbu	r2,(r1)
 1326  00001e8c  6c41002f	sgtui	r1,r2,#47
 1327  00001e90  10200030	beqz	r1,L91_LF2
 1328  00001e94  54000000	nop; delay slot nop
 1329  00001e98  8fc10000	lw	r1,(r30)
 1330  00001e9c  90220000	lbu	r2,(r1)
 1331  00001ea0  70410039	sleui	r1,r2,#57
 1332  00001ea4  1020001c	beqz	r1,L91_LF2
 1333  00001ea8  54000000	nop; delay slot nop
 1334  00001eac  8fc10000	lw	r1,(r30)
 1335  00001eb0  90220000	lbu	r2,(r1)
 1336  00001eb4  2041ffd0	addi	r1,r2,#-48
 1337  00001eb8  afc1fff0	sw	-16(r30),r1
 1338  00001ebc  0800008c	j	L92_LF2
 1339  00001ec0  54000000	nop; delay slot nop
 1340  00001ec4          	L91_LF2:
 1341  00001ec4  8fc10000	lw	r1,(r30)
 1342  00001ec8  90220000	lbu	r2,(r1)
 1343  00001ecc  6c410060	sgtui	r1,r2,#96
 1344  00001ed0  10200030	beqz	r1,L93_LF2
 1345  00001ed4  54000000	nop; delay slot nop
 1346  00001ed8  8fc10000	lw	r1,(r30)
 1347  00001edc  90220000	lbu	r2,(r1)
 1348  00001ee0  7041007a	sleui	r1,r2,#122
 1349  00001ee4  1020001c	beqz	r1,L93_LF2
 1350  00001ee8  54000000	nop; delay slot nop
 1351  00001eec  8fc10000	lw	r1,(r30)
 1352  00001ef0  90220000	lbu	r2,(r1)
 1353  00001ef4  2041ffa9	addi	r1,r2,#-87
 1354  00001ef8  afc1fff0	sw	-16(r30),r1
 1355  00001efc  0800004c	j	L92_LF2
 1356  00001f00  54000000	nop; delay slot nop
 1357  00001f04          	L93_LF2:
 1358  00001f04  8fc10000	lw	r1,(r30)
 1359  00001f08  90220000	lbu	r2,(r1)
 1360  00001f0c  6c410040	sgtui	r1,r2,#64
 1361  00001f10  10200030	beqz	r1,L95_LF2
 1362  00001f14  54000000	nop; delay slot nop
 1363  00001f18  8fc10000	lw	r1,(r30)
 1364  00001f1c  90220000	lbu	r2,(r1)
 1365  00001f20  7041005a	sleui	r1,r2,#90
 1366  00001f24  1020001c	beqz	r1,L95_LF2
 1367  00001f28  54000000	nop; delay slot nop
 1368  00001f2c  8fc10000	lw	r1,(r30)
 1369  00001f30  90220000	lbu	r2,(r1)
 1370  00001f34  2041ffc9	addi	r1,r2,#-55
 1371  00001f38  afc1fff0	sw	-16(r30),r1
 1372  00001f3c  0800000c	j	L92_LF2
 1373  00001f40  54000000	nop; delay slot nop
 1374  00001f44          	L95_LF2:
 1375  00001f44  200103e8	addi	r1,r0,#1000
 1376  00001f48  afc1fff0	sw	-16(r30),r1
 1377  00001f4c          	L96_LF2:
 1378  00001f4c          	L94_LF2:
 1379  00001f4c          	L92_LF2:
 1380  00001f4c  8fc1fff0	lw	r1,-16(r30)
 1381  00001f50  8fc20008	lw	r2,8(r30)
 1382  00001f54  0022082a	slt	r1,r1,r2
 1383  00001f58  10200040	beqz	r1,L90_LF2
 1384  00001f5c  54000000	nop; delay slot nop
 1385  00001f60  8fc1fff4	lw	r1,-12(r30)
 1386  00001f64  8fc20008	lw	r2,8(r30)
 1387  00001f68  00200035	movi2fp	f0,r1
 1388  00001f6c  00400835	movi2fp	f1,r2
 1389  00001f70  0401000e	mult	f0,f0,f1
 1390  00001f74  00000834	movfp2i	r1,f0
 1391  00001f78  afc1fff4	sw	-12(r30),r1
 1392  00001f7c  8fc1fff4	lw	r1,-12(r30)
 1393  00001f80  8fc2fff0	lw	r2,-16(r30)
 1394  00001f84  00220820	add	r1,r1,r2
 1395  00001f88  afc1fff4	sw	-12(r30),r1
 1396  00001f8c  8fc20000	lw	r2,(r30)
 1397  00001f90  20410001	addi	r1,r2,#1
 1398  00001f94  00011020	add	r2,r0,r1
 1399  00001f98  afc20000	sw	(r30),r2
 1400  00001f9c          	L97_LF2:
 1401  00001f9c          	L90_LF2:
 1402  00001f9c  8fc1fff0	lw	r1,-16(r30)
 1403  00001fa0  8fc20008	lw	r2,8(r30)
 1404  00001fa4  0022082a	slt	r1,r1,r2
 1405  00001fa8  1420000c	bnez	r1,L98_LF2
 1406  00001fac  54000000	nop; delay slot nop
 1407  00001fb0  0800000c	j	L89_LF2
 1408  00001fb4  54000000	nop; delay slot nop
 1409  00001fb8          	L98_LF2:
 1410  00001fb8  0bfffec8	j	L88_LF2
 1411  00001fbc  54000000	nop; delay slot nop
 1412  00001fc0          	L89_LF2:
 1413  00001fc0  8fc10004	lw	r1,4(r30)
 1414  00001fc4  64220000	snei	r2,r1,#0
 1415  00001fc8  10400010	beqz	r2,L99_LF2
 1416  00001fcc  54000000	nop; delay slot nop
 1417  00001fd0  8fc10004	lw	r1,4(r30)
 1418  00001fd4  8fc20000	lw	r2,(r30)
 1419  00001fd8  ac220000	sw	(r1),r2
 1420  00001fdc          	L99_LF2:
 1421  00001fdc  8fc1fff4	lw	r1,-12(r30)
 1422  00001fe0  8fc2ffec	lw	r2,-20(r30)
 1423  00001fe4  00200035	movi2fp	f0,r1
 1424  00001fe8  00400835	movi2fp	f1,r2
 1425  00001fec  0401000e	mult	f0,f0,f1
 1426  00001ff0  00000834	movfp2i	r1,f0
 1427  00001ff4  afc1fff4	sw	-12(r30),r1
 1428  00001ff8  8fc1fff4	lw	r1,-12(r30)
 1429  00001ffc  08000004	j	L72_LF2
 1430  00002000  54000000	nop; delay slot nop
 1431  00002004          	L72_LF2:
 1432  00002004  8fa20000	lw	r2,0(r29)
 1433  00002008  8fdffff8	lw	r31,-8(r30)
 1434  0000200c  001ee820	add	r29,r0,r30
 1435  00002010  8fdefffc	lw	r30,-4(r30)
 1436  00002014  4be00000	jr	r31
 1437  00002018  54000000	nop
 1438  0000201c          	.endproc _dstrtol
 1439  0000201c          	.align 2
 1440  0000201c          	.proc _bcopy
 1441  0000201c          	.global _bcopy
 1442  0000201c          	_bcopy:
 1443                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1444  0000201c  afbefffc	sw	-4(r29),r30; push fp
 1445  00002020  001df020	add	r30,r0,r29; fp = sp
 1446  00002024  afbffff8	sw	-8(r29),r31; push ret addr
 1447  00002028  2fbd0010	subui	r29,r29,#16; alloc local storage
 1448  0000202c  afa20000	sw	0(r29),r2
 1449  00002030  afa30004	sw	4(r29),r3
 1450  00002034  54000000	nop
 1451  00002038          	L101_LF2:
 1452  00002038  8fc10008	lw	r1,8(r30)
 1453  0000203c  2022ffff	addi	r2,r1,#-1
 1454  00002040  afc20008	sw	8(r30),r2
 1455  00002044  6c210000	sgti	r1,r1,#0
 1456  00002048  1420000c	bnez	r1,L103_LF2
 1457  0000204c  54000000	nop; delay slot nop
 1458  00002050  0800002c	j	L102_LF2
 1459  00002054  54000000	nop; delay slot nop
 1460  00002058          	L103_LF2:
 1461  00002058  8fc10004	lw	r1,4(r30)
 1462  0000205c  20220001	addi	r2,r1,#1
 1463  00002060  afc20004	sw	4(r30),r2
 1464  00002064  8fc20000	lw	r2,(r30)
 1465  00002068  20430001	addi	r3,r2,#1
 1466  0000206c  afc30000	sw	(r30),r3
 1467  00002070  80420000	lb	r2,(r2)
 1468  00002074  a0220000	sb	(r1),r2
 1469  00002078  0bffffbc	j	L101_LF2
 1470  0000207c  54000000	nop; delay slot nop
 1471  00002080          	L102_LF2:
 1472  00002080          	L100_LF2:
 1473  00002080  8fa20000	lw	r2,0(r29)
 1474  00002084  8fa30004	lw	r3,4(r29)
 1475  00002088  8fdffff8	lw	r31,-8(r30)
 1476  0000208c  001ee820	add	r29,r0,r30
 1477  00002090  8fdefffc	lw	r30,-4(r30)
 1478  00002094  4be00000	jr	r31
 1479  00002098  54000000	nop
 1480  0000209c          	.endproc _bcopy
 1481  0000209c          	.align 2
 1482  0000209c          	.proc _bzero
 1483  0000209c          	.global _bzero
 1484  0000209c          	_bzero:
 1485                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1486  0000209c  afbefffc	sw	-4(r29),r30; push fp
 1487  000020a0  001df020	add	r30,r0,r29; fp = sp
 1488  000020a4  afbffff8	sw	-8(r29),r31; push ret addr
 1489  000020a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1490  000020ac  afa20000	sw	0(r29),r2
 1491  000020b0  54000000	nop
 1492  000020b4          	L105_LF2:
 1493  000020b4  8fc10004	lw	r1,4(r30)
 1494  000020b8  2022ffff	addi	r2,r1,#-1
 1495  000020bc  afc20004	sw	4(r30),r2
 1496  000020c0  6c210000	sgti	r1,r1,#0
 1497  000020c4  1420000c	bnez	r1,L107_LF2
 1498  000020c8  54000000	nop; delay slot nop
 1499  000020cc  08000020	j	L106_LF2
 1500  000020d0  54000000	nop; delay slot nop
 1501  000020d4          	L107_LF2:
 1502  000020d4  8fc10000	lw	r1,(r30)
 1503  000020d8  20220001	addi	r2,r1,#1
 1504  000020dc  afc20000	sw	(r30),r2
 1505  000020e0  20020000	addi	r2,r0,(#0x0)&0xff
 1506  000020e4  a0220000	sb	(r1),r2
 1507  000020e8  0bffffc8	j	L105_LF2
 1508  000020ec  54000000	nop; delay slot nop
 1509  000020f0          	L106_LF2:
 1510  000020f0          	L104_LF2:
 1511  000020f0  8fa20000	lw	r2,0(r29)
 1512  000020f4  8fdffff8	lw	r31,-8(r30)
 1513  000020f8  001ee820	add	r29,r0,r30
 1514  000020fc  8fdefffc	lw	r30,-4(r30)
 1515  00002100  4be00000	jr	r31
 1516  00002104  54000000	nop
 1517  00002108          	.endproc _bzero
 1518  00002108          	.align 2
 1519  00002108          	.proc _min
 1520  00002108          	.global _min
 1521  00002108          	_min:
 1522                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1523  00002108  afbefffc	sw	-4(r29),r30; push fp
 1524  0000210c  001df020	add	r30,r0,r29; fp = sp
 1525  00002110  afbffff8	sw	-8(r29),r31; push ret addr
 1526  00002114  2fbd0010	subui	r29,r29,#16; alloc local storage
 1527  00002118  afa20000	sw	0(r29),r2
 1528  0000211c  afa30004	sw	4(r29),r3
 1529  00002120  8fc10000	lw	r1,(r30)
 1530  00002124  8fc20004	lw	r2,4(r30)
 1531  00002128  0022182c	sle	r3,r1,r2
 1532  0000212c  14600008	bnez	r3,L109_LF2
 1533  00002130  54000000	nop; delay slot nop
 1534  00002134  8fc10004	lw	r1,4(r30)
 1535  00002138          	L109_LF2:
 1536  00002138  08000004	j	L108_LF2
 1537  0000213c  54000000	nop; delay slot nop
 1538  00002140          	L108_LF2:
 1539  00002140  8fa20000	lw	r2,0(r29)
 1540  00002144  8fa30004	lw	r3,4(r29)
 1541  00002148  8fdffff8	lw	r31,-8(r30)
 1542  0000214c  001ee820	add	r29,r0,r30
 1543  00002150  8fdefffc	lw	r30,-4(r30)
 1544  00002154  4be00000	jr	r31
 1545  00002158  54000000	nop
 1546  0000215c          	.endproc _min
 1547  0000215c          	.align 2
 1548  0000215c          	.proc _max
 1549  0000215c          	.global _max
 1550  0000215c          	_max:
 1551                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1552  0000215c  afbefffc	sw	-4(r29),r30; push fp
 1553  00002160  001df020	add	r30,r0,r29; fp = sp
 1554  00002164  afbffff8	sw	-8(r29),r31; push ret addr
 1555  00002168  2fbd0010	subui	r29,r29,#16; alloc local storage
 1556  0000216c  afa20000	sw	0(r29),r2
 1557  00002170  afa30004	sw	4(r29),r3
 1558  00002174  8fc10000	lw	r1,(r30)
 1559  00002178  8fc20004	lw	r2,4(r30)
 1560  0000217c  0022182d	sge	r3,r1,r2
 1561  00002180  14600008	bnez	r3,L111_LF2
 1562  00002184  54000000	nop; delay slot nop
 1563  00002188  8fc10004	lw	r1,4(r30)
 1564  0000218c          	L111_LF2:
 1565  0000218c  08000004	j	L110_LF2
 1566  00002190  54000000	nop; delay slot nop
 1567  00002194          	L110_LF2:
 1568  00002194  8fa20000	lw	r2,0(r29)
 1569  00002198  8fa30004	lw	r3,4(r29)
 1570  0000219c  8fdffff8	lw	r31,-8(r30)
 1571  000021a0  001ee820	add	r29,r0,r30
 1572  000021a4  8fdefffc	lw	r30,-4(r30)
 1573  000021a8  4be00000	jr	r31
 1574  000021ac  54000000	nop
 1575  000021b0          	.endproc _max
 1576                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1577                      ;;;
 1578                      ;;; Most of the traps are called in files from libtraps.
 1581  000021b0          	.align 2
 1582  000021b0          	.proc _exit
 1583  000021b0          	.global _exit
 1584  000021b0          	_exit:
 1585  000021b0  44000300	trap	#0x300
 1586  000021b4  4be00000	jr	r31
 1587  000021b8  54000000	nop
 1588  000021bc          	.endproc _exit
 1590                      ; for the benefit of gcc.
 1591  000021bc          	.proc ___main
 1592  000021bc          	.global ___main
 1593  000021bc          	___main:
 1594  000021bc  4be00000	jr	r31
 1595  000021c0  54000000	nop
 1596  000021c4          	.endproc ___main
 1597                      ;
 1598                      ; Stub functions for DLX traps.
 1599                      ;
 1600                      ; Aaron Sawdey 1996; released to the Public Domain.
 1601                      ;
 1603  000021c4          	.proc _printf
 1604  000021c4          	.global _printf
 1605  000021c4          	_printf:
 1606  000021c4  44002001	trap	#0x2001
 1607  000021c8  4be00000	jr	r31
 1608  000021cc  54000000	nop
 1609  000021d0          	.endproc _printf
 1611  000021d0          	.text
 1612  000021d0          	.global _etext
 1613  000021d0          	_etext:
 1614  000021d0          	.align 3
 1615  000021d0          	.data
 1616  000030d2          	.global _edata
 1617  000030d2          	_edata:
