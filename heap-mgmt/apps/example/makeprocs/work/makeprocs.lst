 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 162
    4                      ; Text size: 4480
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <which program to run (1-6) or all of them (0) \n\000"
   82  00003004  653a2025	
   82  00003008  73203c77	
   82  0000300c  68696368	
   82  00003010  2070726f	
   82  00003014  6772616d	
   82  00003018  20746f20	
   82  0000301c  72756e20	
   82  00003020  28312d36	
   82  00003024  29206f72	
   82  00003028  20616c6c	
   82  0000302c  206f6620	
   82  00003030  7468656d	
   82  00003034  20283029	
   82  00003038  200a00  	
   83  0000303b          	.align 2
   84  0000303c          	LC1_LF0:
   85  0000303c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   85  00003040  70726f63	
   85  00003044  73202825	
   85  00003048  64293a20	
   85  0000304c  42616420	
   85  00003050  73656d5f	
   85  00003054  63726561	
   85  00003058  74650a00	
   86  0000305c          	.align 2
   87  0000305c          	LC2_LF0:
   88  0000305c  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
   88  00003060  70726f63	
   88  00003064  73202825	
   88  00003068  64293a20	
   88  0000306c  416c6c20	
   88  00003070  6f746865	
   88  00003074  72207072	
   88  00003078  6f636573	
   88  0000307c  73657320	
   88  00003080  636f6d70	
   88  00003084  6c657465	
   88  00003088  642c2065	
   88  0000308c  78697469	
   88  00003090  6e67206d	
   88  00003094  61696e20	
   88  00003098  70726f63	
   88  0000309c  6573732e	
   88  000030a0  0a      	
   89  000030a1  00      	.ascii "\000"
   90  000030a2          	.text
   91  000010d4          	.align 2
   92  000010d4          	.proc _main
   93  000010d4          	.global _main
   94  000010d4          	_main:
   95                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
   96  000010d4  afbefffc	sw	-4(r29),r30; push fp
   97  000010d8  001df020	add	r30,r0,r29; fp = sp
   98  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   99  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  100  000010e4  8fc60000	lw	r6,(r30)
  101  000010e8  8fc70004	lw	r7,4(r30)
  102  000010ec  0c001088	jal	___main
  103  000010f0  54000000	nop; not filled.
  104  000010f4  23bdfff8	addi	r29,r29,#-8
  105  000010f8  20080022	addi	r8,r0,#34
  106  000010fc  afa80000	sw	(r29),r8
  107  00001100  0c0002c8	jal	_malloc
  108  00001104  54000000	nop; not filled.
  109  00001108  00012820	add	r5,r0,r1
  110  0000110c  20080042	addi	r8,r0,#66
  111  00001110  afa80000	sw	(r29),r8
  112  00001114  0c0002b4	jal	_malloc
  113  00001118  54000000	nop; not filled.
  114  0000111c  00011820	add	r3,r0,r1
  115  00001120  20080023	addi	r8,r0,#35
  116  00001124  afa80000	sw	(r29),r8
  117  00001128  0c0002a0	jal	_malloc
  118  0000112c  54000000	nop; not filled.
  119  00001130  00012020	add	r4,r0,r1
  120  00001134  20080043	addi	r8,r0,#67
  121  00001138  afa80000	sw	(r29),r8
  122  0000113c  0c00028c	jal	_malloc
  123  00001140  54000000	nop; not filled.
  124  00001144  00011020	add	r2,r0,r1
  125  00001148  afa30000	sw	(r29),r3
  126  0000114c  0c000284	jal	_mfree
  127  00001150  54000000	nop; not filled.
  128  00001154  afa20000	sw	(r29),r2
  129  00001158  0c000278	jal	_mfree
  130  0000115c  54000000	nop; not filled.
  131  00001160  afa50000	sw	(r29),r5
  132  00001164  0c00026c	jal	_mfree
  133  00001168  54000000	nop; not filled.
  134  0000116c  afa40000	sw	(r29),r4
  135  00001170  0c000260	jal	_mfree
  136  00001174  54000000	nop; not filled.
  137  00001178  23bd0008	addi	r29,r29,#8
  138  0000117c  64c10002	snei	r1,r6,#2
  139  00001180  10200030	beqz	r1,L14_LF0
  140  00001184  54000000	nop; not filled.
  141  00001188  23bdfff8	addi	r29,r29,#-8
  142  0000118c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  143  00001190  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  144  00001194  afa80000	sw	(r29),r8
  145  00001198  8ce10000	lw	r1,(r7)
  146  0000119c  afa10004	sw	4(r29),r1
  147  000011a0  0c000114	jal	_Printf
  148  000011a4  54000000	nop; not filled.
  149  000011a8  0c000214	jal	_Exit
  150  000011ac  54000000	nop; not filled.
  151  000011b0  23bd0008	addi	r29,r29,#8
  152  000011b4          	L14_LF0:
  153  000011b4  23bdfff0	addi	r29,r29,#-16
  154  000011b8  8ce70004	lw	r7,4(r7)
  155  000011bc  afa70000	sw	(r29),r7
  156  000011c0  20080000	addi	r8,r0,#0
  157  000011c4  afa80004	sw	4(r29),r8
  158  000011c8  2008000a	addi	r8,r0,#10
  159  000011cc  afa80008	sw	8(r29),r8
  160  000011d0  0c000aa8	jal	_dstrtol
  161  000011d4  54000000	nop; not filled.
  162  000011d8  20080000	addi	r8,r0,#0
  163  000011dc  afa80000	sw	(r29),r8
  164  000011e0  0c000110	jal	_sem_create
  165  000011e4  54000000	nop; not filled.
  166  000011e8  00011020	add	r2,r0,r1
  167  000011ec  23bd0010	addi	r29,r29,#16
  168  000011f0  6041ffff	seqi	r1,r2,#-1
  169  000011f4  10200034	beqz	r1,L15_LF0
  170  000011f8  54000000	nop; not filled.
  171  000011fc  0c0000c4	jal	_getpid
  172  00001200  54000000	nop; not filled.
  173  00001204  23bdfff8	addi	r29,r29,#-8
  174  00001208  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  175  0000120c  2508303c	addui	r8,r8,(LC1_LF0)&0xffff
  176  00001210  afa80000	sw	(r29),r8
  177  00001214  afa10004	sw	4(r29),r1
  178  00001218  0c00009c	jal	_Printf
  179  0000121c  54000000	nop; not filled.
  180  00001220  0c00019c	jal	_Exit
  181  00001224  54000000	nop; not filled.
  182  00001228  23bd0008	addi	r29,r29,#8
  183  0000122c          	L15_LF0:
  184  0000122c  23bdfff8	addi	r29,r29,#-8
  185  00001230  afa20000	sw	(r29),r2
  186  00001234  23c1ffe8	addi	r1,r30,#-24
  187  00001238  afa10004	sw	4(r29),r1
  188  0000123c  0c0008b0	jal	_ditoa
  189  00001240  54000000	nop; not filled.
  190  00001244  0c00007c	jal	_getpid
  191  00001248  54000000	nop; not filled.
  192  0000124c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  193  00001250  2508305c	addui	r8,r8,(LC2_LF0)&0xffff
  194  00001254  afa80000	sw	(r29),r8
  195  00001258  afa10004	sw	4(r29),r1
  196  0000125c  0c000058	jal	_Printf
  197  00001260  54000000	nop; not filled.
  198  00001264  23bd0008	addi	r29,r29,#8
  199  00001268  0c000f00	jal	_exit
  200  0000126c  54000000	nop
  201  00001270          	.endproc _main
  202                      ;;;
  203                      ;;; Stub functions for DLX traps.
  204                      ;;;
  205                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  206                      ;;;
  207                      ;;; The traps such as Open and Close
  208                      ;;; (note the capital letters) are for use by user programs.  The traps
  209                      ;;; with names such as open and close (lower case) are for use by the OS.
  210                      ;;;
  213  00001270          	.align 2
  215                      ;;; The following are the traps to be used by user-level programs
  216                      ;;;
  218  00001270          	.align 2
  219  00001270          	.proc _Open
  220  00001270          	.global _Open
  221  00001270          	_Open:
  222                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  223                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  224                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  225  00001270  44000213	trap	#0x213
  226  00001274  4be00000	jr	r31
  227  00001278  54000000	nop
  228  0000127c          	.endproc _Open
  230  0000127c          	.proc _Close
  231  0000127c          	.global _Close
  232  0000127c          	_Close:
  233  0000127c  44000214	trap	#0x214
  234  00001280  4be00000	jr	r31
  235  00001284  54000000	nop
  236  00001288          	.endproc _Close
  238  00001288          	.proc _Read
  239  00001288          	.global _Read
  240  00001288          	_Read:
  241  00001288  44000210	trap	#0x210
  242  0000128c  4be00000	jr	r31
  243  00001290  54000000	nop
  244  00001294          	.endproc _Read
  246  00001294          	.proc _Write
  247  00001294          	.global _Write
  248  00001294          	_Write:
  249  00001294  44000211	trap	#0x211
  250  00001298  4be00000	jr	r31
  251  0000129c  54000000	nop
  252  000012a0          	.endproc _Write
  254  000012a0          	.proc _Lseek
  255  000012a0          	.global _Lseek
  256  000012a0          	_Lseek:
  257  000012a0  44000212	trap	#0x212
  258  000012a4  4be00000	jr	r31
  259  000012a8  54000000	nop
  260  000012ac          	.endproc _Lseek
  262  000012ac          	.proc _Putchar
  263  000012ac          	.global _Putchar
  264  000012ac          	_Putchar:
  265  000012ac  44000280	trap	#0x280
  266  000012b0  4be00000	jr	r31
  267  000012b4  54000000	nop
  268  000012b8          	.endproc _Putchar
  270  000012b8          	.proc _Printf
  271  000012b8          	.global _Printf
  272  000012b8          	_Printf:
  273  000012b8  44000201	trap	#0x201
  274  000012bc  4be00000	jr	r31
  275  000012c0  54000000	nop
  276  000012c4          	.endproc _Printf
  278  000012c4          	.proc _getpid
  279  000012c4          	.global _getpid
  280  000012c4          	_getpid:
  281  000012c4  44000431	trap	#0x431
  282  000012c8  4be00000	jr	r31
  283  000012cc  54000000	nop
  284  000012d0          	.endproc _getpid
  286  000012d0          	.proc _process_create
  287  000012d0          	.global _process_create
  288  000012d0          	_process_create:
  289  000012d0  44000432	trap	#0x432
  290  000012d4  4be00000	jr	r31
  291  000012d8  54000000	nop
  292  000012dc          	.endproc _process_create
  294  000012dc          	.proc _shmget
  295  000012dc          	.global _shmget
  296  000012dc          	_shmget:
  297  000012dc  44000440	trap	#0x440
  298  000012e0  4be00000	jr	r31
  299  000012e4  54000000	nop
  300  000012e8          	.endproc _shmget
  302  000012e8          	.proc _shmat
  303  000012e8          	.global _shmat
  304  000012e8          	_shmat:
  305  000012e8  44000441	trap	#0x441
  306  000012ec  4be00000	jr	r31
  307  000012f0  54000000	nop
  308  000012f4          	.endproc _shmat
  310  000012f4          	.proc _sem_create
  311  000012f4          	.global _sem_create
  312  000012f4          	_sem_create:
  313  000012f4  44000450	trap	#0x450
  314  000012f8  4be00000	jr	r31
  315  000012fc  54000000	nop
  316  00001300          	.endproc _sem_create
  318  00001300          	.proc _sem_wait
  319  00001300          	.global _sem_wait
  320  00001300          	_sem_wait:
  321  00001300  44000451	trap	#0x451
  322  00001304  4be00000	jr	r31
  323  00001308  54000000	nop
  324  0000130c          	.endproc _sem_wait
  326  0000130c          	.proc _sem_signal
  327  0000130c          	.global _sem_signal
  328  0000130c          	_sem_signal:
  329  0000130c  44000452	trap	#0x452
  330  00001310  4be00000	jr	r31
  331  00001314  54000000	nop
  332  00001318          	.endproc _sem_signal
  334  00001318          	.proc _lock_create
  335  00001318          	.global _lock_create
  336  00001318          	_lock_create:
  337  00001318  44000453	trap	#0x453
  338  0000131c  4be00000	jr	r31
  339  00001320  54000000	nop
  340  00001324          	.endproc _lock_create
  342  00001324          	.proc _lock_acquire
  343  00001324          	.global _lock_acquire
  344  00001324          	_lock_acquire:
  345  00001324  44000454	trap	#0x454
  346  00001328  4be00000	jr	r31
  347  0000132c  54000000	nop
  348  00001330          	.endproc _lock_acquire
  350  00001330          	.proc _lock_release
  351  00001330          	.global _lock_release
  352  00001330          	_lock_release:
  353  00001330  44000455	trap	#0x455
  354  00001334  4be00000	jr	r31
  355  00001338  54000000	nop
  356  0000133c          	.endproc _lock_release
  358  0000133c          	.proc _cond_create
  359  0000133c          	.global _cond_create
  360  0000133c          	_cond_create:
  361  0000133c  44000456	trap	#0x456
  362  00001340  4be00000	jr	r31
  363  00001344  54000000	nop
  364  00001348          	.endproc _cond_create
  366  00001348          	.proc _cond_wait
  367  00001348          	.global _cond_wait
  368  00001348          	_cond_wait:
  369  00001348  44000457	trap	#0x457
  370  0000134c  4be00000	jr	r31
  371  00001350  54000000	nop
  372  00001354          	.endproc _cond_wait
  374  00001354          	.proc _cond_signal
  375  00001354          	.global _cond_signal
  376  00001354          	_cond_signal:
  377  00001354  44000458	trap	#0x458
  378  00001358  4be00000	jr	r31
  379  0000135c  54000000	nop
  380  00001360          	.endproc _cond_signal
  382  00001360          	.proc _cond_broadcast
  383  00001360          	.global _cond_broadcast
  384  00001360          	_cond_broadcast:
  385  00001360  44000459	trap	#0x459
  386  00001364  4be00000	jr	r31
  387  00001368  54000000	nop
  388  0000136c          	.endproc _cond_broadcast
  390  0000136c          	.proc _mbox_create
  391  0000136c          	.global _mbox_create
  392  0000136c          	_mbox_create:
  393  0000136c  44000460	trap	#0x460
  394  00001370  4be00000	jr	r31
  395  00001374  54000000	nop
  396  00001378          	.endproc _mbox_create
  398  00001378          	.proc _mbox_open
  399  00001378          	.global _mbox_open
  400  00001378          	_mbox_open:
  401  00001378  44000461	trap	#0x461
  402  0000137c  4be00000	jr	r31
  403  00001380  54000000	nop
  404  00001384          	.endproc _mbox_open
  406  00001384          	.proc _mbox_close
  407  00001384          	.global _mbox_close
  408  00001384          	_mbox_close:
  409  00001384  44000462	trap	#0x462
  410  00001388  4be00000	jr	r31
  411  0000138c  54000000	nop
  412  00001390          	.endproc _mbox_close
  414  00001390          	.proc _mbox_send
  415  00001390          	.global _mbox_send
  416  00001390          	_mbox_send:
  417  00001390  44000463	trap	#0x463
  418  00001394  4be00000	jr	r31
  419  00001398  54000000	nop
  420  0000139c          	.endproc _mbox_send
  422  0000139c          	.proc _mbox_recv
  423  0000139c          	.global _mbox_recv
  424  0000139c          	_mbox_recv:
  425  0000139c  44000464	trap	#0x464
  426  000013a0  4be00000	jr	r31
  427  000013a4  54000000	nop
  428  000013a8          	.endproc _mbox_recv
  430  000013a8          	.proc _sleep
  431  000013a8          	.global _sleep
  432  000013a8          	_sleep:
  433  000013a8  44000465	trap	#0x465
  434  000013ac  4be00000	jr	r31
  435  000013b0  54000000	nop
  436  000013b4          	.endproc _sleep
  438  000013b4          	.proc _yield
  439  000013b4          	.global _yield
  440  000013b4          	_yield:
  441  000013b4  44000466	trap	#0x466
  442  000013b8  4be00000	jr	r31
  443  000013bc  54000000	nop
  444  000013c0          	.endproc _yield
  447  000013c0          	.proc _Exit
  448  000013c0          	.global _Exit
  449  000013c0          	_Exit:
  450  000013c0  44000500	trap	#0x500
  451  000013c4  4be00000	jr	r31
  452  000013c8  54000000	nop
  453  000013cc          	.endproc _Exit
  456  000013cc          	.proc _malloc
  457  000013cc          	.global _malloc
  458  000013cc          	_malloc:
  459  000013cc  44000467	trap	#0x467
  460  000013d0  4be00000	jr	r31
  461  000013d4          	.endproc _malloc
  464  000013d4          	.proc _mfree
  465  000013d4          	.global _mfree
  466  000013d4          	_mfree:
  467  000013d4  44000468	trap	#0x468
  468  000013d8  4be00000	jr	r31
  469  000013dc          	.endproc _mfree
  470                      ; Compiled by GCC
  472  000013dc          	.align 2
  473  000013dc          	.proc _isspace
  474  000013dc          	.global _isspace
  475  000013dc          	_isspace:
  476                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  477  000013dc  afbefffc	sw	-4(r29),r30; push fp
  478  000013e0  001df020	add	r30,r0,r29; fp = sp
  479  000013e4  afbffff8	sw	-8(r29),r31; push ret addr
  480  000013e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  481  000013ec  afa20000	sw	0(r29),r2
  482  000013f0  afa30004	sw	4(r29),r3
  483  000013f4  afa40008	sw	8(r29),r4
  484  000013f8  83c20003	lb	r2,3(r30)
  485  000013fc  20010000	addi	r1,r0,#0
  486  00001400  304300ff	andi	r3,r2,#0x00ff
  487  00001404  60640020	seqi	r4,r3,#32
  488  00001408  1480002c	bnez	r4,L3_LF2
  489  0000140c  54000000	nop; delay slot nop
  490  00001410  304300ff	andi	r3,r2,#0x00ff
  491  00001414  60640009	seqi	r4,r3,#9
  492  00001418  1480001c	bnez	r4,L3_LF2
  493  0000141c  54000000	nop; delay slot nop
  494  00001420  304300ff	andi	r3,r2,#0x00ff
  495  00001424  6064000a	seqi	r4,r3,#10
  496  00001428  1480000c	bnez	r4,L3_LF2
  497  0000142c  54000000	nop; delay slot nop
  498  00001430  08000008	j	L2_LF2
  499  00001434  54000000	nop; delay slot nop
  500  00001438          	L3_LF2:
  501  00001438  20010001	addi	r1,r0,#1
  502  0000143c          	L2_LF2:
  503  0000143c  08000004	j	L1_LF2
  504  00001440  54000000	nop; delay slot nop
  505  00001444          	L1_LF2:
  506  00001444  8fa20000	lw	r2,0(r29)
  507  00001448  8fa30004	lw	r3,4(r29)
  508  0000144c  8fa40008	lw	r4,8(r29)
  509  00001450  8fdffff8	lw	r31,-8(r30)
  510  00001454  001ee820	add	r29,r0,r30
  511  00001458  8fdefffc	lw	r30,-4(r30)
  512  0000145c  4be00000	jr	r31
  513  00001460  54000000	nop
  514  00001464          	.endproc _isspace
  515  00001464          	.align 2
  516  00001464          	.proc _isxdigit
  517  00001464          	.global _isxdigit
  518  00001464          	_isxdigit:
  519                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  520  00001464  afbefffc	sw	-4(r29),r30; push fp
  521  00001468  001df020	add	r30,r0,r29; fp = sp
  522  0000146c  afbffff8	sw	-8(r29),r31; push ret addr
  523  00001470  2fbd0018	subui	r29,r29,#24; alloc local storage
  524  00001474  afa20000	sw	0(r29),r2
  525  00001478  afa30004	sw	4(r29),r3
  526  0000147c  afa40008	sw	8(r29),r4
  527  00001480  83c20003	lb	r2,3(r30)
  528  00001484  20010000	addi	r1,r0,#0
  529  00001488  304300ff	andi	r3,r2,#0x00ff
  530  0000148c  6c64002f	sgtui	r4,r3,#47
  531  00001490  1080001c	beqz	r4,L7_LF2
  532  00001494  54000000	nop; delay slot nop
  533  00001498  304300ff	andi	r3,r2,#0x00ff
  534  0000149c  70640039	sleui	r4,r3,#57
  535  000014a0  1480005c	bnez	r4,L6_LF2
  536  000014a4  54000000	nop; delay slot nop
  537  000014a8  08000004	j	L7_LF2
  538  000014ac  54000000	nop; delay slot nop
  539  000014b0          	L7_LF2:
  540  000014b0  304300ff	andi	r3,r2,#0x00ff
  541  000014b4  6c640060	sgtui	r4,r3,#96
  542  000014b8  1080001c	beqz	r4,L8_LF2
  543  000014bc  54000000	nop; delay slot nop
  544  000014c0  304300ff	andi	r3,r2,#0x00ff
  545  000014c4  70640066	sleui	r4,r3,#102
  546  000014c8  14800034	bnez	r4,L6_LF2
  547  000014cc  54000000	nop; delay slot nop
  548  000014d0  08000004	j	L8_LF2
  549  000014d4  54000000	nop; delay slot nop
  550  000014d8          	L8_LF2:
  551  000014d8  304300ff	andi	r3,r2,#0x00ff
  552  000014dc  6c640040	sgtui	r4,r3,#64
  553  000014e0  10800020	beqz	r4,L5_LF2
  554  000014e4  54000000	nop; delay slot nop
  555  000014e8  304300ff	andi	r3,r2,#0x00ff
  556  000014ec  70640041	sleui	r4,r3,#65
  557  000014f0  1480000c	bnez	r4,L6_LF2
  558  000014f4  54000000	nop; delay slot nop
  559  000014f8  08000008	j	L5_LF2
  560  000014fc  54000000	nop; delay slot nop
  561  00001500          	L6_LF2:
  562  00001500  20010001	addi	r1,r0,#1
  563  00001504          	L5_LF2:
  564  00001504  08000004	j	L4_LF2
  565  00001508  54000000	nop; delay slot nop
  566  0000150c          	L4_LF2:
  567  0000150c  8fa20000	lw	r2,0(r29)
  568  00001510  8fa30004	lw	r3,4(r29)
  569  00001514  8fa40008	lw	r4,8(r29)
  570  00001518  8fdffff8	lw	r31,-8(r30)
  571  0000151c  001ee820	add	r29,r0,r30
  572  00001520  8fdefffc	lw	r30,-4(r30)
  573  00001524  4be00000	jr	r31
  574  00001528  54000000	nop
  575  0000152c          	.endproc _isxdigit
  576  0000152c          	.align 2
  577  0000152c          	.proc _dstrcpy
  578  0000152c          	.global _dstrcpy
  579  0000152c          	_dstrcpy:
  580                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  581  0000152c  afbefffc	sw	-4(r29),r30; push fp
  582  00001530  001df020	add	r30,r0,r29; fp = sp
  583  00001534  afbffff8	sw	-8(r29),r31; push ret addr
  584  00001538  2fbd0018	subui	r29,r29,#24; alloc local storage
  585  0000153c  afa20000	sw	0(r29),r2
  586  00001540  afa30004	sw	4(r29),r3
  587  00001544  8fc10000	lw	r1,(r30)
  588  00001548  afc1fff4	sw	-12(r30),r1
  589  0000154c          	L10_LF2:
  590  0000154c  8fc10000	lw	r1,(r30)
  591  00001550  20220001	addi	r2,r1,#1
  592  00001554  afc20000	sw	(r30),r2
  593  00001558  8fc20004	lw	r2,4(r30)
  594  0000155c  20430001	addi	r3,r2,#1
  595  00001560  afc30004	sw	4(r30),r3
  596  00001564  80420000	lb	r2,(r2)
  597  00001568  a0220000	sb	(r1),r2
  598  0000156c  a3c2fff3	sb	-13(r30),r2
  599  00001570          	L12_LF2:
  600  00001570  93c1fff3	lbu	r1,-13(r30)
  601  00001574  64220000	snei	r2,r1,#0
  602  00001578  1440000c	bnez	r2,L13_LF2
  603  0000157c  54000000	nop; delay slot nop
  604  00001580  0800000c	j	L11_LF2
  605  00001584  54000000	nop; delay slot nop
  606  00001588          	L13_LF2:
  607  00001588  0bffffc0	j	L10_LF2
  608  0000158c  54000000	nop; delay slot nop
  609  00001590          	L11_LF2:
  610  00001590  8fc1fff4	lw	r1,-12(r30)
  611  00001594  08000004	j	L9_LF2
  612  00001598  54000000	nop; delay slot nop
  613  0000159c          	L9_LF2:
  614  0000159c  8fa20000	lw	r2,0(r29)
  615  000015a0  8fa30004	lw	r3,4(r29)
  616  000015a4  8fdffff8	lw	r31,-8(r30)
  617  000015a8  001ee820	add	r29,r0,r30
  618  000015ac  8fdefffc	lw	r30,-4(r30)
  619  000015b0  4be00000	jr	r31
  620  000015b4  54000000	nop
  621  000015b8          	.endproc _dstrcpy
  622  000015b8          	.align 2
  623  000015b8          	.proc _dstrncpy
  624  000015b8          	.global _dstrncpy
  625  000015b8          	_dstrncpy:
  626                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  627  000015b8  afbefffc	sw	-4(r29),r30; push fp
  628  000015bc  001df020	add	r30,r0,r29; fp = sp
  629  000015c0  afbffff8	sw	-8(r29),r31; push ret addr
  630  000015c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  631  000015c8  afa20000	sw	0(r29),r2
  632  000015cc  afa30004	sw	4(r29),r3
  633  000015d0  8fc10000	lw	r1,(r30)
  634  000015d4  afc1fff4	sw	-12(r30),r1
  635  000015d8          	L15_LF2:
  636  000015d8  8fc10008	lw	r1,8(r30)
  637  000015dc  2022ffff	addi	r2,r1,#-1
  638  000015e0  afc20008	sw	8(r30),r2
  639  000015e4  70210000	slei	r1,r1,#0
  640  000015e8  1020000c	beqz	r1,L18_LF2
  641  000015ec  54000000	nop; delay slot nop
  642  000015f0  08000048	j	L16_LF2
  643  000015f4  54000000	nop; delay slot nop
  644  000015f8          	L18_LF2:
  645  000015f8  8fc10000	lw	r1,(r30)
  646  000015fc  20220001	addi	r2,r1,#1
  647  00001600  afc20000	sw	(r30),r2
  648  00001604  8fc20004	lw	r2,4(r30)
  649  00001608  20430001	addi	r3,r2,#1
  650  0000160c  afc30004	sw	4(r30),r3
  651  00001610  80420000	lb	r2,(r2)
  652  00001614  a0220000	sb	(r1),r2
  653  00001618  a3c2fff3	sb	-13(r30),r2
  654  0000161c          	L17_LF2:
  655  0000161c  93c1fff3	lbu	r1,-13(r30)
  656  00001620  64220000	snei	r2,r1,#0
  657  00001624  1440000c	bnez	r2,L19_LF2
  658  00001628  54000000	nop; delay slot nop
  659  0000162c  0800000c	j	L16_LF2
  660  00001630  54000000	nop; delay slot nop
  661  00001634          	L19_LF2:
  662  00001634  0bffffa0	j	L15_LF2
  663  00001638  54000000	nop; delay slot nop
  664  0000163c          	L16_LF2:
  665  0000163c  8fc1fff4	lw	r1,-12(r30)
  666  00001640  08000004	j	L14_LF2
  667  00001644  54000000	nop; delay slot nop
  668  00001648          	L14_LF2:
  669  00001648  8fa20000	lw	r2,0(r29)
  670  0000164c  8fa30004	lw	r3,4(r29)
  671  00001650  8fdffff8	lw	r31,-8(r30)
  672  00001654  001ee820	add	r29,r0,r30
  673  00001658  8fdefffc	lw	r30,-4(r30)
  674  0000165c  4be00000	jr	r31
  675  00001660  54000000	nop
  676  00001664          	.endproc _dstrncpy
  677  00001664          	.align 2
  678  00001664          	.proc _dstrcat
  679  00001664          	.global _dstrcat
  680  00001664          	_dstrcat:
  681                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  682  00001664  afbefffc	sw	-4(r29),r30; push fp
  683  00001668  001df020	add	r30,r0,r29; fp = sp
  684  0000166c  afbffff8	sw	-8(r29),r31; push ret addr
  685  00001670  2fbd0018	subui	r29,r29,#24; alloc local storage
  686  00001674  afa20000	sw	0(r29),r2
  687  00001678  8fc10000	lw	r1,(r30)
  688  0000167c  afc1fff4	sw	-12(r30),r1
  689  00001680          	L21_LF2:
  690  00001680  8fc10000	lw	r1,(r30)
  691  00001684  90220000	lbu	r2,(r1)
  692  00001688  64410000	snei	r1,r2,#0
  693  0000168c  1420000c	bnez	r1,L23_LF2
  694  00001690  54000000	nop; delay slot nop
  695  00001694  0800001c	j	L22_LF2
  696  00001698  54000000	nop; delay slot nop
  697  0000169c          	L23_LF2:
  698  0000169c  8fc20000	lw	r2,(r30)
  699  000016a0  20410001	addi	r1,r2,#1
  700  000016a4  00011020	add	r2,r0,r1
  701  000016a8  afc20000	sw	(r30),r2
  702  000016ac  0bffffd0	j	L21_LF2
  703  000016b0  54000000	nop; delay slot nop
  704  000016b4          	L22_LF2:
  705  000016b4  23bdfff8	addi	r29,r29,#-8
  706  000016b8  001d0820	add	r1,r0,r29
  707  000016bc  8fc20000	lw	r2,(r30)
  708  000016c0  ac220000	sw	(r1),r2
  709  000016c4  8fc20004	lw	r2,4(r30)
  710  000016c8  ac220004	sw	4(r1),r2
  711  000016cc  0ffffe5c	jal	_dstrcpy
  712  000016d0  54000000	nop; delay slot nop
  713  000016d4  23bd0008	addi	r29,r29,#8
  714  000016d8  8fc1fff4	lw	r1,-12(r30)
  715  000016dc  08000004	j	L20_LF2
  716  000016e0  54000000	nop; delay slot nop
  717  000016e4          	L20_LF2:
  718  000016e4  8fa20000	lw	r2,0(r29)
  719  000016e8  8fdffff8	lw	r31,-8(r30)
  720  000016ec  001ee820	add	r29,r0,r30
  721  000016f0  8fdefffc	lw	r30,-4(r30)
  722  000016f4  4be00000	jr	r31
  723  000016f8  54000000	nop
  724  000016fc          	.endproc _dstrcat
  725  000016fc          	.align 2
  726  000016fc          	.proc _dstrncmp
  727  000016fc          	.global _dstrncmp
  728  000016fc          	_dstrncmp:
  729                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  730  000016fc  afbefffc	sw	-4(r29),r30; push fp
  731  00001700  001df020	add	r30,r0,r29; fp = sp
  732  00001704  afbffff8	sw	-8(r29),r31; push ret addr
  733  00001708  2fbd0018	subui	r29,r29,#24; alloc local storage
  734  0000170c  afa20000	sw	0(r29),r2
  735  00001710  afa30004	sw	4(r29),r3
  736  00001714  54000000	nop
  737  00001718  20010000	addi	r1,r0,#0
  738  0000171c  afc1fff4	sw	-12(r30),r1
  739  00001720          	L25_LF2:
  740  00001720  8fc1fff4	lw	r1,-12(r30)
  741  00001724  8fc20008	lw	r2,8(r30)
  742  00001728  0022082a	slt	r1,r1,r2
  743  0000172c  1420000c	bnez	r1,L28_LF2
  744  00001730  54000000	nop; delay slot nop
  745  00001734  08000088	j	L26_LF2
  746  00001738  54000000	nop; delay slot nop
  747  0000173c          	L28_LF2:
  748  0000173c  8fc10004	lw	r1,4(r30)
  749  00001740  90220000	lbu	r2,(r1)
  750  00001744  64410000	snei	r1,r2,#0
  751  00001748  14200018	bnez	r1,L29_LF2
  752  0000174c  54000000	nop; delay slot nop
  753  00001750  20010000	addi	r1,r0,#0
  754  00001754  080000d8	j	L24_LF2
  755  00001758  54000000	nop; delay slot nop
  756  0000175c  08000028	j	L30_LF2
  757  00001760  54000000	nop; delay slot nop
  758  00001764          	L29_LF2:
  759  00001764  8fc10000	lw	r1,(r30)
  760  00001768  8fc20004	lw	r2,4(r30)
  761  0000176c  90210000	lbu	r1,(r1)
  762  00001770  90420000	lbu	r2,(r2)
  763  00001774  00220829	sne	r1,r1,r2
  764  00001778  1020000c	beqz	r1,L30_LF2
  765  0000177c  54000000	nop; delay slot nop
  766  00001780  0800003c	j	L26_LF2
  767  00001784  54000000	nop; delay slot nop
  768  00001788          	L31_LF2:
  769  00001788          	L30_LF2:
  770  00001788  8fc20000	lw	r2,(r30)
  771  0000178c  20410001	addi	r1,r2,#1
  772  00001790  00011020	add	r2,r0,r1
  773  00001794  afc20000	sw	(r30),r2
  774  00001798  8fc20004	lw	r2,4(r30)
  775  0000179c  20410001	addi	r1,r2,#1
  776  000017a0  00011020	add	r2,r0,r1
  777  000017a4  afc20004	sw	4(r30),r2
  778  000017a8          	L27_LF2:
  779  000017a8  8fc2fff4	lw	r2,-12(r30)
  780  000017ac  20410001	addi	r1,r2,#1
  781  000017b0  00011020	add	r2,r0,r1
  782  000017b4  afc2fff4	sw	-12(r30),r2
  783  000017b8  0bffff64	j	L25_LF2
  784  000017bc  54000000	nop; delay slot nop
  785  000017c0          	L26_LF2:
  786  000017c0  8fc1fff4	lw	r1,-12(r30)
  787  000017c4  8fc20008	lw	r2,8(r30)
  788  000017c8  00220828	seq	r1,r1,r2
  789  000017cc  10200018	beqz	r1,L32_LF2
  790  000017d0  54000000	nop; delay slot nop
  791  000017d4  20010000	addi	r1,r0,#0
  792  000017d8  08000054	j	L24_LF2
  793  000017dc  54000000	nop; delay slot nop
  794  000017e0  0800004c	j	L33_LF2
  795  000017e4  54000000	nop; delay slot nop
  796  000017e8          	L32_LF2:
  797  000017e8  8fc20000	lw	r2,(r30)
  798  000017ec  90410000	lbu	r1,(r2)
  799  000017f0  8fc20004	lw	r2,4(r30)
  800  000017f4  90430000	lbu	r3,(r2)
  801  000017f8  00230822	sub	r1,r1,r3
  802  000017fc  74220000	sgei	r2,r1,#0
  803  00001800  10400020	beqz	r2,L34_LF2
  804  00001804  54000000	nop; delay slot nop
  805  00001808  8fc10000	lw	r1,(r30)
  806  0000180c  8fc20004	lw	r2,4(r30)
  807  00001810  90210000	lbu	r1,(r1)
  808  00001814  90420000	lbu	r2,(r2)
  809  00001818  00220829	sne	r1,r1,r2
  810  0000181c  08000008	j	L35_LF2
  811  00001820  54000000	nop; delay slot nop
  812  00001824          	L34_LF2:
  813  00001824  2001ffff	addi	r1,r0,#-1
  814  00001828          	L35_LF2:
  815  00001828  08000004	j	L24_LF2
  816  0000182c  54000000	nop; delay slot nop
  817  00001830          	L33_LF2:
  818  00001830          	L24_LF2:
  819  00001830  8fa20000	lw	r2,0(r29)
  820  00001834  8fa30004	lw	r3,4(r29)
  821  00001838  8fdffff8	lw	r31,-8(r30)
  822  0000183c  001ee820	add	r29,r0,r30
  823  00001840  8fdefffc	lw	r30,-4(r30)
  824  00001844  4be00000	jr	r31
  825  00001848  54000000	nop
  826  0000184c          	.endproc _dstrncmp
  827  0000184c          	.align 2
  828  0000184c          	.proc _dstrlen
  829  0000184c          	.global _dstrlen
  830  0000184c          	_dstrlen:
  831                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  832  0000184c  afbefffc	sw	-4(r29),r30; push fp
  833  00001850  001df020	add	r30,r0,r29; fp = sp
  834  00001854  afbffff8	sw	-8(r29),r31; push ret addr
  835  00001858  2fbd0018	subui	r29,r29,#24; alloc local storage
  836  0000185c  afa20000	sw	0(r29),r2
  837  00001860  20010000	addi	r1,r0,#0
  838  00001864  afc1fff4	sw	-12(r30),r1
  839  00001868          	L37_LF2:
  840  00001868  8fc10000	lw	r1,(r30)
  841  0000186c  20220001	addi	r2,r1,#1
  842  00001870  afc20000	sw	(r30),r2
  843  00001874  90210000	lbu	r1,(r1)
  844  00001878  64220000	snei	r2,r1,#0
  845  0000187c  1440000c	bnez	r2,L39_LF2
  846  00001880  54000000	nop; delay slot nop
  847  00001884  0800001c	j	L38_LF2
  848  00001888  54000000	nop; delay slot nop
  849  0000188c          	L39_LF2:
  850  0000188c  8fc2fff4	lw	r2,-12(r30)
  851  00001890  20410001	addi	r1,r2,#1
  852  00001894  00011020	add	r2,r0,r1
  853  00001898  afc2fff4	sw	-12(r30),r2
  854  0000189c  0bffffc8	j	L37_LF2
  855  000018a0  54000000	nop; delay slot nop
  856  000018a4          	L38_LF2:
  857  000018a4  8fc1fff4	lw	r1,-12(r30)
  858  000018a8  08000004	j	L36_LF2
  859  000018ac  54000000	nop; delay slot nop
  860  000018b0          	L36_LF2:
  861  000018b0  8fa20000	lw	r2,0(r29)
  862  000018b4  8fdffff8	lw	r31,-8(r30)
  863  000018b8  001ee820	add	r29,r0,r30
  864  000018bc  8fdefffc	lw	r30,-4(r30)
  865  000018c0  4be00000	jr	r31
  866  000018c4  54000000	nop
  867  000018c8          	.endproc _dstrlen
  868  000018c8          	.align 2
  869  000018c8          	.proc _dstrstr
  870  000018c8          	.global _dstrstr
  871  000018c8          	_dstrstr:
  872                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  873  000018c8  afbefffc	sw	-4(r29),r30; push fp
  874  000018cc  001df020	add	r30,r0,r29; fp = sp
  875  000018d0  afbffff8	sw	-8(r29),r31; push ret addr
  876  000018d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  877  000018d8  afa20000	sw	0(r29),r2
  878  000018dc  23bdfff8	addi	r29,r29,#-8
  879  000018e0  001d0820	add	r1,r0,r29
  880  000018e4  8fc20004	lw	r2,4(r30)
  881  000018e8  ac220000	sw	(r1),r2
  882  000018ec  0fffff5c	jal	_dstrlen
  883  000018f0  54000000	nop; delay slot nop
  884  000018f4  23bd0008	addi	r29,r29,#8
  885  000018f8  afc1fff4	sw	-12(r30),r1
  886  000018fc          	L41_LF2:
  887  000018fc  8fc10000	lw	r1,(r30)
  888  00001900  90220000	lbu	r2,(r1)
  889  00001904  64410000	snei	r1,r2,#0
  890  00001908  1420000c	bnez	r1,L43_LF2
  891  0000190c  54000000	nop; delay slot nop
  892  00001910  08000060	j	L42_LF2
  893  00001914  54000000	nop; delay slot nop
  894  00001918          	L43_LF2:
  895  00001918  23bdfff0	addi	r29,r29,#-16
  896  0000191c  001d0820	add	r1,r0,r29
  897  00001920  8fc20000	lw	r2,(r30)
  898  00001924  ac220000	sw	(r1),r2
  899  00001928  8fc20004	lw	r2,4(r30)
  900  0000192c  ac220004	sw	4(r1),r2
  901  00001930  8fc2fff4	lw	r2,-12(r30)
  902  00001934  ac220008	sw	8(r1),r2
  903  00001938  0ffffdc0	jal	_dstrncmp
  904  0000193c  54000000	nop; delay slot nop
  905  00001940  23bd0010	addi	r29,r29,#16
  906  00001944  64220000	snei	r2,r1,#0
  907  00001948  14400010	bnez	r2,L44_LF2
  908  0000194c  54000000	nop; delay slot nop
  909  00001950  8fc10000	lw	r1,(r30)
  910  00001954  08000028	j	L40_LF2
  911  00001958  54000000	nop; delay slot nop
  912  0000195c          	L44_LF2:
  913  0000195c  8fc20000	lw	r2,(r30)
  914  00001960  20410001	addi	r1,r2,#1
  915  00001964  00011020	add	r2,r0,r1
  916  00001968  afc20000	sw	(r30),r2
  917  0000196c  0bffff8c	j	L41_LF2
  918  00001970  54000000	nop; delay slot nop
  919  00001974          	L42_LF2:
  920  00001974  20010000	addi	r1,r0,#0
  921  00001978  08000004	j	L40_LF2
  922  0000197c  54000000	nop; delay slot nop
  923  00001980          	L40_LF2:
  924  00001980  8fa20000	lw	r2,0(r29)
  925  00001984  8fdffff8	lw	r31,-8(r30)
  926  00001988  001ee820	add	r29,r0,r30
  927  0000198c  8fdefffc	lw	r30,-4(r30)
  928  00001990  4be00000	jr	r31
  929  00001994  54000000	nop
  930  00001998          	.endproc _dstrstr
  931  00001998          	.align 2
  932  00001998          	.proc _dmindex
  933  00001998          	.global _dmindex
  934  00001998          	_dmindex:
  935                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  936  00001998  afbefffc	sw	-4(r29),r30; push fp
  937  0000199c  001df020	add	r30,r0,r29; fp = sp
  938  000019a0  afbffff8	sw	-8(r29),r31; push ret addr
  939  000019a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  940  000019a8  afa20000	sw	0(r29),r2
  941  000019ac  54000000	nop
  942  000019b0          	L46_LF2:
  943  000019b0  8fc10000	lw	r1,(r30)
  944  000019b4  90220000	lbu	r2,(r1)
  945  000019b8  64410000	snei	r1,r2,#0
  946  000019bc  1420000c	bnez	r1,L48_LF2
  947  000019c0  54000000	nop; delay slot nop
  948  000019c4  08000070	j	L47_LF2
  949  000019c8  54000000	nop; delay slot nop
  950  000019cc          	L48_LF2:
  951  000019cc  8fc10004	lw	r1,4(r30)
  952  000019d0  afc1fff4	sw	-12(r30),r1
  953  000019d4          	L49_LF2:
  954  000019d4  8fc1fff4	lw	r1,-12(r30)
  955  000019d8  90220000	lbu	r2,(r1)
  956  000019dc  64410000	snei	r1,r2,#0
  957  000019e0  1420000c	bnez	r1,L52_LF2
  958  000019e4  54000000	nop; delay slot nop
  959  000019e8  08000044	j	L50_LF2
  960  000019ec  54000000	nop; delay slot nop
  961  000019f0          	L52_LF2:
  962  000019f0  8fc10000	lw	r1,(r30)
  963  000019f4  8fc2fff4	lw	r2,-12(r30)
  964  000019f8  90210000	lbu	r1,(r1)
  965  000019fc  90420000	lbu	r2,(r2)
  966  00001a00  00220828	seq	r1,r1,r2
  967  00001a04  10200010	beqz	r1,L51_LF2
  968  00001a08  54000000	nop; delay slot nop
  969  00001a0c  8fc10000	lw	r1,(r30)
  970  00001a10  08000030	j	L45_LF2
  971  00001a14  54000000	nop; delay slot nop
  972  00001a18          	L53_LF2:
  973  00001a18          	L51_LF2:
  974  00001a18  8fc2fff4	lw	r2,-12(r30)
  975  00001a1c  20410001	addi	r1,r2,#1
  976  00001a20  00011020	add	r2,r0,r1
  977  00001a24  afc2fff4	sw	-12(r30),r2
  978  00001a28  0bffffa8	j	L49_LF2
  979  00001a2c  54000000	nop; delay slot nop
  980  00001a30          	L50_LF2:
  981  00001a30  0bffff7c	j	L46_LF2
  982  00001a34  54000000	nop; delay slot nop
  983  00001a38          	L47_LF2:
  984  00001a38  20010000	addi	r1,r0,#0
  985  00001a3c  08000004	j	L45_LF2
  986  00001a40  54000000	nop; delay slot nop
  987  00001a44          	L45_LF2:
  988  00001a44  8fa20000	lw	r2,0(r29)
  989  00001a48  8fdffff8	lw	r31,-8(r30)
  990  00001a4c  001ee820	add	r29,r0,r30
  991  00001a50  8fdefffc	lw	r30,-4(r30)
  992  00001a54  4be00000	jr	r31
  993  00001a58  54000000	nop
  994  00001a5c          	.endproc _dmindex
  995  00001a5c          	.align 2
  996  00001a5c          	.proc _dindex
  997  00001a5c          	.global _dindex
  998  00001a5c          	_dindex:
  999                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1000  00001a5c  afbefffc	sw	-4(r29),r30; push fp
 1001  00001a60  001df020	add	r30,r0,r29; fp = sp
 1002  00001a64  afbffff8	sw	-8(r29),r31; push ret addr
 1003  00001a68  2fbd0010	subui	r29,r29,#16; alloc local storage
 1004  00001a6c  afa20000	sw	0(r29),r2
 1005  00001a70  54000000	nop
 1006  00001a74          	L55_LF2:
 1007  00001a74  8fc10000	lw	r1,(r30)
 1008  00001a78  90220000	lbu	r2,(r1)
 1009  00001a7c  64410000	snei	r1,r2,#0
 1010  00001a80  1420000c	bnez	r1,L57_LF2
 1011  00001a84  54000000	nop; delay slot nop
 1012  00001a88  08000040	j	L56_LF2
 1013  00001a8c  54000000	nop; delay slot nop
 1014  00001a90          	L57_LF2:
 1015  00001a90  8fc10000	lw	r1,(r30)
 1016  00001a94  90220000	lbu	r2,(r1)
 1017  00001a98  8fc10004	lw	r1,4(r30)
 1018  00001a9c  00411028	seq	r2,r2,r1
 1019  00001aa0  10400010	beqz	r2,L58_LF2
 1020  00001aa4  54000000	nop; delay slot nop
 1021  00001aa8  8fc10000	lw	r1,(r30)
 1022  00001aac  08000028	j	L54_LF2
 1023  00001ab0  54000000	nop; delay slot nop
 1024  00001ab4          	L58_LF2:
 1025  00001ab4  8fc20000	lw	r2,(r30)
 1026  00001ab8  20410001	addi	r1,r2,#1
 1027  00001abc  00011020	add	r2,r0,r1
 1028  00001ac0  afc20000	sw	(r30),r2
 1029  00001ac4  0bffffac	j	L55_LF2
 1030  00001ac8  54000000	nop; delay slot nop
 1031  00001acc          	L56_LF2:
 1032  00001acc  20010000	addi	r1,r0,#0
 1033  00001ad0  08000004	j	L54_LF2
 1034  00001ad4  54000000	nop; delay slot nop
 1035  00001ad8          	L54_LF2:
 1036  00001ad8  8fa20000	lw	r2,0(r29)
 1037  00001adc  8fdffff8	lw	r31,-8(r30)
 1038  00001ae0  001ee820	add	r29,r0,r30
 1039  00001ae4  8fdefffc	lw	r30,-4(r30)
 1040  00001ae8  4be00000	jr	r31
 1041  00001aec  54000000	nop
 1042  00001af0          	.endproc _dindex
 1043  00001af0          	.align 2
 1044  00001af0          	.proc _ditoa
 1045  00001af0          	.global _ditoa
 1046  00001af0          	_ditoa:
 1047                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1048  00001af0  afbefffc	sw	-4(r29),r30; push fp
 1049  00001af4  001df020	add	r30,r0,r29; fp = sp
 1050  00001af8  afbffff8	sw	-8(r29),r31; push ret addr
 1051  00001afc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1052  00001b00  afa20000	sw	0(r29),r2
 1053  00001b04  afa30004	sw	4(r29),r3
 1054  00001b08  8fc10000	lw	r1,(r30)
 1055  00001b0c  68220000	slti	r2,r1,#0
 1056  00001b10  1040002c	beqz	r2,L60_LF2
 1057  00001b14  54000000	nop; delay slot nop
 1058  00001b18  8fc10004	lw	r1,4(r30)
 1059  00001b1c  20220001	addi	r2,r1,#1
 1060  00001b20  afc20004	sw	4(r30),r2
 1061  00001b24  2002002d	addi	r2,r0,(#0x2d)&0xff
 1062  00001b28  a0220000	sb	(r1),r2
 1063  00001b2c  8fc10000	lw	r1,(r30)
 1064  00001b30  00011022	sub	r2,r0,r1
 1065  00001b34  afc20000	sw	(r30),r2
 1066  00001b38  08000118	j	L61_LF2
 1067  00001b3c  54000000	nop; delay slot nop
 1068  00001b40          	L60_LF2:
 1069  00001b40  8fc10000	lw	r1,(r30)
 1070  00001b44  64220000	snei	r2,r1,#0
 1071  00001b48  14400020	bnez	r2,L62_LF2
 1072  00001b4c  54000000	nop; delay slot nop
 1073  00001b50  8fc10004	lw	r1,4(r30)
 1074  00001b54  20220001	addi	r2,r1,#1
 1075  00001b58  afc20004	sw	4(r30),r2
 1076  00001b5c  20020030	addi	r2,r0,(#0x30)&0xff
 1077  00001b60  a0220000	sb	(r1),r2
 1078  00001b64  080000ec	j	L61_LF2
 1079  00001b68  54000000	nop; delay slot nop
 1080  00001b6c          	L62_LF2:
 1081  00001b6c  20010001	addi	r1,r0,#1
 1082  00001b70  afc1fff4	sw	-12(r30),r1
 1083  00001b74          	L64_LF2:
 1084  00001b74  8fc1fff4	lw	r1,-12(r30)
 1085  00001b78  8fc20000	lw	r2,(r30)
 1086  00001b7c  0022082c	sle	r1,r1,r2
 1087  00001b80  1420000c	bnez	r1,L66_LF2
 1088  00001b84  54000000	nop; delay slot nop
 1089  00001b88  08000024	j	L65_LF2
 1090  00001b8c  54000000	nop; delay slot nop
 1091  00001b90          	L67_LF2:
 1092  00001b90          	L66_LF2:
 1093  00001b90  8fc1fff4	lw	r1,-12(r30)
 1094  00001b94  00011820	add	r3,r0,r1
 1095  00001b98  50620002	slli	r2,r3,#0x2
 1096  00001b9c  00411020	add	r2,r2,r1
 1097  00001ba0  50410001	slli	r1,r2,#0x1
 1098  00001ba4  afc1fff4	sw	-12(r30),r1
 1099  00001ba8  0bffffc8	j	L64_LF2
 1100  00001bac  54000000	nop; delay slot nop
 1101  00001bb0          	L65_LF2:
 1102  00001bb0  54000000	nop
 1103  00001bb4          	L68_LF2:
 1104  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1105  00001bb8  2002000a	addi	r2,r0,#10
 1106  00001bbc  00200035	movi2fp	f0,r1
 1107  00001bc0  00400835	movi2fp	f1,r2
 1108  00001bc4  0401000f	div	f0,f0,f1
 1109  00001bc8  00000834	movfp2i	r1,f0
 1110  00001bcc  afc1fff4	sw	-12(r30),r1
 1111  00001bd0  8fc10004	lw	r1,4(r30)
 1112  00001bd4  20220001	addi	r2,r1,#1
 1113  00001bd8  afc20004	sw	4(r30),r2
 1114  00001bdc  8fc20000	lw	r2,(r30)
 1115  00001be0  8fc3fff4	lw	r3,-12(r30)
 1116  00001be4  00400035	movi2fp	f0,r2
 1117  00001be8  00600835	movi2fp	f1,r3
 1118  00001bec  0401000f	div	f0,f0,f1
 1119  00001bf0  00001034	movfp2i	r2,f0
 1120  00001bf4  00021820	add	r3,r0,r2
 1121  00001bf8  20620030	addi	r2,r3,#48
 1122  00001bfc  a0220000	sb	(r1),r2
 1123  00001c00  8fc10000	lw	r1,(r30)
 1124  00001c04  8fc3fff4	lw	r3,-12(r30)
 1125  00001c08  00200035	movi2fp	f0,r1
 1126  00001c0c  00600835	movi2fp	f1,r3
 1127  00001c10  0401000f	div	f0,f0,f1
 1128  00001c14  00001034	movfp2i	r2,f0
 1129  00001c18  8fc3fff4	lw	r3,-12(r30)
 1130  00001c1c  00400035	movi2fp	f0,r2
 1131  00001c20  00600835	movi2fp	f1,r3
 1132  00001c24  0401000e	mult	f0,f0,f1
 1133  00001c28  00001034	movfp2i	r2,f0
 1134  00001c2c  00220822	sub	r1,r1,r2
 1135  00001c30  afc10000	sw	(r30),r1
 1136  00001c34          	L70_LF2:
 1137  00001c34  8fc1fff4	lw	r1,-12(r30)
 1138  00001c38  6c220001	sgti	r2,r1,#1
 1139  00001c3c  1440000c	bnez	r2,L71_LF2
 1140  00001c40  54000000	nop; delay slot nop
 1141  00001c44  0800000c	j	L61_LF2
 1142  00001c48  54000000	nop; delay slot nop
 1143  00001c4c          	L71_LF2:
 1144  00001c4c  0bffff64	j	L68_LF2
 1145  00001c50  54000000	nop; delay slot nop
 1146  00001c54          	L69_LF2:
 1147  00001c54          	L63_LF2:
 1148  00001c54          	L61_LF2:
 1149  00001c54  8fc10004	lw	r1,4(r30)
 1150  00001c58  20020000	addi	r2,r0,(#0x0)&0xff
 1151  00001c5c  a0220000	sb	(r1),r2
 1152  00001c60          	L59_LF2:
 1153  00001c60  8fa20000	lw	r2,0(r29)
 1154  00001c64  8fa30004	lw	r3,4(r29)
 1155  00001c68  8fdffff8	lw	r31,-8(r30)
 1156  00001c6c  001ee820	add	r29,r0,r30
 1157  00001c70  8fdefffc	lw	r30,-4(r30)
 1158  00001c74  4be00000	jr	r31
 1159  00001c78  54000000	nop
 1160  00001c7c          	.endproc _ditoa
 1161  00001c7c          	.align 2
 1162  00001c7c          	.proc _dstrtol
 1163  00001c7c          	.global _dstrtol
 1164  00001c7c          	_dstrtol:
 1165                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1166  00001c7c  afbefffc	sw	-4(r29),r30; push fp
 1167  00001c80  001df020	add	r30,r0,r29; fp = sp
 1168  00001c84  afbffff8	sw	-8(r29),r31; push ret addr
 1169  00001c88  2fbd0020	subui	r29,r29,#32; alloc local storage
 1170  00001c8c  afa20000	sw	0(r29),r2
 1171  00001c90  20010000	addi	r1,r0,#0
 1172  00001c94  afc1fff4	sw	-12(r30),r1
 1173  00001c98          	L73_LF2:
 1174  00001c98  8fc10000	lw	r1,(r30)
 1175  00001c9c  90220000	lbu	r2,(r1)
 1176  00001ca0  60410020	seqi	r1,r2,#32
 1177  00001ca4  14200034	bnez	r1,L75_LF2
 1178  00001ca8  54000000	nop; delay slot nop
 1179  00001cac  8fc10000	lw	r1,(r30)
 1180  00001cb0  90220000	lbu	r2,(r1)
 1181  00001cb4  60410009	seqi	r1,r2,#9
 1182  00001cb8  14200020	bnez	r1,L75_LF2
 1183  00001cbc  54000000	nop; delay slot nop
 1184  00001cc0  8fc10000	lw	r1,(r30)
 1185  00001cc4  90220000	lbu	r2,(r1)
 1186  00001cc8  6041000a	seqi	r1,r2,#10
 1187  00001ccc  1420000c	bnez	r1,L75_LF2
 1188  00001cd0  54000000	nop; delay slot nop
 1189  00001cd4  0800001c	j	L74_LF2
 1190  00001cd8  54000000	nop; delay slot nop
 1191  00001cdc          	L75_LF2:
 1192  00001cdc  8fc20000	lw	r2,(r30)
 1193  00001ce0  20410001	addi	r1,r2,#1
 1194  00001ce4  00011020	add	r2,r0,r1
 1195  00001ce8  afc20000	sw	(r30),r2
 1196  00001cec  0bffffa8	j	L73_LF2
 1197  00001cf0  54000000	nop; delay slot nop
 1198  00001cf4          	L74_LF2:
 1199  00001cf4  8fc10004	lw	r1,4(r30)
 1200  00001cf8  64220000	snei	r2,r1,#0
 1201  00001cfc  10400010	beqz	r2,L76_LF2
 1202  00001d00  54000000	nop; delay slot nop
 1203  00001d04  8fc10004	lw	r1,4(r30)
 1204  00001d08  8fc20000	lw	r2,(r30)
 1205  00001d0c  ac220000	sw	(r1),r2
 1206  00001d10          	L76_LF2:
 1207  00001d10  8fc10000	lw	r1,(r30)
 1208  00001d14  90220000	lbu	r2,(r1)
 1209  00001d18  64410000	snei	r1,r2,#0
 1210  00001d1c  14200010	bnez	r1,L77_LF2
 1211  00001d20  54000000	nop; delay slot nop
 1212  00001d24  8fc1fff4	lw	r1,-12(r30)
 1213  00001d28  08000294	j	L72_LF2
 1214  00001d2c  54000000	nop; delay slot nop
 1215  00001d30          	L77_LF2:
 1216  00001d30  8fc10000	lw	r1,(r30)
 1217  00001d34  90220000	lbu	r2,(r1)
 1218  00001d38  6041002d	seqi	r1,r2,#45
 1219  00001d3c  10200024	beqz	r1,L78_LF2
 1220  00001d40  54000000	nop; delay slot nop
 1221  00001d44  2001ffff	addi	r1,r0,#-1
 1222  00001d48  afc1ffec	sw	-20(r30),r1
 1223  00001d4c  8fc20000	lw	r2,(r30)
 1224  00001d50  20410001	addi	r1,r2,#1
 1225  00001d54  00011020	add	r2,r0,r1
 1226  00001d58  afc20000	sw	(r30),r2
 1227  00001d5c  0800000c	j	L79_LF2
 1228  00001d60  54000000	nop; delay slot nop
 1229  00001d64          	L78_LF2:
 1230  00001d64  20010001	addi	r1,r0,#1
 1231  00001d68  afc1ffec	sw	-20(r30),r1
 1232  00001d6c          	L79_LF2:
 1233  00001d6c  8fc10008	lw	r1,8(r30)
 1234  00001d70  64220000	snei	r2,r1,#0
 1235  00001d74  14400090	bnez	r2,L80_LF2
 1236  00001d78  54000000	nop; delay slot nop
 1237  00001d7c  8fc10000	lw	r1,(r30)
 1238  00001d80  90220000	lbu	r2,(r1)
 1239  00001d84  60410030	seqi	r1,r2,#48
 1240  00001d88  10200074	beqz	r1,L81_LF2
 1241  00001d8c  54000000	nop; delay slot nop
 1242  00001d90  8fc20000	lw	r2,(r30)
 1243  00001d94  20410001	addi	r1,r2,#1
 1244  00001d98  00011020	add	r2,r0,r1
 1245  00001d9c  afc20000	sw	(r30),r2
 1246  00001da0  8fc10000	lw	r1,(r30)
 1247  00001da4  90220000	lbu	r2,(r1)
 1248  00001da8  60410078	seqi	r1,r2,#120
 1249  00001dac  14200020	bnez	r1,L83_LF2
 1250  00001db0  54000000	nop; delay slot nop
 1251  00001db4  8fc10000	lw	r1,(r30)
 1252  00001db8  90220000	lbu	r2,(r1)
 1253  00001dbc  60410058	seqi	r1,r2,#88
 1254  00001dc0  1420000c	bnez	r1,L83_LF2
 1255  00001dc4  54000000	nop; delay slot nop
 1256  00001dc8  08000024	j	L82_LF2
 1257  00001dcc  54000000	nop; delay slot nop
 1258  00001dd0          	L83_LF2:
 1259  00001dd0  20010010	addi	r1,r0,#16
 1260  00001dd4  afc10008	sw	8(r30),r1
 1261  00001dd8  8fc20000	lw	r2,(r30)
 1262  00001ddc  20410001	addi	r1,r2,#1
 1263  00001de0  00011020	add	r2,r0,r1
 1264  00001de4  afc20000	sw	(r30),r2
 1265  00001de8  0800000c	j	L84_LF2
 1266  00001dec  54000000	nop; delay slot nop
 1267  00001df0          	L82_LF2:
 1268  00001df0  20010008	addi	r1,r0,#8
 1269  00001df4  afc10008	sw	8(r30),r1
 1270  00001df8          	L84_LF2:
 1271  00001df8  0800000c	j	L80_LF2
 1272  00001dfc  54000000	nop; delay slot nop
 1273  00001e00          	L81_LF2:
 1274  00001e00  2001000a	addi	r1,r0,#10
 1275  00001e04  afc10008	sw	8(r30),r1
 1276  00001e08          	L85_LF2:
 1277  00001e08          	L80_LF2:
 1278  00001e08  8fc10008	lw	r1,8(r30)
 1279  00001e0c  70220000	slei	r2,r1,#0
 1280  00001e10  1440001c	bnez	r2,L87_LF2
 1281  00001e14  54000000	nop; delay slot nop
 1282  00001e18  8fc10008	lw	r1,8(r30)
 1283  00001e1c  6c220010	sgti	r2,r1,#16
 1284  00001e20  1440000c	bnez	r2,L87_LF2
 1285  00001e24  54000000	nop; delay slot nop
 1286  00001e28  08000010	j	L86_LF2
 1287  00001e2c  54000000	nop; delay slot nop
 1288  00001e30          	L87_LF2:
 1289  00001e30  8fc1fff4	lw	r1,-12(r30)
 1290  00001e34  08000188	j	L72_LF2
 1291  00001e38  54000000	nop; delay slot nop
 1292  00001e3c          	L86_LF2:
 1293  00001e3c  54000000	nop
 1294  00001e40          	L88_LF2:
 1295  00001e40  8fc10000	lw	r1,(r30)
 1296  00001e44  90220000	lbu	r2,(r1)
 1297  00001e48  6c41002f	sgtui	r1,r2,#47
 1298  00001e4c  10200030	beqz	r1,L91_LF2
 1299  00001e50  54000000	nop; delay slot nop
 1300  00001e54  8fc10000	lw	r1,(r30)
 1301  00001e58  90220000	lbu	r2,(r1)
 1302  00001e5c  70410039	sleui	r1,r2,#57
 1303  00001e60  1020001c	beqz	r1,L91_LF2
 1304  00001e64  54000000	nop; delay slot nop
 1305  00001e68  8fc10000	lw	r1,(r30)
 1306  00001e6c  90220000	lbu	r2,(r1)
 1307  00001e70  2041ffd0	addi	r1,r2,#-48
 1308  00001e74  afc1fff0	sw	-16(r30),r1
 1309  00001e78  0800008c	j	L92_LF2
 1310  00001e7c  54000000	nop; delay slot nop
 1311  00001e80          	L91_LF2:
 1312  00001e80  8fc10000	lw	r1,(r30)
 1313  00001e84  90220000	lbu	r2,(r1)
 1314  00001e88  6c410060	sgtui	r1,r2,#96
 1315  00001e8c  10200030	beqz	r1,L93_LF2
 1316  00001e90  54000000	nop; delay slot nop
 1317  00001e94  8fc10000	lw	r1,(r30)
 1318  00001e98  90220000	lbu	r2,(r1)
 1319  00001e9c  7041007a	sleui	r1,r2,#122
 1320  00001ea0  1020001c	beqz	r1,L93_LF2
 1321  00001ea4  54000000	nop; delay slot nop
 1322  00001ea8  8fc10000	lw	r1,(r30)
 1323  00001eac  90220000	lbu	r2,(r1)
 1324  00001eb0  2041ffa9	addi	r1,r2,#-87
 1325  00001eb4  afc1fff0	sw	-16(r30),r1
 1326  00001eb8  0800004c	j	L92_LF2
 1327  00001ebc  54000000	nop; delay slot nop
 1328  00001ec0          	L93_LF2:
 1329  00001ec0  8fc10000	lw	r1,(r30)
 1330  00001ec4  90220000	lbu	r2,(r1)
 1331  00001ec8  6c410040	sgtui	r1,r2,#64
 1332  00001ecc  10200030	beqz	r1,L95_LF2
 1333  00001ed0  54000000	nop; delay slot nop
 1334  00001ed4  8fc10000	lw	r1,(r30)
 1335  00001ed8  90220000	lbu	r2,(r1)
 1336  00001edc  7041005a	sleui	r1,r2,#90
 1337  00001ee0  1020001c	beqz	r1,L95_LF2
 1338  00001ee4  54000000	nop; delay slot nop
 1339  00001ee8  8fc10000	lw	r1,(r30)
 1340  00001eec  90220000	lbu	r2,(r1)
 1341  00001ef0  2041ffc9	addi	r1,r2,#-55
 1342  00001ef4  afc1fff0	sw	-16(r30),r1
 1343  00001ef8  0800000c	j	L92_LF2
 1344  00001efc  54000000	nop; delay slot nop
 1345  00001f00          	L95_LF2:
 1346  00001f00  200103e8	addi	r1,r0,#1000
 1347  00001f04  afc1fff0	sw	-16(r30),r1
 1348  00001f08          	L96_LF2:
 1349  00001f08          	L94_LF2:
 1350  00001f08          	L92_LF2:
 1351  00001f08  8fc1fff0	lw	r1,-16(r30)
 1352  00001f0c  8fc20008	lw	r2,8(r30)
 1353  00001f10  0022082a	slt	r1,r1,r2
 1354  00001f14  10200040	beqz	r1,L90_LF2
 1355  00001f18  54000000	nop; delay slot nop
 1356  00001f1c  8fc1fff4	lw	r1,-12(r30)
 1357  00001f20  8fc20008	lw	r2,8(r30)
 1358  00001f24  00200035	movi2fp	f0,r1
 1359  00001f28  00400835	movi2fp	f1,r2
 1360  00001f2c  0401000e	mult	f0,f0,f1
 1361  00001f30  00000834	movfp2i	r1,f0
 1362  00001f34  afc1fff4	sw	-12(r30),r1
 1363  00001f38  8fc1fff4	lw	r1,-12(r30)
 1364  00001f3c  8fc2fff0	lw	r2,-16(r30)
 1365  00001f40  00220820	add	r1,r1,r2
 1366  00001f44  afc1fff4	sw	-12(r30),r1
 1367  00001f48  8fc20000	lw	r2,(r30)
 1368  00001f4c  20410001	addi	r1,r2,#1
 1369  00001f50  00011020	add	r2,r0,r1
 1370  00001f54  afc20000	sw	(r30),r2
 1371  00001f58          	L97_LF2:
 1372  00001f58          	L90_LF2:
 1373  00001f58  8fc1fff0	lw	r1,-16(r30)
 1374  00001f5c  8fc20008	lw	r2,8(r30)
 1375  00001f60  0022082a	slt	r1,r1,r2
 1376  00001f64  1420000c	bnez	r1,L98_LF2
 1377  00001f68  54000000	nop; delay slot nop
 1378  00001f6c  0800000c	j	L89_LF2
 1379  00001f70  54000000	nop; delay slot nop
 1380  00001f74          	L98_LF2:
 1381  00001f74  0bfffec8	j	L88_LF2
 1382  00001f78  54000000	nop; delay slot nop
 1383  00001f7c          	L89_LF2:
 1384  00001f7c  8fc10004	lw	r1,4(r30)
 1385  00001f80  64220000	snei	r2,r1,#0
 1386  00001f84  10400010	beqz	r2,L99_LF2
 1387  00001f88  54000000	nop; delay slot nop
 1388  00001f8c  8fc10004	lw	r1,4(r30)
 1389  00001f90  8fc20000	lw	r2,(r30)
 1390  00001f94  ac220000	sw	(r1),r2
 1391  00001f98          	L99_LF2:
 1392  00001f98  8fc1fff4	lw	r1,-12(r30)
 1393  00001f9c  8fc2ffec	lw	r2,-20(r30)
 1394  00001fa0  00200035	movi2fp	f0,r1
 1395  00001fa4  00400835	movi2fp	f1,r2
 1396  00001fa8  0401000e	mult	f0,f0,f1
 1397  00001fac  00000834	movfp2i	r1,f0
 1398  00001fb0  afc1fff4	sw	-12(r30),r1
 1399  00001fb4  8fc1fff4	lw	r1,-12(r30)
 1400  00001fb8  08000004	j	L72_LF2
 1401  00001fbc  54000000	nop; delay slot nop
 1402  00001fc0          	L72_LF2:
 1403  00001fc0  8fa20000	lw	r2,0(r29)
 1404  00001fc4  8fdffff8	lw	r31,-8(r30)
 1405  00001fc8  001ee820	add	r29,r0,r30
 1406  00001fcc  8fdefffc	lw	r30,-4(r30)
 1407  00001fd0  4be00000	jr	r31
 1408  00001fd4  54000000	nop
 1409  00001fd8          	.endproc _dstrtol
 1410  00001fd8          	.align 2
 1411  00001fd8          	.proc _bcopy
 1412  00001fd8          	.global _bcopy
 1413  00001fd8          	_bcopy:
 1414                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1415  00001fd8  afbefffc	sw	-4(r29),r30; push fp
 1416  00001fdc  001df020	add	r30,r0,r29; fp = sp
 1417  00001fe0  afbffff8	sw	-8(r29),r31; push ret addr
 1418  00001fe4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1419  00001fe8  afa20000	sw	0(r29),r2
 1420  00001fec  afa30004	sw	4(r29),r3
 1421  00001ff0  54000000	nop
 1422  00001ff4          	L101_LF2:
 1423  00001ff4  8fc10008	lw	r1,8(r30)
 1424  00001ff8  2022ffff	addi	r2,r1,#-1
 1425  00001ffc  afc20008	sw	8(r30),r2
 1426  00002000  6c210000	sgti	r1,r1,#0
 1427  00002004  1420000c	bnez	r1,L103_LF2
 1428  00002008  54000000	nop; delay slot nop
 1429  0000200c  0800002c	j	L102_LF2
 1430  00002010  54000000	nop; delay slot nop
 1431  00002014          	L103_LF2:
 1432  00002014  8fc10004	lw	r1,4(r30)
 1433  00002018  20220001	addi	r2,r1,#1
 1434  0000201c  afc20004	sw	4(r30),r2
 1435  00002020  8fc20000	lw	r2,(r30)
 1436  00002024  20430001	addi	r3,r2,#1
 1437  00002028  afc30000	sw	(r30),r3
 1438  0000202c  80420000	lb	r2,(r2)
 1439  00002030  a0220000	sb	(r1),r2
 1440  00002034  0bffffbc	j	L101_LF2
 1441  00002038  54000000	nop; delay slot nop
 1442  0000203c          	L102_LF2:
 1443  0000203c          	L100_LF2:
 1444  0000203c  8fa20000	lw	r2,0(r29)
 1445  00002040  8fa30004	lw	r3,4(r29)
 1446  00002044  8fdffff8	lw	r31,-8(r30)
 1447  00002048  001ee820	add	r29,r0,r30
 1448  0000204c  8fdefffc	lw	r30,-4(r30)
 1449  00002050  4be00000	jr	r31
 1450  00002054  54000000	nop
 1451  00002058          	.endproc _bcopy
 1452  00002058          	.align 2
 1453  00002058          	.proc _bzero
 1454  00002058          	.global _bzero
 1455  00002058          	_bzero:
 1456                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1457  00002058  afbefffc	sw	-4(r29),r30; push fp
 1458  0000205c  001df020	add	r30,r0,r29; fp = sp
 1459  00002060  afbffff8	sw	-8(r29),r31; push ret addr
 1460  00002064  2fbd0010	subui	r29,r29,#16; alloc local storage
 1461  00002068  afa20000	sw	0(r29),r2
 1462  0000206c  54000000	nop
 1463  00002070          	L105_LF2:
 1464  00002070  8fc10004	lw	r1,4(r30)
 1465  00002074  2022ffff	addi	r2,r1,#-1
 1466  00002078  afc20004	sw	4(r30),r2
 1467  0000207c  6c210000	sgti	r1,r1,#0
 1468  00002080  1420000c	bnez	r1,L107_LF2
 1469  00002084  54000000	nop; delay slot nop
 1470  00002088  08000020	j	L106_LF2
 1471  0000208c  54000000	nop; delay slot nop
 1472  00002090          	L107_LF2:
 1473  00002090  8fc10000	lw	r1,(r30)
 1474  00002094  20220001	addi	r2,r1,#1
 1475  00002098  afc20000	sw	(r30),r2
 1476  0000209c  20020000	addi	r2,r0,(#0x0)&0xff
 1477  000020a0  a0220000	sb	(r1),r2
 1478  000020a4  0bffffc8	j	L105_LF2
 1479  000020a8  54000000	nop; delay slot nop
 1480  000020ac          	L106_LF2:
 1481  000020ac          	L104_LF2:
 1482  000020ac  8fa20000	lw	r2,0(r29)
 1483  000020b0  8fdffff8	lw	r31,-8(r30)
 1484  000020b4  001ee820	add	r29,r0,r30
 1485  000020b8  8fdefffc	lw	r30,-4(r30)
 1486  000020bc  4be00000	jr	r31
 1487  000020c0  54000000	nop
 1488  000020c4          	.endproc _bzero
 1489  000020c4          	.align 2
 1490  000020c4          	.proc _min
 1491  000020c4          	.global _min
 1492  000020c4          	_min:
 1493                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1494  000020c4  afbefffc	sw	-4(r29),r30; push fp
 1495  000020c8  001df020	add	r30,r0,r29; fp = sp
 1496  000020cc  afbffff8	sw	-8(r29),r31; push ret addr
 1497  000020d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1498  000020d4  afa20000	sw	0(r29),r2
 1499  000020d8  afa30004	sw	4(r29),r3
 1500  000020dc  8fc10000	lw	r1,(r30)
 1501  000020e0  8fc20004	lw	r2,4(r30)
 1502  000020e4  0022182c	sle	r3,r1,r2
 1503  000020e8  14600008	bnez	r3,L109_LF2
 1504  000020ec  54000000	nop; delay slot nop
 1505  000020f0  8fc10004	lw	r1,4(r30)
 1506  000020f4          	L109_LF2:
 1507  000020f4  08000004	j	L108_LF2
 1508  000020f8  54000000	nop; delay slot nop
 1509  000020fc          	L108_LF2:
 1510  000020fc  8fa20000	lw	r2,0(r29)
 1511  00002100  8fa30004	lw	r3,4(r29)
 1512  00002104  8fdffff8	lw	r31,-8(r30)
 1513  00002108  001ee820	add	r29,r0,r30
 1514  0000210c  8fdefffc	lw	r30,-4(r30)
 1515  00002110  4be00000	jr	r31
 1516  00002114  54000000	nop
 1517  00002118          	.endproc _min
 1518  00002118          	.align 2
 1519  00002118          	.proc _max
 1520  00002118          	.global _max
 1521  00002118          	_max:
 1522                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1523  00002118  afbefffc	sw	-4(r29),r30; push fp
 1524  0000211c  001df020	add	r30,r0,r29; fp = sp
 1525  00002120  afbffff8	sw	-8(r29),r31; push ret addr
 1526  00002124  2fbd0010	subui	r29,r29,#16; alloc local storage
 1527  00002128  afa20000	sw	0(r29),r2
 1528  0000212c  afa30004	sw	4(r29),r3
 1529  00002130  8fc10000	lw	r1,(r30)
 1530  00002134  8fc20004	lw	r2,4(r30)
 1531  00002138  0022182d	sge	r3,r1,r2
 1532  0000213c  14600008	bnez	r3,L111_LF2
 1533  00002140  54000000	nop; delay slot nop
 1534  00002144  8fc10004	lw	r1,4(r30)
 1535  00002148          	L111_LF2:
 1536  00002148  08000004	j	L110_LF2
 1537  0000214c  54000000	nop; delay slot nop
 1538  00002150          	L110_LF2:
 1539  00002150  8fa20000	lw	r2,0(r29)
 1540  00002154  8fa30004	lw	r3,4(r29)
 1541  00002158  8fdffff8	lw	r31,-8(r30)
 1542  0000215c  001ee820	add	r29,r0,r30
 1543  00002160  8fdefffc	lw	r30,-4(r30)
 1544  00002164  4be00000	jr	r31
 1545  00002168  54000000	nop
 1546  0000216c          	.endproc _max
 1547                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1548                      ;;;
 1549                      ;;; Most of the traps are called in files from libtraps.
 1552  0000216c          	.align 2
 1553  0000216c          	.proc _exit
 1554  0000216c          	.global _exit
 1555  0000216c          	_exit:
 1556  0000216c  44000300	trap	#0x300
 1557  00002170  4be00000	jr	r31
 1558  00002174  54000000	nop
 1559  00002178          	.endproc _exit
 1561                      ; for the benefit of gcc.
 1562  00002178          	.proc ___main
 1563  00002178          	.global ___main
 1564  00002178          	___main:
 1565  00002178  4be00000	jr	r31
 1566  0000217c  54000000	nop
 1567  00002180          	.endproc ___main
 1568  00002180          	.text
 1569  00002180          	.global _etext
 1570  00002180          	_etext:
 1571  00002180          	.align 3
 1572  00002180          	.data
 1573  000030a2          	.global _edata
 1574  000030a2          	_edata:
