; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
_freemap_size:
	.word 16
	.align 2
_negativeone:
	.word -1
.text
	.align 2
.proc _MemoryGetSize
.global _MemoryGetSize
_MemoryGetSize:
;  Function 'MemoryGetSize'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lhi	r2,#-1
	addui	r2,r2,#0
	lw	r1,(r2)
	j	L14
	nop	; delay slot nop
L14:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryGetSize
	.align 2
.proc _MemoryModuleInit
.global _MemoryModuleInit
_MemoryModuleInit:
;  Function 'MemoryModuleInit'; 16 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lhi	r1,((_lastosaddress)>>16)&0xffff
	addui	r1,r1,(_lastosaddress)&0xffff
	lw	r2,(r1)
	srai	r1,r2,#0xc
	sw	-24(r30),r1
	lw	r1,-24(r30)
	andi	r2,r1,#4095
	snei	r1,r2,#0
	beqz	r1,L16
	nop	; delay slot nop
	lw	r2,-24(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-24(r30),r2
L16:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L17:
	lhi	r1,((_freemap_size)>>16)&0xffff
	addui	r1,r1,(_freemap_size)&0xffff
	lw	r2,-12(r30)
	lw	r1,(r1)
	sltu	r2,r2,r1
	bnez	r2,L20
	nop	; delay slot nop
	j	L18
	nop	; delay slot nop
L20:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r2,r1,r31
	addi	r1,r0,#0
	sw	(r2),r1
	addi	r1,r0,#1
	sw	-20(r30),r1
	addi	r1,r0,#0
	sw	-16(r30),r1
L21:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L24
	nop	; delay slot nop
	j	L19
	nop	; delay slot nop
L24:
	lw	r1,-24(r30)
	snei	r2,r1,#0
	bnez	r2,L25
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r1,r2,r31
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r3,r2,r31
	lw	r2,(r3)
	lw	r3,-20(r30)
	or	r2,r2,r3
	sw	(r1),r2
	lw	r1,-20(r30)
	slli	r2,r1,#0x1
	sw	-20(r30),r2
	j	L23
	nop	; delay slot nop
L25:
	lw	r1,-24(r30)
	addi	r2,r1,#-1
	sw	-24(r30),r2
	lw	r1,-20(r30)
	slli	r2,r1,#0x1
	sw	-20(r30),r2
L26:
L23:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L21
	nop	; delay slot nop
L22:
L19:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L17
	nop	; delay slot nop
L18:
L15:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryModuleInit
	.align 2
.proc _MemoryTranslateUserToSystem
.global _MemoryTranslateUserToSystem
_MemoryTranslateUserToSystem:
;  Function 'MemoryTranslateUserToSystem'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,4(r30)
	lhi	r2,#15
	addui	r2,r2,#65535
	sgtu	r1,r1,r2
	beqz	r1,L28
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_ProcessKill
	nop	; delay slot nop
L28:
	lw	r1,4(r30)
	srli	r2,r1,#0xc
	sw	-16(r30),r2
	lw	r1,4(r30)
	andi	r2,r1,#4095
	sw	-12(r30),r2
	lw	r1,(r30)
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#96
	lw	r1,(r2)
	sw	-20(r30),r1
	lw	r2,-20(r30)
	andi	r1,r2,#1
	snei	r2,r1,#0
	bnez	r2,L29
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	jal	_MemoryPageFaultHandler
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L27
	nop	; delay slot nop
L29:
	lw	r1,-20(r30)
	addi	r4,r0,#-8
	and	r2,r1,r4
	sw	-24(r30),r2
	lw	r1,-24(r30)
	lw	r2,-12(r30)
	or	r1,r1,r2
	sw	-24(r30),r1
	lw	r1,-24(r30)
	j	L27
	nop	; delay slot nop
L27:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryTranslateUserToSystem
	.align 2
.proc _MemoryMoveBetweenSpaces
.global _MemoryMoveBetweenSpaces
_MemoryMoveBetweenSpaces:
;  Function 'MemoryMoveBetweenSpaces'; 16 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
L31:
	lw	r1,12(r30)
	sgti	r2,r1,#0
	bnez	r2,L33
	nop	; delay slot nop
	j	L32
	nop	; delay slot nop
L33:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	jal	_MemoryTranslateUserToSystem
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	snei	r2,r1,#0
	bnez	r2,L34
	nop	; delay slot nop
	j	L32
	nop	; delay slot nop
L34:
	lw	r2,-12(r30)
	andi	r1,r2,#4095
	addi	r2,r0,#4096
	sub	r1,r2,r1
	sw	-20(r30),r1
	lw	r1,-20(r30)
	lw	r2,12(r30)
	sgt	r1,r1,r2
	beqz	r1,L35
	nop	; delay slot nop
	lw	r1,12(r30)
	sw	-20(r30),r1
L35:
	lw	r1,16(r30)
	sgei	r2,r1,#0
	beqz	r2,L36
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	j	L37
	nop	; delay slot nop
L36:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
L37:
	lw	r1,12(r30)
	lw	r2,-20(r30)
	sub	r1,r1,r2
	sw	12(r30),r1
	lw	r1,-16(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	-16(r30),r1
	lw	r1,4(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	4(r30),r1
	lw	r1,8(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	8(r30),r1
	j	L31
	nop	; delay slot nop
L32:
	lw	r1,-16(r30)
	j	L30
	nop	; delay slot nop
L30:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryMoveBetweenSpaces
	.align 2
.proc _MemoryCopySystemToUser
.global _MemoryCopySystemToUser
_MemoryCopySystemToUser:
;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,8(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L38
	nop	; delay slot nop
L38:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopySystemToUser
	.align 2
.proc _MemoryCopyUserToSystem
.global _MemoryCopyUserToSystem
_MemoryCopyUserToSystem:
;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#-1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L39
	nop	; delay slot nop
L39:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopyUserToSystem
.data
	.align 2
LC0:
	.ascii "ERROR: Memory cannot be allocated\n\000"
	.align 2
LC1:
	.ascii "Segmentation fault (core dumped)\n\000"
.text
	.align 2
.proc _MemoryPageFaultHandler
.global _MemoryPageFaultHandler
_MemoryPageFaultHandler:
;  Function 'MemoryPageFaultHandler'; 16 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	lw	r2,(r1)
	addi	r1,r2,#308
	lw	r2,(r1)
	sw	-12(r30),r2
	lw	r1,(r30)
	lw	r2,(r1)
	addi	r1,r2,#156
	lw	r2,(r1)
	addi	r5,r0,#-8
	and	r1,r2,r5
	sw	-16(r30),r1
	lw	r1,-12(r30)
	srli	r2,r1,#0xc
	sw	-24(r30),r2
	lw	r1,-12(r30)
	lw	r2,-16(r30)
	sgeu	r1,r1,r2
	beqz	r1,L41
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_MemoryAllocPage
	nop	; delay slot nop
	sw	-20(r30),r1
	lw	r1,-20(r30)
	seqi	r2,r1,#-1
	beqz	r2,L42
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L42:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_MemorySetupPte
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,(r30)
	lw	r3,-24(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#96
	sw	(r3),r1
	addi	r1,r0,#1
	j	L40
	nop	; delay slot nop
	j	L43
	nop	; delay slot nop
L41:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_ProcessKill
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L40
	nop	; delay slot nop
L43:
L40:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryPageFaultHandler
	.align 2
.proc _MemoryAllocPage
.global _MemoryAllocPage
_MemoryAllocPage:
;  Function 'MemoryAllocPage'; 24 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L45:
	lhi	r1,((_freemap_size)>>16)&0xffff
	addui	r1,r1,(_freemap_size)&0xffff
	lw	r2,-12(r30)
	lw	r1,(r1)
	sltu	r2,r2,r1
	bnez	r2,L48
	nop	; delay slot nop
	j	L46
	nop	; delay slot nop
L48:
	addi	r1,r0,#1
	sw	-20(r30),r1
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r2,r1,r31
	lw	r1,(r2)
	snei	r2,r1,#0
	beqz	r2,L47
	nop	; delay slot nop
	addi	r1,r0,#0
	sw	-16(r30),r1
L50:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L53
	nop	; delay slot nop
	j	L47
	nop	; delay slot nop
L53:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r2,r1,r31
	lw	r1,(r2)
	lw	r2,-20(r30)
	and	r1,r1,r2
	sw	-28(r30),r1
	lw	r1,-28(r30)
	snei	r2,r1,#0
	beqz	r2,L54
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r1,r2,r31
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r3,r2,r31
	lw	r2,(r3)
	lw	r3,-20(r30)
	xor	r2,r2,r3
	sw	(r1),r2
	lw	r1,-12(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x5
	lw	r2,-16(r30)
	add	r1,r1,r2
	sw	-24(r30),r1
	lw	r1,-24(r30)
	j	L44
	nop	; delay slot nop
	j	L55
	nop	; delay slot nop
L54:
	lw	r1,-20(r30)
	slli	r2,r1,#0x1
	sw	-20(r30),r2
L55:
L52:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L50
	nop	; delay slot nop
L51:
L49:
L47:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L45
	nop	; delay slot nop
L46:
	addi	r1,r0,#-1
	j	L44
	nop	; delay slot nop
L44:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryAllocPage
	.align 2
.proc _MemorySetupPte
.global _MemorySetupPte
_MemorySetupPte:
;  Function 'MemorySetupPte'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	slli	r2,r1,#0xc
	sw	-12(r30),r2
	lw	r1,-12(r30)
	ori	r2,r1,#1
	sw	-12(r30),r2
	lw	r1,-12(r30)
	j	L56
	nop	; delay slot nop
L56:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemorySetupPte
	.align 2
.proc _MemoryFreePage
.global _MemoryFreePage
_MemoryFreePage:
;  Function 'MemoryFreePage'; 16 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	addi	r31,r0,#-8
	and	r2,r1,r31
	sw	(r30),r2
	lw	r1,(r30)
	srli	r2,r1,#0xc
	sw	(r30),r2
	lw	r2,(r30)
	srli	r1,r2,#0x5
	sw	-12(r30),r1
	lw	r1,(r30)
	andi	r2,r1,#31
	sw	-16(r30),r2
	addi	r1,r0,#1
	lw	r2,-16(r30)
	sll	r1,r1,r2
	sw	-20(r30),r1
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r1,r2,r31
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r3,r2,r31
	lw	r2,(r3)
	lw	r3,-20(r30)
	xor	r2,r2,r3
	sw	(r1),r2
	lhi	r2,((_nfreepages)>>16)&0xffff
	addui	r2,r2,(_nfreepages)&0xffff
	lhi	r1,((_nfreepages)>>16)&0xffff
	addui	r1,r1,(_nfreepages)&0xffff
	lhi	r2,((_nfreepages)>>16)&0xffff
	addui	r2,r2,(_nfreepages)&0xffff
	lw	r3,(r2)
	addi	r2,r3,#1
	add	r3,r0,r2
	sw	(r1),r3
	j	L57
	nop	; delay slot nop
L57:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreePage
	.align 2
.proc _get_Buddy_Index
.global _get_Buddy_Index
_get_Buddy_Index:
;  Function 'get_Buddy_Index'; 16 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	sw	-12(r30),r1
	addi	r1,r0,#0
	sw	-20(r30),r1
L59:
	lw	r1,-20(r30)
	lw	r2,4(r30)
	slt	r1,r1,r2
	bnez	r1,L62
	nop	; delay slot nop
	j	L60
	nop	; delay slot nop
L62:
	lw	r1,-12(r30)
	srai	r2,r1,#0x1f
	srli	r3,r2,#0x1f
	add	r2,r1,r3
	srai	r1,r2,#0x1
	sw	-12(r30),r1
L61:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L59
	nop	; delay slot nop
L60:
	lw	r1,-12(r30)
	andi	r2,r1,#1
	snei	r1,r2,#0
	bnez	r1,L63
	nop	; delay slot nop
	addi	r1,r0,#1
	lw	r2,4(r30)
	sll	r1,r1,r2
	lw	r2,(r30)
	add	r1,r2,r1
	sw	-16(r30),r1
	j	L64
	nop	; delay slot nop
L63:
	addi	r1,r0,#1
	lw	r2,4(r30)
	sll	r1,r1,r2
	lw	r2,(r30)
	sub	r1,r2,r1
	sw	-16(r30),r1
L64:
	lw	r1,-16(r30)
	j	L58
	nop	; delay slot nop
L58:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _get_Buddy_Index
.data
	.align 2
LC2:
	.ascii "Coalesced buddy nodes \000"
	.align 2
LC3:
	.ascii "(order = %d, addr = %d, size = %d) & (order = %d, addr = %d, size = %d"
	.ascii ")\n\000"
	.align 2
LC4:
	.ascii "into the parent node (order = %d, addr = %d, size = %d)\n\000"
.text
	.align 2
.proc _print_Coalesced_Nodes
.global _print_Coalesced_Nodes
_print_Coalesced_Nodes:
;  Function 'print_Coalesced_Nodes'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,4(r30)
	lw	r3,(r30)
	lw	r2,8(r3)
	lw	r3,8(r1)
	sleu	r4,r2,r3
	bnez	r4,L66
	nop	; delay slot nop
	lw	r2,8(r1)
L66:
	sw	-12(r30),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,(r30)
	lw	r2,4(r30)
	lw	r1,8(r1)
	lw	r2,8(r2)
	sltu	r1,r1,r2
	beqz	r1,L67
	nop	; delay slot nop
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,12(r2)
	sw	4(r1),r3
	lw	r2,(r30)
	lw	r3,8(r2)
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,4(r2)
	sw	12(r1),r3
	lw	r2,4(r30)
	lw	r3,12(r2)
	sw	16(r1),r3
	lw	r2,4(r30)
	lw	r3,8(r2)
	sw	20(r1),r3
	lw	r2,4(r30)
	lw	r3,4(r2)
	sw	24(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
	j	L68
	nop	; delay slot nop
L67:
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,4(r30)
	lw	r3,12(r2)
	sw	4(r1),r3
	lw	r2,4(r30)
	lw	r3,8(r2)
	sw	8(r1),r3
	lw	r2,4(r30)
	lw	r3,4(r2)
	sw	12(r1),r3
	lw	r2,(r30)
	lw	r3,12(r2)
	sw	16(r1),r3
	lw	r2,(r30)
	lw	r3,8(r2)
	sw	20(r1),r3
	lw	r2,(r30)
	lw	r3,4(r2)
	sw	24(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
L68:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC4)>>16)&0xffff
	addui	r2,r2,(LC4)&0xffff
	sw	(r1),r2
	lw	r2,4(r30)
	lw	r3,12(r2)
	addi	r2,r3,#1
	sw	4(r1),r2
	lw	r2,-12(r30)
	sw	8(r1),r2
	lw	r2,(r30)
	lw	r3,4(r30)
	lw	r2,4(r2)
	lw	r3,4(r3)
	add	r2,r2,r3
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L65:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _print_Coalesced_Nodes
	.align 2
.proc _Merge_Nodes
.global _Merge_Nodes
_Merge_Nodes:
;  Function 'Merge_Nodes'; 40 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#64	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,12(r2)
	sw	4(r1),r3
	jal	_get_Buddy_Index
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,4(r30)
	lw	r2,-12(r30)
	sleu	r3,r1,r2
	bnez	r3,L70
	nop	; delay slot nop
	lw	r1,-12(r30)
L70:
	sw	-16(r30),r1
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r1,4(r1)
	lw	r2,4(r2)
	add	r1,r1,r2
	sw	-20(r30),r1
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,4(r1)
	add	r1,r0,r2
	slli	r2,r1,#0x1
	sw	-44(r30),r2
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	addi	r1,r2,#1
	sw	-36(r30),r1
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,8(r1)
	sw	-40(r30),r2
	addi	r1,r0,#0
	sw	-32(r30),r1
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	seqi	r1,r2,#7
	beqz	r1,L71
	nop	; delay slot nop
	j	L69
	nop	; delay slot nop
	j	L72
	nop	; delay slot nop
L71:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,16(r1)
	seqi	r1,r2,#1
	beqz	r1,L73
	nop	; delay slot nop
	j	L69
	nop	; delay slot nop
	j	L74
	nop	; delay slot nop
L73:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,4(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r1,4(r1)
	lw	r2,4(r2)
	sne	r1,r1,r2
	beqz	r1,L72
	nop	; delay slot nop
	j	L69
	nop	; delay slot nop
L75:
L74:
L72:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,(r30)
	add	r2,r3,r2
	sw	(r1),r2
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,(r30)
	add	r2,r3,r2
	sw	4(r1),r2
	jal	_print_Coalesced_Nodes
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-16(r30)
	sw	-24(r30),r1
L76:
	lw	r2,-20(r30)
	srli	r1,r2,#0x5
	lw	r2,-16(r30)
	add	r1,r1,r2
	lw	r2,-24(r30)
	sltu	r1,r2,r1
	bnez	r1,L79
	nop	; delay slot nop
	j	L77
	nop	; delay slot nop
L79:
	lw	r1,-24(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	lw	r2,-48(r30)
	sw	(r1),r2
	lw	r2,-44(r30)
	sw	4(r1),r2
	lw	r2,-40(r30)
	sw	8(r1),r2
	lw	r2,-36(r30)
	sw	12(r1),r2
	lw	r2,-32(r30)
	sw	16(r1),r2
L78:
	lw	r2,-24(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-24(r30),r2
	j	L76
	nop	; delay slot nop
L77:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_Merge_Nodes
	nop	; delay slot nop
	addi	r29,r29,#8
L69:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _Merge_Nodes
.data
	.align 2
LC5:
	.ascii "Freed the block: order = %d, addr = %d, size = %d\n\000"
.text
	.align 2
.proc _mfree
.global _mfree
_mfree:
;  Function 'mfree'; 80 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#96	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	lw	r2,4(r30)
	lw	r3,3688(r1)
	sub	r1,r2,r3
	srli	r2,r1,#0x5
	sw	-12(r30),r2
	lw	r1,-12(r30)
	sw	-16(r30),r1
	lw	r1,(r30)
	addi	r2,r1,#1128
	sw	-88(r30),r2
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-88(r30)
	add	r1,r1,r2
	lw	r2,16(r1)
	snei	r1,r2,#0
	bnez	r1,L81
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L80
	nop	; delay slot nop
L81:
	lw	r1,-12(r30)
	slti	r2,r1,#0
	beqz	r2,L82
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L80
	nop	; delay slot nop
L82:
	lw	r1,-12(r30)
	sgti	r2,r1,#127
	beqz	r2,L83
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L80
	nop	; delay slot nop
L83:
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-88(r30)
	add	r1,r1,r2
	lw	r2,(r1)
	sw	-48(r30),r2
	lw	r2,4(r1)
	sw	-44(r30),r2
	lw	r2,8(r1)
	sw	-40(r30),r2
	lw	r2,12(r1)
	sw	-36(r30),r2
	lw	r1,16(r1)
	sw	-32(r30),r1
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-88(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	sw	-80(r30),r2
	lw	r1,-44(r30)
	sw	-84(r30),r1
	lw	r1,-16(r30)
	sw	-76(r30),r1
L84:
	addi	r1,r0,#1
	lw	r2,-80(r30)
	sll	r1,r1,r2
	lw	r2,-16(r30)
	add	r1,r1,r2
	lw	r2,-76(r30)
	slt	r1,r2,r1
	bnez	r1,L87
	nop	; delay slot nop
	j	L85
	nop	; delay slot nop
L87:
	lw	r1,-76(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-88(r30)
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	16(r1),r2
L86:
	lw	r2,-76(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-76(r30),r2
	j	L84
	nop	; delay slot nop
L85:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC5)>>16)&0xffff
	addui	r2,r2,(LC5)&0xffff
	sw	(r1),r2
	lw	r2,-36(r30)
	sw	4(r1),r2
	lw	r2,-40(r30)
	sw	8(r1),r2
	lw	r2,-44(r30)
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-88(r30)
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_Merge_Nodes
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-84(r30)
	j	L80
	nop	; delay slot nop
L80:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _mfree
	.align 2
.proc _HeapInit
.global _HeapInit
_HeapInit:
;  Function 'HeapInit'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	addi	r2,r1,#1128
	sw	-16(r30),r2
	addi	r1,r0,#0
	sw	-12(r30),r1
L89:
	lw	r1,-12(r30)
	slei	r2,r1,#127
	bnez	r2,L92
	nop	; delay slot nop
	j	L90
	nop	; delay slot nop
L92:
	lw	r1,(r30)
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#7
	sw	1140(r1),r2
	lw	r1,(r30)
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	1136(r1),r2
	lw	r1,(r30)
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#4096
	sw	1132(r1),r2
	lw	r1,(r30)
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	1144(r1),r2
L91:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L89
	nop	; delay slot nop
L90:
L88:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _HeapInit
.data
	.align 2
LC6:
	.ascii "|Index: %d Size: %d Status: %d  |\000"
	.align 2
LC7:
	.ascii "\n\000"
.text
	.align 2
.proc _printHeap
.global _printHeap
_printHeap:
;  Function 'printHeap'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r1,r0,#0
	sw	-12(r30),r1
L94:
	lw	r1,-12(r30)
	slei	r2,r1,#127
	bnez	r2,L96
	nop	; delay slot nop
	j	L95
	nop	; delay slot nop
L96:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC6)>>16)&0xffff
	addui	r2,r2,(LC6)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,4(r2)
	sw	8(r1),r3
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,(r30)
	add	r2,r2,r3
	lw	r3,16(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,(r30)
	add	r1,r1,r2
	addi	r2,r0,#1
	lw	r3,12(r1)
	sll	r1,r2,r3
	lw	r2,-12(r30)
	add	r1,r2,r1
	sw	-12(r30),r1
	j	L94
	nop	; delay slot nop
L95:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC7)>>16)&0xffff
	addui	r2,r2,(LC7)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L93:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _printHeap
.data
	.align 2
LC8:
	.ascii "%d\000"
.text
	.align 2
.proc _printBinary
.global _printBinary
_printBinary:
;  Function 'printBinary'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	snei	r2,r1,#0
	beqz	r2,L98
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	srli	r3,r2,#0x1
	sw	(r1),r3
	jal	_printBinary
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC8)>>16)&0xffff
	addui	r2,r2,(LC8)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	andi	r3,r2,#1
	sw	4(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L98:
L97:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _printBinary
.data
	.align 2
LC9:
	.ascii "Created a right child node (order = %d, addr = %d, size = %d ) of pare"
	.ascii "nt (order = %d, addr = %d, size = %d)\n\000"
	.align 2
LC10:
	.ascii "Created a left child node (order = %d, addr = %d, size = %d ) of paren"
	.ascii "t (order = %d, addr = %d, size = %d)\n\000"
.text
	.align 2
.proc _SplitNode
.global _SplitNode
_SplitNode:
;  Function 'SplitNode'; 48 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#72	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	addi	r2,r1,#1128
	sw	-12(r30),r2
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	lw	r1,8(r30)
	sub	r2,r2,r1
	sw	-16(r30),r2
	addi	r1,r0,#0
	sw	-20(r30),r1
L100:
	lw	r1,-20(r30)
	lw	r2,-16(r30)
	sltu	r1,r1,r2
	bnez	r1,L103
	nop	; delay slot nop
	j	L101
	nop	; delay slot nop
L103:
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	sw	-48(r30),r2
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,4(r1)
	sw	-52(r30),r2
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,8(r1)
	sw	-56(r30),r2
	lw	r1,4(r30)
	sw	-24(r30),r1
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,8(r1)
	sw	-32(r30),r2
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,4(r1)
	srli	r1,r2,#0x1
	sw	-40(r30),r1
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	addi	r1,r2,#-1
	sw	-44(r30),r1
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r3,-12(r30)
	add	r2,r1,r3
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,4(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r2,r3
	lw	r3,12(r2)
	addi	r2,r3,#-1
	add	r3,r0,r2
	sw	12(r1),r3
	addi	r1,r0,#1
	lw	r2,-44(r30)
	sll	r1,r1,r2
	lw	r2,4(r30)
	add	r1,r2,r1
	sw	-28(r30),r1
	lw	r1,4(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	addi	r2,r0,#32
	lw	r3,-44(r30)
	sll	r2,r2,r3
	lw	r1,8(r1)
	add	r2,r1,r2
	sw	-36(r30),r2
L104:
	addi	r1,r0,#1
	lw	r2,-44(r30)
	sll	r1,r1,r2
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,-24(r30)
	sltu	r1,r2,r1
	bnez	r1,L107
	nop	; delay slot nop
	j	L105
	nop	; delay slot nop
L107:
	lw	r1,-24(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,-40(r30)
	sw	4(r1),r2
	lw	r1,-24(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,-44(r30)
	sw	12(r1),r2
	lw	r1,-24(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,-28(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r3,r2
	sw	(r1),r2
	lw	r1,-24(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,-32(r30)
	sw	8(r1),r2
L106:
	lw	r2,-24(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-24(r30),r2
	j	L104
	nop	; delay slot nop
L105:
	nop
L108:
	addi	r1,r0,#2
	lw	r2,-44(r30)
	sll	r1,r1,r2
	lw	r2,4(r30)
	add	r1,r1,r2
	lw	r2,-28(r30)
	sltu	r1,r2,r1
	bnez	r1,L111
	nop	; delay slot nop
	j	L109
	nop	; delay slot nop
L111:
	lw	r1,-28(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,-40(r30)
	sw	4(r1),r2
	lw	r1,-28(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,-44(r30)
	sw	12(r1),r2
	lw	r1,-28(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,4(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r3,r2
	sw	(r1),r2
	lw	r1,-28(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-12(r30)
	add	r1,r1,r2
	lw	r2,-36(r30)
	sw	8(r1),r2
L110:
	lw	r2,-28(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-28(r30),r2
	j	L108
	nop	; delay slot nop
L109:
	addi	r1,r0,#1
	lw	r2,-44(r30)
	sll	r1,r1,r2
	lw	r2,4(r30)
	add	r1,r2,r1
	sw	-28(r30),r1
	lw	r1,4(r30)
	sw	-24(r30),r1
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC9)>>16)&0xffff
	addui	r2,r2,(LC9)&0xffff
	sw	(r1),r2
	lw	r2,-28(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r2,r3
	lw	r3,12(r2)
	sw	4(r1),r3
	lw	r2,-28(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r2,r3
	lw	r3,8(r2)
	sw	8(r1),r3
	lw	r2,-28(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r2,r3
	lw	r3,4(r2)
	sw	12(r1),r3
	lw	r2,-48(r30)
	sw	16(r1),r2
	lw	r2,-56(r30)
	sw	20(r1),r2
	lw	r2,-52(r30)
	sw	24(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC10)>>16)&0xffff
	addui	r2,r2,(LC10)&0xffff
	sw	(r1),r2
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r2,r3
	lw	r3,12(r2)
	sw	4(r1),r3
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r2,r3
	lw	r3,8(r2)
	sw	8(r1),r3
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-12(r30)
	add	r2,r2,r3
	lw	r3,4(r2)
	sw	12(r1),r3
	lw	r2,-48(r30)
	sw	16(r1),r2
	lw	r2,-56(r30)
	sw	20(r1),r2
	lw	r2,-52(r30)
	sw	24(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
L102:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L100
	nop	; delay slot nop
L101:
L99:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SplitNode
.data
	.align 2
LC11:
	.ascii "Allocated the block: order = %d, addr = %d, requested mem size = %d, b"
	.ascii "lock size = %d\n\000"
.text
	.align 2
.proc _printAllocation
.global _printAllocation
_printAllocation:
;  Function 'printAllocation'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lhi	r2,((LC11)>>16)&0xffff
	addui	r2,r2,(LC11)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	lw	r2,8(r30)
	sw	12(r1),r2
	lw	r2,12(r30)
	sw	16(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#24
L112:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _printAllocation
.data
	.align 2
LC12:
	.ascii "Created a heap block of size %d bytes: virtual address %d, physical ad"
	.ascii "dress %d\n\000"
.text
	.align 2
.proc _printHeapResult
.global _printHeapResult
_printHeapResult:
;  Function 'printHeapResult'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC12)>>16)&0xffff
	addui	r2,r2,(LC12)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	lw	r2,8(r30)
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L113:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _printHeapResult
	.align 2
.proc _malloc
.global _malloc
_malloc:
;  Function 'malloc'; 32 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#56	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r1,r0,#0
	sw	-16(r30),r1
	addi	r1,r0,#32
	sw	-20(r30),r1
	addi	r1,r0,#8
	sw	-24(r30),r1
	addi	r1,r0,#0
	sw	-28(r30),r1
	lw	r1,(r30)
	addi	r2,r1,#1128
	sw	-32(r30),r2
	lw	r1,4(r30)
	slei	r2,r1,#0
	beqz	r2,L115
	nop	; delay slot nop
	addi	r1,r0,#0
	j	L114
	nop	; delay slot nop
	j	L116
	nop	; delay slot nop
L115:
	lw	r1,4(r30)
	sgti	r2,r1,#4096
	beqz	r2,L116
	nop	; delay slot nop
	addi	r1,r0,#0
	j	L114
	nop	; delay slot nop
L117:
L116:
	lw	r1,4(r30)
	andi	r2,r1,#3
	snei	r1,r2,#0
	beqz	r1,L118
	nop	; delay slot nop
	lw	r2,4(r30)
	addi	r1,r2,#4
	lw	r2,4(r30)
	add	r3,r0,r2
	sgei	r4,r3,#0
	bnez	r4,L119
	nop	; delay slot nop
	addi	r3,r3,#3
L119:
	srai	r3,r3,#0x2
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	sub	r2,r2,r3
	sub	r1,r1,r2
	sw	4(r30),r1
L118:
	nop
L120:
	lw	r1,4(r30)
	lw	r2,-20(r30)
	sgtu	r1,r1,r2
	bnez	r1,L122
	nop	; delay slot nop
	j	L121
	nop	; delay slot nop
L122:
	lw	r1,-20(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x1
	sw	-20(r30),r1
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L120
	nop	; delay slot nop
L121:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L123:
	lw	r1,-12(r30)
	sleui	r2,r1,#127
	bnez	r2,L126
	nop	; delay slot nop
	j	L124
	nop	; delay slot nop
L126:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-32(r30)
	add	r1,r1,r2
	lw	r2,16(r1)
	snei	r1,r2,#0
	bnez	r1,L125
	nop	; delay slot nop
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-32(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	lw	r1,-16(r30)
	seq	r2,r2,r1
	beqz	r2,L128
	nop	; delay slot nop
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-32(r30)
	add	r1,r1,r2
	addi	r2,r0,#1
	sw	16(r1),r2
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-32(r30)
	add	r2,r2,r3
	lw	r3,12(r2)
	sw	(r1),r3
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-32(r30)
	add	r2,r2,r3
	lw	r3,8(r2)
	sw	4(r1),r3
	lw	r2,4(r30)
	sw	8(r1),r2
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-32(r30)
	add	r2,r2,r3
	lw	r3,4(r2)
	sw	12(r1),r3
	jal	_printAllocation
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r1,(r30)
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-32(r30)
	add	r2,r2,r3
	lw	r1,3688(r1)
	lw	r2,8(r2)
	add	r1,r1,r2
	sw	-36(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,-36(r30)
	sw	4(r1),r2
	jal	_MemoryTranslateUserToSystem
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-40(r30),r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x2
	lw	r3,-32(r30)
	add	r2,r2,r3
	lw	r3,4(r2)
	sw	(r1),r3
	lw	r2,-36(r30)
	sw	4(r1),r2
	lw	r2,-40(r30)
	sw	8(r1),r2
	jal	_printHeapResult
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r1,-36(r30)
	j	L114
	nop	; delay slot nop
	j	L129
	nop	; delay slot nop
L128:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-32(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	lw	r1,-16(r30)
	sgtu	r2,r2,r1
	beqz	r2,L125
	nop	; delay slot nop
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-32(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	lw	r1,-24(r30)
	sltu	r2,r2,r1
	beqz	r2,L125
	nop	; delay slot nop
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-32(r30)
	add	r1,r1,r2
	lw	r2,12(r1)
	sw	-24(r30),r2
	lw	r1,-12(r30)
	sw	-28(r30),r1
L131:
L130:
L129:
L127:
L125:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x2
	lw	r2,-32(r30)
	add	r1,r1,r2
	addi	r2,r0,#1
	lw	r3,12(r1)
	sll	r1,r2,r3
	lw	r2,-12(r30)
	add	r1,r2,r1
	sw	-12(r30),r1
	j	L123
	nop	; delay slot nop
L124:
	lw	r1,-24(r30)
	seqi	r2,r1,#8
	beqz	r2,L132
	nop	; delay slot nop
	addi	r1,r0,#0
	j	L114
	nop	; delay slot nop
L132:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,-28(r30)
	sw	4(r1),r2
	lw	r2,-16(r30)
	sw	8(r1),r2
	lw	r2,4(r30)
	sw	12(r1),r2
	jal	_SplitNode
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	jal	_malloc
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L114
	nop	; delay slot nop
L114:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _malloc
.data
	.align 2
_freemap:
	.space 64
	.align 2
_pagestart:
	.space 4
	.align 2
_nfreepages:
	.space 4
	.align 2
_freemapmax:
	.space 4
