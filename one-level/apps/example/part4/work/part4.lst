 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 161
    4                      ; Text size: 4504
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  53746163	.ascii "Stack Size: %d\n\000"
   82  00003004  6b205369	
   82  00003008  7a653a20	
   82  0000300c  25640a00	
   83  00003010          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _recursive_stack
   86  000010d4          	.global _recursive_stack
   87  000010d4          	_recursive_stack:
   88                      ;  Function 'recursive_stack'; 0 bytes of locals, 2 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  8fc20000	lw	r2,(r30)
   96  000010f0  23bdfff8	addi	r29,r29,#-8
   97  000010f4  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
   98  000010f8  24633000	addui	r3,r3,(LC0_LF0)&0xffff
   99  000010fc  afa30000	sw	(r29),r3
  100  00001100  afa20004	sw	4(r29),r2
  101  00001104  0c0001c8	jal	_Printf
  102  00001108  54000000	nop; not filled.
  103  0000110c  23bd0008	addi	r29,r29,#8
  104  00001110  64410000	snei	r1,r2,#0
  105  00001114  10200024	beqz	r1,L17_LF0
  106  00001118  54000000	nop; not filled.
  107  0000111c  2042ffff	addi	r2,r2,#-1
  108  00001120  23bdfff8	addi	r29,r29,#-8
  109  00001124  afa20000	sw	(r29),r2
  110  00001128  0fffffa8	jal	_recursive_stack
  111  0000112c  54000000	nop; not filled.
  112  00001130  23bd0008	addi	r29,r29,#8
  113  00001134  08000008	j	L18_LF0
  114  00001138  54000000	nop; not filled.
  115  0000113c          	L17_LF0:
  116  0000113c  20010000	addi	r1,r0,#0
  117  00001140          	L18_LF0:
  118  00001140  8fa20000	lw	r2,0(r29)
  119  00001144  8fa30004	lw	r3,4(r29)
  120  00001148  8fdffff8	lw	r31,-8(r30)
  121  0000114c  001ee820	add	r29,r0,r30
  122  00001150  8fdefffc	lw	r30,-4(r30)
  123  00001154  4be00000	jr	r31
  124  00001158  54000000	nop
  125  0000115c          	.endproc _recursive_stack
  126  0000115c          	.data
  127  00003010          	.align 2
  128  00003010          	LC1_LF0:
  129  00003010  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  129  00003014  653a2025	
  129  00003018  73203c68	
  129  0000301c  616e646c	
  129  00003020  655f746f	
  129  00003024  5f70726f	
  129  00003028  63735f63	
  129  0000302c  6f6d706c	
  129  00003030  65746564	
  129  00003034  5f73656d	
  129  00003038  6170686f	
  129  0000303c  72653e0a	
  129  00003040  00      	
  130  00003041          	.align 2
  131  00003044          	LC2_LF0:
  132  00003044  25642043	.ascii "%d Calls Made on Recursive Stack\n\000"
  132  00003048  616c6c73	
  132  0000304c  204d6164	
  132  00003050  65206f6e	
  132  00003054  20526563	
  132  00003058  75727369	
  132  0000305c  76652053	
  132  00003060  7461636b	
  132  00003064  0a00    	
  133  00003066          	.align 2
  134  00003068          	LC3_LF0:
  135  00003068  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  135  0000306c  6f5f776f	
  135  00003070  726c6420	
  135  00003074  28256429	
  135  00003078  3a204261	
  135  0000307c  64207365	
  135  00003080  6d617068	
  135  00003084  6f726520	
  135  00003088  735f7072	
  135  0000308c  6f63735f	
  135  00003090  636f6d70	
  135  00003094  6c657465	
  135  00003098  64202825	
  135  0000309c  6429210a	
  135  000030a0  00      	
  136  000030a1          	.text
  137  0000115c          	.align 2
  138  0000115c          	.proc _main
  139  0000115c          	.global _main
  140  0000115c          	_main:
  141                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  142  0000115c  afbefffc	sw	-4(r29),r30; push fp
  143  00001160  001df020	add	r30,r0,r29; fp = sp
  144  00001164  afbffff8	sw	-8(r29),r31; push ret addr
  145  00001168  2fbd0008	subui	r29,r29,#8; alloc local storage
  146  0000116c  8fc20000	lw	r2,(r30)
  147  00001170  8fc30004	lw	r3,4(r30)
  148  00001174  0c001018	jal	___main
  149  00001178  54000000	nop; not filled.
  150  0000117c  64410002	snei	r1,r2,#2
  151  00001180  10200028	beqz	r1,L26_LF0
  152  00001184  54000000	nop; not filled.
  153  00001188  23bdfff8	addi	r29,r29,#-8
  154  0000118c  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  155  00001190  24a53010	addui	r5,r5,(LC1_LF0)&0xffff
  156  00001194  afa50000	sw	(r29),r5
  157  00001198  0c000134	jal	_Printf
  158  0000119c  54000000	nop; not filled.
  159  000011a0  0c000234	jal	_Exit
  160  000011a4  54000000	nop; not filled.
  161  000011a8  23bd0008	addi	r29,r29,#8
  162  000011ac          	L26_LF0:
  163  000011ac  23bdfff0	addi	r29,r29,#-16
  164  000011b0  8c630004	lw	r3,4(r3)
  165  000011b4  afa30000	sw	(r29),r3
  166  000011b8  20050000	addi	r5,r0,#0
  167  000011bc  afa50004	sw	4(r29),r5
  168  000011c0  2005000a	addi	r5,r0,#10
  169  000011c4  afa50008	sw	8(r29),r5
  170  000011c8  0c000ac8	jal	_dstrtol
  171  000011cc  54000000	nop; not filled.
  172  000011d0  00011020	add	r2,r0,r1
  173  000011d4  23bd0010	addi	r29,r29,#16
  174  000011d8  23bdfff8	addi	r29,r29,#-8
  175  000011dc  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  176  000011e0  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  177  000011e4  afa50000	sw	(r29),r5
  178  000011e8  200503e8	addi	r5,r0,#1000
  179  000011ec  afa50004	sw	4(r29),r5
  180  000011f0  0c0000dc	jal	_Printf
  181  000011f4  54000000	nop; not filled.
  182  000011f8  23bd0008	addi	r29,r29,#8
  183  000011fc  23bdfff8	addi	r29,r29,#-8
  184  00001200  200503e7	addi	r5,r0,#999
  185  00001204  afa50000	sw	(r29),r5
  186  00001208  0ffffec8	jal	_recursive_stack
  187  0000120c  54000000	nop; not filled.
  188  00001210  23bd0008	addi	r29,r29,#8
  189  00001214  23bdfff8	addi	r29,r29,#-8
  190  00001218  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  191  0000121c  24a53044	addui	r5,r5,(LC2_LF0)&0xffff
  192  00001220  afa50000	sw	(r29),r5
  193  00001224  afa40004	sw	4(r29),r4
  194  00001228  0c0000a4	jal	_Printf
  195  0000122c  54000000	nop; not filled.
  196  00001230  afa20000	sw	(r29),r2
  197  00001234  0c0000ec	jal	_sem_signal
  198  00001238  54000000	nop; not filled.
  199  0000123c  23bd0008	addi	r29,r29,#8
  200  00001240  64210001	snei	r1,r1,#1
  201  00001244  10200038	beqz	r1,L30_LF0
  202  00001248  54000000	nop; not filled.
  203  0000124c  0c00008c	jal	_getpid
  204  00001250  54000000	nop; not filled.
  205  00001254  23bdfff0	addi	r29,r29,#-16
  206  00001258  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  207  0000125c  24a53068	addui	r5,r5,(LC3_LF0)&0xffff
  208  00001260  afa50000	sw	(r29),r5
  209  00001264  afa10004	sw	4(r29),r1
  210  00001268  afa20008	sw	8(r29),r2
  211  0000126c  0c000060	jal	_Printf
  212  00001270  54000000	nop; not filled.
  213  00001274  0c000160	jal	_Exit
  214  00001278  54000000	nop; not filled.
  215  0000127c  23bd0010	addi	r29,r29,#16
  216  00001280          	L30_LF0:
  217  00001280  0c000f00	jal	_exit
  218  00001284  54000000	nop
  219  00001288          	.endproc _main
  220                      ;;;
  221                      ;;; Stub functions for DLX traps.
  222                      ;;;
  223                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  224                      ;;;
  225                      ;;; The traps such as Open and Close
  226                      ;;; (note the capital letters) are for use by user programs.  The traps
  227                      ;;; with names such as open and close (lower case) are for use by the OS.
  228                      ;;;
  231  00001288          	.align 2
  233                      ;;; The following are the traps to be used by user-level programs
  234                      ;;;
  236  00001288          	.align 2
  237  00001288          	.proc _Open
  238  00001288          	.global _Open
  239  00001288          	_Open:
  240                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  241                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  242                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  243  00001288  44000213	trap	#0x213
  244  0000128c  4be00000	jr	r31
  245  00001290  54000000	nop
  246  00001294          	.endproc _Open
  248  00001294          	.proc _Close
  249  00001294          	.global _Close
  250  00001294          	_Close:
  251  00001294  44000214	trap	#0x214
  252  00001298  4be00000	jr	r31
  253  0000129c  54000000	nop
  254  000012a0          	.endproc _Close
  256  000012a0          	.proc _Read
  257  000012a0          	.global _Read
  258  000012a0          	_Read:
  259  000012a0  44000210	trap	#0x210
  260  000012a4  4be00000	jr	r31
  261  000012a8  54000000	nop
  262  000012ac          	.endproc _Read
  264  000012ac          	.proc _Write
  265  000012ac          	.global _Write
  266  000012ac          	_Write:
  267  000012ac  44000211	trap	#0x211
  268  000012b0  4be00000	jr	r31
  269  000012b4  54000000	nop
  270  000012b8          	.endproc _Write
  272  000012b8          	.proc _Lseek
  273  000012b8          	.global _Lseek
  274  000012b8          	_Lseek:
  275  000012b8  44000212	trap	#0x212
  276  000012bc  4be00000	jr	r31
  277  000012c0  54000000	nop
  278  000012c4          	.endproc _Lseek
  280  000012c4          	.proc _Putchar
  281  000012c4          	.global _Putchar
  282  000012c4          	_Putchar:
  283  000012c4  44000280	trap	#0x280
  284  000012c8  4be00000	jr	r31
  285  000012cc  54000000	nop
  286  000012d0          	.endproc _Putchar
  288  000012d0          	.proc _Printf
  289  000012d0          	.global _Printf
  290  000012d0          	_Printf:
  291  000012d0  44000201	trap	#0x201
  292  000012d4  4be00000	jr	r31
  293  000012d8  54000000	nop
  294  000012dc          	.endproc _Printf
  296  000012dc          	.proc _getpid
  297  000012dc          	.global _getpid
  298  000012dc          	_getpid:
  299  000012dc  44000431	trap	#0x431
  300  000012e0  4be00000	jr	r31
  301  000012e4  54000000	nop
  302  000012e8          	.endproc _getpid
  304  000012e8          	.proc _process_create
  305  000012e8          	.global _process_create
  306  000012e8          	_process_create:
  307  000012e8  44000432	trap	#0x432
  308  000012ec  4be00000	jr	r31
  309  000012f0  54000000	nop
  310  000012f4          	.endproc _process_create
  312  000012f4          	.proc _shmget
  313  000012f4          	.global _shmget
  314  000012f4          	_shmget:
  315  000012f4  44000440	trap	#0x440
  316  000012f8  4be00000	jr	r31
  317  000012fc  54000000	nop
  318  00001300          	.endproc _shmget
  320  00001300          	.proc _shmat
  321  00001300          	.global _shmat
  322  00001300          	_shmat:
  323  00001300  44000441	trap	#0x441
  324  00001304  4be00000	jr	r31
  325  00001308  54000000	nop
  326  0000130c          	.endproc _shmat
  328  0000130c          	.proc _sem_create
  329  0000130c          	.global _sem_create
  330  0000130c          	_sem_create:
  331  0000130c  44000450	trap	#0x450
  332  00001310  4be00000	jr	r31
  333  00001314  54000000	nop
  334  00001318          	.endproc _sem_create
  336  00001318          	.proc _sem_wait
  337  00001318          	.global _sem_wait
  338  00001318          	_sem_wait:
  339  00001318  44000451	trap	#0x451
  340  0000131c  4be00000	jr	r31
  341  00001320  54000000	nop
  342  00001324          	.endproc _sem_wait
  344  00001324          	.proc _sem_signal
  345  00001324          	.global _sem_signal
  346  00001324          	_sem_signal:
  347  00001324  44000452	trap	#0x452
  348  00001328  4be00000	jr	r31
  349  0000132c  54000000	nop
  350  00001330          	.endproc _sem_signal
  352  00001330          	.proc _lock_create
  353  00001330          	.global _lock_create
  354  00001330          	_lock_create:
  355  00001330  44000453	trap	#0x453
  356  00001334  4be00000	jr	r31
  357  00001338  54000000	nop
  358  0000133c          	.endproc _lock_create
  360  0000133c          	.proc _lock_acquire
  361  0000133c          	.global _lock_acquire
  362  0000133c          	_lock_acquire:
  363  0000133c  44000454	trap	#0x454
  364  00001340  4be00000	jr	r31
  365  00001344  54000000	nop
  366  00001348          	.endproc _lock_acquire
  368  00001348          	.proc _lock_release
  369  00001348          	.global _lock_release
  370  00001348          	_lock_release:
  371  00001348  44000455	trap	#0x455
  372  0000134c  4be00000	jr	r31
  373  00001350  54000000	nop
  374  00001354          	.endproc _lock_release
  376  00001354          	.proc _cond_create
  377  00001354          	.global _cond_create
  378  00001354          	_cond_create:
  379  00001354  44000456	trap	#0x456
  380  00001358  4be00000	jr	r31
  381  0000135c  54000000	nop
  382  00001360          	.endproc _cond_create
  384  00001360          	.proc _cond_wait
  385  00001360          	.global _cond_wait
  386  00001360          	_cond_wait:
  387  00001360  44000457	trap	#0x457
  388  00001364  4be00000	jr	r31
  389  00001368  54000000	nop
  390  0000136c          	.endproc _cond_wait
  392  0000136c          	.proc _cond_signal
  393  0000136c          	.global _cond_signal
  394  0000136c          	_cond_signal:
  395  0000136c  44000458	trap	#0x458
  396  00001370  4be00000	jr	r31
  397  00001374  54000000	nop
  398  00001378          	.endproc _cond_signal
  400  00001378          	.proc _cond_broadcast
  401  00001378          	.global _cond_broadcast
  402  00001378          	_cond_broadcast:
  403  00001378  44000459	trap	#0x459
  404  0000137c  4be00000	jr	r31
  405  00001380  54000000	nop
  406  00001384          	.endproc _cond_broadcast
  408  00001384          	.proc _mbox_create
  409  00001384          	.global _mbox_create
  410  00001384          	_mbox_create:
  411  00001384  44000460	trap	#0x460
  412  00001388  4be00000	jr	r31
  413  0000138c  54000000	nop
  414  00001390          	.endproc _mbox_create
  416  00001390          	.proc _mbox_open
  417  00001390          	.global _mbox_open
  418  00001390          	_mbox_open:
  419  00001390  44000461	trap	#0x461
  420  00001394  4be00000	jr	r31
  421  00001398  54000000	nop
  422  0000139c          	.endproc _mbox_open
  424  0000139c          	.proc _mbox_close
  425  0000139c          	.global _mbox_close
  426  0000139c          	_mbox_close:
  427  0000139c  44000462	trap	#0x462
  428  000013a0  4be00000	jr	r31
  429  000013a4  54000000	nop
  430  000013a8          	.endproc _mbox_close
  432  000013a8          	.proc _mbox_send
  433  000013a8          	.global _mbox_send
  434  000013a8          	_mbox_send:
  435  000013a8  44000463	trap	#0x463
  436  000013ac  4be00000	jr	r31
  437  000013b0  54000000	nop
  438  000013b4          	.endproc _mbox_send
  440  000013b4          	.proc _mbox_recv
  441  000013b4          	.global _mbox_recv
  442  000013b4          	_mbox_recv:
  443  000013b4  44000464	trap	#0x464
  444  000013b8  4be00000	jr	r31
  445  000013bc  54000000	nop
  446  000013c0          	.endproc _mbox_recv
  448  000013c0          	.proc _sleep
  449  000013c0          	.global _sleep
  450  000013c0          	_sleep:
  451  000013c0  44000465	trap	#0x465
  452  000013c4  4be00000	jr	r31
  453  000013c8  54000000	nop
  454  000013cc          	.endproc _sleep
  456  000013cc          	.proc _yield
  457  000013cc          	.global _yield
  458  000013cc          	_yield:
  459  000013cc  44000466	trap	#0x466
  460  000013d0  4be00000	jr	r31
  461  000013d4  54000000	nop
  462  000013d8          	.endproc _yield
  465  000013d8          	.proc _Exit
  466  000013d8          	.global _Exit
  467  000013d8          	_Exit:
  468  000013d8  44000500	trap	#0x500
  469  000013dc  4be00000	jr	r31
  470  000013e0  54000000	nop
  471  000013e4          	.endproc _Exit
  474  000013e4          	.proc _malloc
  475  000013e4          	.global _malloc
  476  000013e4          	_malloc:
  477  000013e4  44000467	trap	#0x467
  478  000013e8  4be00000	jr	r31
  479  000013ec          	.endproc _malloc
  482  000013ec          	.proc _mfree
  483  000013ec          	.global _mfree
  484  000013ec          	_mfree:
  485  000013ec  44000468	trap	#0x468
  486  000013f0  4be00000	jr	r31
  487  000013f4          	.endproc _mfree
  488                      ; Compiled by GCC
  490  000013f4          	.align 2
  491  000013f4          	.proc _isspace
  492  000013f4          	.global _isspace
  493  000013f4          	_isspace:
  494                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  495  000013f4  afbefffc	sw	-4(r29),r30; push fp
  496  000013f8  001df020	add	r30,r0,r29; fp = sp
  497  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  498  00001400  2fbd0018	subui	r29,r29,#24; alloc local storage
  499  00001404  afa20000	sw	0(r29),r2
  500  00001408  afa30004	sw	4(r29),r3
  501  0000140c  afa40008	sw	8(r29),r4
  502  00001410  83c20003	lb	r2,3(r30)
  503  00001414  20010000	addi	r1,r0,#0
  504  00001418  304300ff	andi	r3,r2,#0x00ff
  505  0000141c  60640020	seqi	r4,r3,#32
  506  00001420  1480002c	bnez	r4,L3_LF2
  507  00001424  54000000	nop; delay slot nop
  508  00001428  304300ff	andi	r3,r2,#0x00ff
  509  0000142c  60640009	seqi	r4,r3,#9
  510  00001430  1480001c	bnez	r4,L3_LF2
  511  00001434  54000000	nop; delay slot nop
  512  00001438  304300ff	andi	r3,r2,#0x00ff
  513  0000143c  6064000a	seqi	r4,r3,#10
  514  00001440  1480000c	bnez	r4,L3_LF2
  515  00001444  54000000	nop; delay slot nop
  516  00001448  08000008	j	L2_LF2
  517  0000144c  54000000	nop; delay slot nop
  518  00001450          	L3_LF2:
  519  00001450  20010001	addi	r1,r0,#1
  520  00001454          	L2_LF2:
  521  00001454  08000004	j	L1_LF2
  522  00001458  54000000	nop; delay slot nop
  523  0000145c          	L1_LF2:
  524  0000145c  8fa20000	lw	r2,0(r29)
  525  00001460  8fa30004	lw	r3,4(r29)
  526  00001464  8fa40008	lw	r4,8(r29)
  527  00001468  8fdffff8	lw	r31,-8(r30)
  528  0000146c  001ee820	add	r29,r0,r30
  529  00001470  8fdefffc	lw	r30,-4(r30)
  530  00001474  4be00000	jr	r31
  531  00001478  54000000	nop
  532  0000147c          	.endproc _isspace
  533  0000147c          	.align 2
  534  0000147c          	.proc _isxdigit
  535  0000147c          	.global _isxdigit
  536  0000147c          	_isxdigit:
  537                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  538  0000147c  afbefffc	sw	-4(r29),r30; push fp
  539  00001480  001df020	add	r30,r0,r29; fp = sp
  540  00001484  afbffff8	sw	-8(r29),r31; push ret addr
  541  00001488  2fbd0018	subui	r29,r29,#24; alloc local storage
  542  0000148c  afa20000	sw	0(r29),r2
  543  00001490  afa30004	sw	4(r29),r3
  544  00001494  afa40008	sw	8(r29),r4
  545  00001498  83c20003	lb	r2,3(r30)
  546  0000149c  20010000	addi	r1,r0,#0
  547  000014a0  304300ff	andi	r3,r2,#0x00ff
  548  000014a4  6c64002f	sgtui	r4,r3,#47
  549  000014a8  1080001c	beqz	r4,L7_LF2
  550  000014ac  54000000	nop; delay slot nop
  551  000014b0  304300ff	andi	r3,r2,#0x00ff
  552  000014b4  70640039	sleui	r4,r3,#57
  553  000014b8  1480005c	bnez	r4,L6_LF2
  554  000014bc  54000000	nop; delay slot nop
  555  000014c0  08000004	j	L7_LF2
  556  000014c4  54000000	nop; delay slot nop
  557  000014c8          	L7_LF2:
  558  000014c8  304300ff	andi	r3,r2,#0x00ff
  559  000014cc  6c640060	sgtui	r4,r3,#96
  560  000014d0  1080001c	beqz	r4,L8_LF2
  561  000014d4  54000000	nop; delay slot nop
  562  000014d8  304300ff	andi	r3,r2,#0x00ff
  563  000014dc  70640066	sleui	r4,r3,#102
  564  000014e0  14800034	bnez	r4,L6_LF2
  565  000014e4  54000000	nop; delay slot nop
  566  000014e8  08000004	j	L8_LF2
  567  000014ec  54000000	nop; delay slot nop
  568  000014f0          	L8_LF2:
  569  000014f0  304300ff	andi	r3,r2,#0x00ff
  570  000014f4  6c640040	sgtui	r4,r3,#64
  571  000014f8  10800020	beqz	r4,L5_LF2
  572  000014fc  54000000	nop; delay slot nop
  573  00001500  304300ff	andi	r3,r2,#0x00ff
  574  00001504  70640041	sleui	r4,r3,#65
  575  00001508  1480000c	bnez	r4,L6_LF2
  576  0000150c  54000000	nop; delay slot nop
  577  00001510  08000008	j	L5_LF2
  578  00001514  54000000	nop; delay slot nop
  579  00001518          	L6_LF2:
  580  00001518  20010001	addi	r1,r0,#1
  581  0000151c          	L5_LF2:
  582  0000151c  08000004	j	L4_LF2
  583  00001520  54000000	nop; delay slot nop
  584  00001524          	L4_LF2:
  585  00001524  8fa20000	lw	r2,0(r29)
  586  00001528  8fa30004	lw	r3,4(r29)
  587  0000152c  8fa40008	lw	r4,8(r29)
  588  00001530  8fdffff8	lw	r31,-8(r30)
  589  00001534  001ee820	add	r29,r0,r30
  590  00001538  8fdefffc	lw	r30,-4(r30)
  591  0000153c  4be00000	jr	r31
  592  00001540  54000000	nop
  593  00001544          	.endproc _isxdigit
  594  00001544          	.align 2
  595  00001544          	.proc _dstrcpy
  596  00001544          	.global _dstrcpy
  597  00001544          	_dstrcpy:
  598                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  599  00001544  afbefffc	sw	-4(r29),r30; push fp
  600  00001548  001df020	add	r30,r0,r29; fp = sp
  601  0000154c  afbffff8	sw	-8(r29),r31; push ret addr
  602  00001550  2fbd0018	subui	r29,r29,#24; alloc local storage
  603  00001554  afa20000	sw	0(r29),r2
  604  00001558  afa30004	sw	4(r29),r3
  605  0000155c  8fc10000	lw	r1,(r30)
  606  00001560  afc1fff4	sw	-12(r30),r1
  607  00001564          	L10_LF2:
  608  00001564  8fc10000	lw	r1,(r30)
  609  00001568  20220001	addi	r2,r1,#1
  610  0000156c  afc20000	sw	(r30),r2
  611  00001570  8fc20004	lw	r2,4(r30)
  612  00001574  20430001	addi	r3,r2,#1
  613  00001578  afc30004	sw	4(r30),r3
  614  0000157c  80420000	lb	r2,(r2)
  615  00001580  a0220000	sb	(r1),r2
  616  00001584  a3c2fff3	sb	-13(r30),r2
  617  00001588          	L12_LF2:
  618  00001588  93c1fff3	lbu	r1,-13(r30)
  619  0000158c  64220000	snei	r2,r1,#0
  620  00001590  1440000c	bnez	r2,L13_LF2
  621  00001594  54000000	nop; delay slot nop
  622  00001598  0800000c	j	L11_LF2
  623  0000159c  54000000	nop; delay slot nop
  624  000015a0          	L13_LF2:
  625  000015a0  0bffffc0	j	L10_LF2
  626  000015a4  54000000	nop; delay slot nop
  627  000015a8          	L11_LF2:
  628  000015a8  8fc1fff4	lw	r1,-12(r30)
  629  000015ac  08000004	j	L9_LF2
  630  000015b0  54000000	nop; delay slot nop
  631  000015b4          	L9_LF2:
  632  000015b4  8fa20000	lw	r2,0(r29)
  633  000015b8  8fa30004	lw	r3,4(r29)
  634  000015bc  8fdffff8	lw	r31,-8(r30)
  635  000015c0  001ee820	add	r29,r0,r30
  636  000015c4  8fdefffc	lw	r30,-4(r30)
  637  000015c8  4be00000	jr	r31
  638  000015cc  54000000	nop
  639  000015d0          	.endproc _dstrcpy
  640  000015d0          	.align 2
  641  000015d0          	.proc _dstrncpy
  642  000015d0          	.global _dstrncpy
  643  000015d0          	_dstrncpy:
  644                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  645  000015d0  afbefffc	sw	-4(r29),r30; push fp
  646  000015d4  001df020	add	r30,r0,r29; fp = sp
  647  000015d8  afbffff8	sw	-8(r29),r31; push ret addr
  648  000015dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  649  000015e0  afa20000	sw	0(r29),r2
  650  000015e4  afa30004	sw	4(r29),r3
  651  000015e8  8fc10000	lw	r1,(r30)
  652  000015ec  afc1fff4	sw	-12(r30),r1
  653  000015f0          	L15_LF2:
  654  000015f0  8fc10008	lw	r1,8(r30)
  655  000015f4  2022ffff	addi	r2,r1,#-1
  656  000015f8  afc20008	sw	8(r30),r2
  657  000015fc  70210000	slei	r1,r1,#0
  658  00001600  1020000c	beqz	r1,L18_LF2
  659  00001604  54000000	nop; delay slot nop
  660  00001608  08000048	j	L16_LF2
  661  0000160c  54000000	nop; delay slot nop
  662  00001610          	L18_LF2:
  663  00001610  8fc10000	lw	r1,(r30)
  664  00001614  20220001	addi	r2,r1,#1
  665  00001618  afc20000	sw	(r30),r2
  666  0000161c  8fc20004	lw	r2,4(r30)
  667  00001620  20430001	addi	r3,r2,#1
  668  00001624  afc30004	sw	4(r30),r3
  669  00001628  80420000	lb	r2,(r2)
  670  0000162c  a0220000	sb	(r1),r2
  671  00001630  a3c2fff3	sb	-13(r30),r2
  672  00001634          	L17_LF2:
  673  00001634  93c1fff3	lbu	r1,-13(r30)
  674  00001638  64220000	snei	r2,r1,#0
  675  0000163c  1440000c	bnez	r2,L19_LF2
  676  00001640  54000000	nop; delay slot nop
  677  00001644  0800000c	j	L16_LF2
  678  00001648  54000000	nop; delay slot nop
  679  0000164c          	L19_LF2:
  680  0000164c  0bffffa0	j	L15_LF2
  681  00001650  54000000	nop; delay slot nop
  682  00001654          	L16_LF2:
  683  00001654  8fc1fff4	lw	r1,-12(r30)
  684  00001658  08000004	j	L14_LF2
  685  0000165c  54000000	nop; delay slot nop
  686  00001660          	L14_LF2:
  687  00001660  8fa20000	lw	r2,0(r29)
  688  00001664  8fa30004	lw	r3,4(r29)
  689  00001668  8fdffff8	lw	r31,-8(r30)
  690  0000166c  001ee820	add	r29,r0,r30
  691  00001670  8fdefffc	lw	r30,-4(r30)
  692  00001674  4be00000	jr	r31
  693  00001678  54000000	nop
  694  0000167c          	.endproc _dstrncpy
  695  0000167c          	.align 2
  696  0000167c          	.proc _dstrcat
  697  0000167c          	.global _dstrcat
  698  0000167c          	_dstrcat:
  699                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  700  0000167c  afbefffc	sw	-4(r29),r30; push fp
  701  00001680  001df020	add	r30,r0,r29; fp = sp
  702  00001684  afbffff8	sw	-8(r29),r31; push ret addr
  703  00001688  2fbd0018	subui	r29,r29,#24; alloc local storage
  704  0000168c  afa20000	sw	0(r29),r2
  705  00001690  8fc10000	lw	r1,(r30)
  706  00001694  afc1fff4	sw	-12(r30),r1
  707  00001698          	L21_LF2:
  708  00001698  8fc10000	lw	r1,(r30)
  709  0000169c  90220000	lbu	r2,(r1)
  710  000016a0  64410000	snei	r1,r2,#0
  711  000016a4  1420000c	bnez	r1,L23_LF2
  712  000016a8  54000000	nop; delay slot nop
  713  000016ac  0800001c	j	L22_LF2
  714  000016b0  54000000	nop; delay slot nop
  715  000016b4          	L23_LF2:
  716  000016b4  8fc20000	lw	r2,(r30)
  717  000016b8  20410001	addi	r1,r2,#1
  718  000016bc  00011020	add	r2,r0,r1
  719  000016c0  afc20000	sw	(r30),r2
  720  000016c4  0bffffd0	j	L21_LF2
  721  000016c8  54000000	nop; delay slot nop
  722  000016cc          	L22_LF2:
  723  000016cc  23bdfff8	addi	r29,r29,#-8
  724  000016d0  001d0820	add	r1,r0,r29
  725  000016d4  8fc20000	lw	r2,(r30)
  726  000016d8  ac220000	sw	(r1),r2
  727  000016dc  8fc20004	lw	r2,4(r30)
  728  000016e0  ac220004	sw	4(r1),r2
  729  000016e4  0ffffe5c	jal	_dstrcpy
  730  000016e8  54000000	nop; delay slot nop
  731  000016ec  23bd0008	addi	r29,r29,#8
  732  000016f0  8fc1fff4	lw	r1,-12(r30)
  733  000016f4  08000004	j	L20_LF2
  734  000016f8  54000000	nop; delay slot nop
  735  000016fc          	L20_LF2:
  736  000016fc  8fa20000	lw	r2,0(r29)
  737  00001700  8fdffff8	lw	r31,-8(r30)
  738  00001704  001ee820	add	r29,r0,r30
  739  00001708  8fdefffc	lw	r30,-4(r30)
  740  0000170c  4be00000	jr	r31
  741  00001710  54000000	nop
  742  00001714          	.endproc _dstrcat
  743  00001714          	.align 2
  744  00001714          	.proc _dstrncmp
  745  00001714          	.global _dstrncmp
  746  00001714          	_dstrncmp:
  747                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  748  00001714  afbefffc	sw	-4(r29),r30; push fp
  749  00001718  001df020	add	r30,r0,r29; fp = sp
  750  0000171c  afbffff8	sw	-8(r29),r31; push ret addr
  751  00001720  2fbd0018	subui	r29,r29,#24; alloc local storage
  752  00001724  afa20000	sw	0(r29),r2
  753  00001728  afa30004	sw	4(r29),r3
  754  0000172c  54000000	nop
  755  00001730  20010000	addi	r1,r0,#0
  756  00001734  afc1fff4	sw	-12(r30),r1
  757  00001738          	L25_LF2:
  758  00001738  8fc1fff4	lw	r1,-12(r30)
  759  0000173c  8fc20008	lw	r2,8(r30)
  760  00001740  0022082a	slt	r1,r1,r2
  761  00001744  1420000c	bnez	r1,L28_LF2
  762  00001748  54000000	nop; delay slot nop
  763  0000174c  08000088	j	L26_LF2
  764  00001750  54000000	nop; delay slot nop
  765  00001754          	L28_LF2:
  766  00001754  8fc10004	lw	r1,4(r30)
  767  00001758  90220000	lbu	r2,(r1)
  768  0000175c  64410000	snei	r1,r2,#0
  769  00001760  14200018	bnez	r1,L29_LF2
  770  00001764  54000000	nop; delay slot nop
  771  00001768  20010000	addi	r1,r0,#0
  772  0000176c  080000d8	j	L24_LF2
  773  00001770  54000000	nop; delay slot nop
  774  00001774  08000028	j	L30_LF2
  775  00001778  54000000	nop; delay slot nop
  776  0000177c          	L29_LF2:
  777  0000177c  8fc10000	lw	r1,(r30)
  778  00001780  8fc20004	lw	r2,4(r30)
  779  00001784  90210000	lbu	r1,(r1)
  780  00001788  90420000	lbu	r2,(r2)
  781  0000178c  00220829	sne	r1,r1,r2
  782  00001790  1020000c	beqz	r1,L30_LF2
  783  00001794  54000000	nop; delay slot nop
  784  00001798  0800003c	j	L26_LF2
  785  0000179c  54000000	nop; delay slot nop
  786  000017a0          	L31_LF2:
  787  000017a0          	L30_LF2:
  788  000017a0  8fc20000	lw	r2,(r30)
  789  000017a4  20410001	addi	r1,r2,#1
  790  000017a8  00011020	add	r2,r0,r1
  791  000017ac  afc20000	sw	(r30),r2
  792  000017b0  8fc20004	lw	r2,4(r30)
  793  000017b4  20410001	addi	r1,r2,#1
  794  000017b8  00011020	add	r2,r0,r1
  795  000017bc  afc20004	sw	4(r30),r2
  796  000017c0          	L27_LF2:
  797  000017c0  8fc2fff4	lw	r2,-12(r30)
  798  000017c4  20410001	addi	r1,r2,#1
  799  000017c8  00011020	add	r2,r0,r1
  800  000017cc  afc2fff4	sw	-12(r30),r2
  801  000017d0  0bffff64	j	L25_LF2
  802  000017d4  54000000	nop; delay slot nop
  803  000017d8          	L26_LF2:
  804  000017d8  8fc1fff4	lw	r1,-12(r30)
  805  000017dc  8fc20008	lw	r2,8(r30)
  806  000017e0  00220828	seq	r1,r1,r2
  807  000017e4  10200018	beqz	r1,L32_LF2
  808  000017e8  54000000	nop; delay slot nop
  809  000017ec  20010000	addi	r1,r0,#0
  810  000017f0  08000054	j	L24_LF2
  811  000017f4  54000000	nop; delay slot nop
  812  000017f8  0800004c	j	L33_LF2
  813  000017fc  54000000	nop; delay slot nop
  814  00001800          	L32_LF2:
  815  00001800  8fc20000	lw	r2,(r30)
  816  00001804  90410000	lbu	r1,(r2)
  817  00001808  8fc20004	lw	r2,4(r30)
  818  0000180c  90430000	lbu	r3,(r2)
  819  00001810  00230822	sub	r1,r1,r3
  820  00001814  74220000	sgei	r2,r1,#0
  821  00001818  10400020	beqz	r2,L34_LF2
  822  0000181c  54000000	nop; delay slot nop
  823  00001820  8fc10000	lw	r1,(r30)
  824  00001824  8fc20004	lw	r2,4(r30)
  825  00001828  90210000	lbu	r1,(r1)
  826  0000182c  90420000	lbu	r2,(r2)
  827  00001830  00220829	sne	r1,r1,r2
  828  00001834  08000008	j	L35_LF2
  829  00001838  54000000	nop; delay slot nop
  830  0000183c          	L34_LF2:
  831  0000183c  2001ffff	addi	r1,r0,#-1
  832  00001840          	L35_LF2:
  833  00001840  08000004	j	L24_LF2
  834  00001844  54000000	nop; delay slot nop
  835  00001848          	L33_LF2:
  836  00001848          	L24_LF2:
  837  00001848  8fa20000	lw	r2,0(r29)
  838  0000184c  8fa30004	lw	r3,4(r29)
  839  00001850  8fdffff8	lw	r31,-8(r30)
  840  00001854  001ee820	add	r29,r0,r30
  841  00001858  8fdefffc	lw	r30,-4(r30)
  842  0000185c  4be00000	jr	r31
  843  00001860  54000000	nop
  844  00001864          	.endproc _dstrncmp
  845  00001864          	.align 2
  846  00001864          	.proc _dstrlen
  847  00001864          	.global _dstrlen
  848  00001864          	_dstrlen:
  849                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  850  00001864  afbefffc	sw	-4(r29),r30; push fp
  851  00001868  001df020	add	r30,r0,r29; fp = sp
  852  0000186c  afbffff8	sw	-8(r29),r31; push ret addr
  853  00001870  2fbd0018	subui	r29,r29,#24; alloc local storage
  854  00001874  afa20000	sw	0(r29),r2
  855  00001878  20010000	addi	r1,r0,#0
  856  0000187c  afc1fff4	sw	-12(r30),r1
  857  00001880          	L37_LF2:
  858  00001880  8fc10000	lw	r1,(r30)
  859  00001884  20220001	addi	r2,r1,#1
  860  00001888  afc20000	sw	(r30),r2
  861  0000188c  90210000	lbu	r1,(r1)
  862  00001890  64220000	snei	r2,r1,#0
  863  00001894  1440000c	bnez	r2,L39_LF2
  864  00001898  54000000	nop; delay slot nop
  865  0000189c  0800001c	j	L38_LF2
  866  000018a0  54000000	nop; delay slot nop
  867  000018a4          	L39_LF2:
  868  000018a4  8fc2fff4	lw	r2,-12(r30)
  869  000018a8  20410001	addi	r1,r2,#1
  870  000018ac  00011020	add	r2,r0,r1
  871  000018b0  afc2fff4	sw	-12(r30),r2
  872  000018b4  0bffffc8	j	L37_LF2
  873  000018b8  54000000	nop; delay slot nop
  874  000018bc          	L38_LF2:
  875  000018bc  8fc1fff4	lw	r1,-12(r30)
  876  000018c0  08000004	j	L36_LF2
  877  000018c4  54000000	nop; delay slot nop
  878  000018c8          	L36_LF2:
  879  000018c8  8fa20000	lw	r2,0(r29)
  880  000018cc  8fdffff8	lw	r31,-8(r30)
  881  000018d0  001ee820	add	r29,r0,r30
  882  000018d4  8fdefffc	lw	r30,-4(r30)
  883  000018d8  4be00000	jr	r31
  884  000018dc  54000000	nop
  885  000018e0          	.endproc _dstrlen
  886  000018e0          	.align 2
  887  000018e0          	.proc _dstrstr
  888  000018e0          	.global _dstrstr
  889  000018e0          	_dstrstr:
  890                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  891  000018e0  afbefffc	sw	-4(r29),r30; push fp
  892  000018e4  001df020	add	r30,r0,r29; fp = sp
  893  000018e8  afbffff8	sw	-8(r29),r31; push ret addr
  894  000018ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  895  000018f0  afa20000	sw	0(r29),r2
  896  000018f4  23bdfff8	addi	r29,r29,#-8
  897  000018f8  001d0820	add	r1,r0,r29
  898  000018fc  8fc20004	lw	r2,4(r30)
  899  00001900  ac220000	sw	(r1),r2
  900  00001904  0fffff5c	jal	_dstrlen
  901  00001908  54000000	nop; delay slot nop
  902  0000190c  23bd0008	addi	r29,r29,#8
  903  00001910  afc1fff4	sw	-12(r30),r1
  904  00001914          	L41_LF2:
  905  00001914  8fc10000	lw	r1,(r30)
  906  00001918  90220000	lbu	r2,(r1)
  907  0000191c  64410000	snei	r1,r2,#0
  908  00001920  1420000c	bnez	r1,L43_LF2
  909  00001924  54000000	nop; delay slot nop
  910  00001928  08000060	j	L42_LF2
  911  0000192c  54000000	nop; delay slot nop
  912  00001930          	L43_LF2:
  913  00001930  23bdfff0	addi	r29,r29,#-16
  914  00001934  001d0820	add	r1,r0,r29
  915  00001938  8fc20000	lw	r2,(r30)
  916  0000193c  ac220000	sw	(r1),r2
  917  00001940  8fc20004	lw	r2,4(r30)
  918  00001944  ac220004	sw	4(r1),r2
  919  00001948  8fc2fff4	lw	r2,-12(r30)
  920  0000194c  ac220008	sw	8(r1),r2
  921  00001950  0ffffdc0	jal	_dstrncmp
  922  00001954  54000000	nop; delay slot nop
  923  00001958  23bd0010	addi	r29,r29,#16
  924  0000195c  64220000	snei	r2,r1,#0
  925  00001960  14400010	bnez	r2,L44_LF2
  926  00001964  54000000	nop; delay slot nop
  927  00001968  8fc10000	lw	r1,(r30)
  928  0000196c  08000028	j	L40_LF2
  929  00001970  54000000	nop; delay slot nop
  930  00001974          	L44_LF2:
  931  00001974  8fc20000	lw	r2,(r30)
  932  00001978  20410001	addi	r1,r2,#1
  933  0000197c  00011020	add	r2,r0,r1
  934  00001980  afc20000	sw	(r30),r2
  935  00001984  0bffff8c	j	L41_LF2
  936  00001988  54000000	nop; delay slot nop
  937  0000198c          	L42_LF2:
  938  0000198c  20010000	addi	r1,r0,#0
  939  00001990  08000004	j	L40_LF2
  940  00001994  54000000	nop; delay slot nop
  941  00001998          	L40_LF2:
  942  00001998  8fa20000	lw	r2,0(r29)
  943  0000199c  8fdffff8	lw	r31,-8(r30)
  944  000019a0  001ee820	add	r29,r0,r30
  945  000019a4  8fdefffc	lw	r30,-4(r30)
  946  000019a8  4be00000	jr	r31
  947  000019ac  54000000	nop
  948  000019b0          	.endproc _dstrstr
  949  000019b0          	.align 2
  950  000019b0          	.proc _dmindex
  951  000019b0          	.global _dmindex
  952  000019b0          	_dmindex:
  953                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  954  000019b0  afbefffc	sw	-4(r29),r30; push fp
  955  000019b4  001df020	add	r30,r0,r29; fp = sp
  956  000019b8  afbffff8	sw	-8(r29),r31; push ret addr
  957  000019bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  958  000019c0  afa20000	sw	0(r29),r2
  959  000019c4  54000000	nop
  960  000019c8          	L46_LF2:
  961  000019c8  8fc10000	lw	r1,(r30)
  962  000019cc  90220000	lbu	r2,(r1)
  963  000019d0  64410000	snei	r1,r2,#0
  964  000019d4  1420000c	bnez	r1,L48_LF2
  965  000019d8  54000000	nop; delay slot nop
  966  000019dc  08000070	j	L47_LF2
  967  000019e0  54000000	nop; delay slot nop
  968  000019e4          	L48_LF2:
  969  000019e4  8fc10004	lw	r1,4(r30)
  970  000019e8  afc1fff4	sw	-12(r30),r1
  971  000019ec          	L49_LF2:
  972  000019ec  8fc1fff4	lw	r1,-12(r30)
  973  000019f0  90220000	lbu	r2,(r1)
  974  000019f4  64410000	snei	r1,r2,#0
  975  000019f8  1420000c	bnez	r1,L52_LF2
  976  000019fc  54000000	nop; delay slot nop
  977  00001a00  08000044	j	L50_LF2
  978  00001a04  54000000	nop; delay slot nop
  979  00001a08          	L52_LF2:
  980  00001a08  8fc10000	lw	r1,(r30)
  981  00001a0c  8fc2fff4	lw	r2,-12(r30)
  982  00001a10  90210000	lbu	r1,(r1)
  983  00001a14  90420000	lbu	r2,(r2)
  984  00001a18  00220828	seq	r1,r1,r2
  985  00001a1c  10200010	beqz	r1,L51_LF2
  986  00001a20  54000000	nop; delay slot nop
  987  00001a24  8fc10000	lw	r1,(r30)
  988  00001a28  08000030	j	L45_LF2
  989  00001a2c  54000000	nop; delay slot nop
  990  00001a30          	L53_LF2:
  991  00001a30          	L51_LF2:
  992  00001a30  8fc2fff4	lw	r2,-12(r30)
  993  00001a34  20410001	addi	r1,r2,#1
  994  00001a38  00011020	add	r2,r0,r1
  995  00001a3c  afc2fff4	sw	-12(r30),r2
  996  00001a40  0bffffa8	j	L49_LF2
  997  00001a44  54000000	nop; delay slot nop
  998  00001a48          	L50_LF2:
  999  00001a48  0bffff7c	j	L46_LF2
 1000  00001a4c  54000000	nop; delay slot nop
 1001  00001a50          	L47_LF2:
 1002  00001a50  20010000	addi	r1,r0,#0
 1003  00001a54  08000004	j	L45_LF2
 1004  00001a58  54000000	nop; delay slot nop
 1005  00001a5c          	L45_LF2:
 1006  00001a5c  8fa20000	lw	r2,0(r29)
 1007  00001a60  8fdffff8	lw	r31,-8(r30)
 1008  00001a64  001ee820	add	r29,r0,r30
 1009  00001a68  8fdefffc	lw	r30,-4(r30)
 1010  00001a6c  4be00000	jr	r31
 1011  00001a70  54000000	nop
 1012  00001a74          	.endproc _dmindex
 1013  00001a74          	.align 2
 1014  00001a74          	.proc _dindex
 1015  00001a74          	.global _dindex
 1016  00001a74          	_dindex:
 1017                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1018  00001a74  afbefffc	sw	-4(r29),r30; push fp
 1019  00001a78  001df020	add	r30,r0,r29; fp = sp
 1020  00001a7c  afbffff8	sw	-8(r29),r31; push ret addr
 1021  00001a80  2fbd0010	subui	r29,r29,#16; alloc local storage
 1022  00001a84  afa20000	sw	0(r29),r2
 1023  00001a88  54000000	nop
 1024  00001a8c          	L55_LF2:
 1025  00001a8c  8fc10000	lw	r1,(r30)
 1026  00001a90  90220000	lbu	r2,(r1)
 1027  00001a94  64410000	snei	r1,r2,#0
 1028  00001a98  1420000c	bnez	r1,L57_LF2
 1029  00001a9c  54000000	nop; delay slot nop
 1030  00001aa0  08000040	j	L56_LF2
 1031  00001aa4  54000000	nop; delay slot nop
 1032  00001aa8          	L57_LF2:
 1033  00001aa8  8fc10000	lw	r1,(r30)
 1034  00001aac  90220000	lbu	r2,(r1)
 1035  00001ab0  8fc10004	lw	r1,4(r30)
 1036  00001ab4  00411028	seq	r2,r2,r1
 1037  00001ab8  10400010	beqz	r2,L58_LF2
 1038  00001abc  54000000	nop; delay slot nop
 1039  00001ac0  8fc10000	lw	r1,(r30)
 1040  00001ac4  08000028	j	L54_LF2
 1041  00001ac8  54000000	nop; delay slot nop
 1042  00001acc          	L58_LF2:
 1043  00001acc  8fc20000	lw	r2,(r30)
 1044  00001ad0  20410001	addi	r1,r2,#1
 1045  00001ad4  00011020	add	r2,r0,r1
 1046  00001ad8  afc20000	sw	(r30),r2
 1047  00001adc  0bffffac	j	L55_LF2
 1048  00001ae0  54000000	nop; delay slot nop
 1049  00001ae4          	L56_LF2:
 1050  00001ae4  20010000	addi	r1,r0,#0
 1051  00001ae8  08000004	j	L54_LF2
 1052  00001aec  54000000	nop; delay slot nop
 1053  00001af0          	L54_LF2:
 1054  00001af0  8fa20000	lw	r2,0(r29)
 1055  00001af4  8fdffff8	lw	r31,-8(r30)
 1056  00001af8  001ee820	add	r29,r0,r30
 1057  00001afc  8fdefffc	lw	r30,-4(r30)
 1058  00001b00  4be00000	jr	r31
 1059  00001b04  54000000	nop
 1060  00001b08          	.endproc _dindex
 1061  00001b08          	.align 2
 1062  00001b08          	.proc _ditoa
 1063  00001b08          	.global _ditoa
 1064  00001b08          	_ditoa:
 1065                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1066  00001b08  afbefffc	sw	-4(r29),r30; push fp
 1067  00001b0c  001df020	add	r30,r0,r29; fp = sp
 1068  00001b10  afbffff8	sw	-8(r29),r31; push ret addr
 1069  00001b14  2fbd0018	subui	r29,r29,#24; alloc local storage
 1070  00001b18  afa20000	sw	0(r29),r2
 1071  00001b1c  afa30004	sw	4(r29),r3
 1072  00001b20  8fc10000	lw	r1,(r30)
 1073  00001b24  68220000	slti	r2,r1,#0
 1074  00001b28  1040002c	beqz	r2,L60_LF2
 1075  00001b2c  54000000	nop; delay slot nop
 1076  00001b30  8fc10004	lw	r1,4(r30)
 1077  00001b34  20220001	addi	r2,r1,#1
 1078  00001b38  afc20004	sw	4(r30),r2
 1079  00001b3c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1080  00001b40  a0220000	sb	(r1),r2
 1081  00001b44  8fc10000	lw	r1,(r30)
 1082  00001b48  00011022	sub	r2,r0,r1
 1083  00001b4c  afc20000	sw	(r30),r2
 1084  00001b50  08000118	j	L61_LF2
 1085  00001b54  54000000	nop; delay slot nop
 1086  00001b58          	L60_LF2:
 1087  00001b58  8fc10000	lw	r1,(r30)
 1088  00001b5c  64220000	snei	r2,r1,#0
 1089  00001b60  14400020	bnez	r2,L62_LF2
 1090  00001b64  54000000	nop; delay slot nop
 1091  00001b68  8fc10004	lw	r1,4(r30)
 1092  00001b6c  20220001	addi	r2,r1,#1
 1093  00001b70  afc20004	sw	4(r30),r2
 1094  00001b74  20020030	addi	r2,r0,(#0x30)&0xff
 1095  00001b78  a0220000	sb	(r1),r2
 1096  00001b7c  080000ec	j	L61_LF2
 1097  00001b80  54000000	nop; delay slot nop
 1098  00001b84          	L62_LF2:
 1099  00001b84  20010001	addi	r1,r0,#1
 1100  00001b88  afc1fff4	sw	-12(r30),r1
 1101  00001b8c          	L64_LF2:
 1102  00001b8c  8fc1fff4	lw	r1,-12(r30)
 1103  00001b90  8fc20000	lw	r2,(r30)
 1104  00001b94  0022082c	sle	r1,r1,r2
 1105  00001b98  1420000c	bnez	r1,L66_LF2
 1106  00001b9c  54000000	nop; delay slot nop
 1107  00001ba0  08000024	j	L65_LF2
 1108  00001ba4  54000000	nop; delay slot nop
 1109  00001ba8          	L67_LF2:
 1110  00001ba8          	L66_LF2:
 1111  00001ba8  8fc1fff4	lw	r1,-12(r30)
 1112  00001bac  00011820	add	r3,r0,r1
 1113  00001bb0  50620002	slli	r2,r3,#0x2
 1114  00001bb4  00411020	add	r2,r2,r1
 1115  00001bb8  50410001	slli	r1,r2,#0x1
 1116  00001bbc  afc1fff4	sw	-12(r30),r1
 1117  00001bc0  0bffffc8	j	L64_LF2
 1118  00001bc4  54000000	nop; delay slot nop
 1119  00001bc8          	L65_LF2:
 1120  00001bc8  54000000	nop
 1121  00001bcc          	L68_LF2:
 1122  00001bcc  8fc1fff4	lw	r1,-12(r30)
 1123  00001bd0  2002000a	addi	r2,r0,#10
 1124  00001bd4  00200035	movi2fp	f0,r1
 1125  00001bd8  00400835	movi2fp	f1,r2
 1126  00001bdc  0401000f	div	f0,f0,f1
 1127  00001be0  00000834	movfp2i	r1,f0
 1128  00001be4  afc1fff4	sw	-12(r30),r1
 1129  00001be8  8fc10004	lw	r1,4(r30)
 1130  00001bec  20220001	addi	r2,r1,#1
 1131  00001bf0  afc20004	sw	4(r30),r2
 1132  00001bf4  8fc20000	lw	r2,(r30)
 1133  00001bf8  8fc3fff4	lw	r3,-12(r30)
 1134  00001bfc  00400035	movi2fp	f0,r2
 1135  00001c00  00600835	movi2fp	f1,r3
 1136  00001c04  0401000f	div	f0,f0,f1
 1137  00001c08  00001034	movfp2i	r2,f0
 1138  00001c0c  00021820	add	r3,r0,r2
 1139  00001c10  20620030	addi	r2,r3,#48
 1140  00001c14  a0220000	sb	(r1),r2
 1141  00001c18  8fc10000	lw	r1,(r30)
 1142  00001c1c  8fc3fff4	lw	r3,-12(r30)
 1143  00001c20  00200035	movi2fp	f0,r1
 1144  00001c24  00600835	movi2fp	f1,r3
 1145  00001c28  0401000f	div	f0,f0,f1
 1146  00001c2c  00001034	movfp2i	r2,f0
 1147  00001c30  8fc3fff4	lw	r3,-12(r30)
 1148  00001c34  00400035	movi2fp	f0,r2
 1149  00001c38  00600835	movi2fp	f1,r3
 1150  00001c3c  0401000e	mult	f0,f0,f1
 1151  00001c40  00001034	movfp2i	r2,f0
 1152  00001c44  00220822	sub	r1,r1,r2
 1153  00001c48  afc10000	sw	(r30),r1
 1154  00001c4c          	L70_LF2:
 1155  00001c4c  8fc1fff4	lw	r1,-12(r30)
 1156  00001c50  6c220001	sgti	r2,r1,#1
 1157  00001c54  1440000c	bnez	r2,L71_LF2
 1158  00001c58  54000000	nop; delay slot nop
 1159  00001c5c  0800000c	j	L61_LF2
 1160  00001c60  54000000	nop; delay slot nop
 1161  00001c64          	L71_LF2:
 1162  00001c64  0bffff64	j	L68_LF2
 1163  00001c68  54000000	nop; delay slot nop
 1164  00001c6c          	L69_LF2:
 1165  00001c6c          	L63_LF2:
 1166  00001c6c          	L61_LF2:
 1167  00001c6c  8fc10004	lw	r1,4(r30)
 1168  00001c70  20020000	addi	r2,r0,(#0x0)&0xff
 1169  00001c74  a0220000	sb	(r1),r2
 1170  00001c78          	L59_LF2:
 1171  00001c78  8fa20000	lw	r2,0(r29)
 1172  00001c7c  8fa30004	lw	r3,4(r29)
 1173  00001c80  8fdffff8	lw	r31,-8(r30)
 1174  00001c84  001ee820	add	r29,r0,r30
 1175  00001c88  8fdefffc	lw	r30,-4(r30)
 1176  00001c8c  4be00000	jr	r31
 1177  00001c90  54000000	nop
 1178  00001c94          	.endproc _ditoa
 1179  00001c94          	.align 2
 1180  00001c94          	.proc _dstrtol
 1181  00001c94          	.global _dstrtol
 1182  00001c94          	_dstrtol:
 1183                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1184  00001c94  afbefffc	sw	-4(r29),r30; push fp
 1185  00001c98  001df020	add	r30,r0,r29; fp = sp
 1186  00001c9c  afbffff8	sw	-8(r29),r31; push ret addr
 1187  00001ca0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1188  00001ca4  afa20000	sw	0(r29),r2
 1189  00001ca8  20010000	addi	r1,r0,#0
 1190  00001cac  afc1fff4	sw	-12(r30),r1
 1191  00001cb0          	L73_LF2:
 1192  00001cb0  8fc10000	lw	r1,(r30)
 1193  00001cb4  90220000	lbu	r2,(r1)
 1194  00001cb8  60410020	seqi	r1,r2,#32
 1195  00001cbc  14200034	bnez	r1,L75_LF2
 1196  00001cc0  54000000	nop; delay slot nop
 1197  00001cc4  8fc10000	lw	r1,(r30)
 1198  00001cc8  90220000	lbu	r2,(r1)
 1199  00001ccc  60410009	seqi	r1,r2,#9
 1200  00001cd0  14200020	bnez	r1,L75_LF2
 1201  00001cd4  54000000	nop; delay slot nop
 1202  00001cd8  8fc10000	lw	r1,(r30)
 1203  00001cdc  90220000	lbu	r2,(r1)
 1204  00001ce0  6041000a	seqi	r1,r2,#10
 1205  00001ce4  1420000c	bnez	r1,L75_LF2
 1206  00001ce8  54000000	nop; delay slot nop
 1207  00001cec  0800001c	j	L74_LF2
 1208  00001cf0  54000000	nop; delay slot nop
 1209  00001cf4          	L75_LF2:
 1210  00001cf4  8fc20000	lw	r2,(r30)
 1211  00001cf8  20410001	addi	r1,r2,#1
 1212  00001cfc  00011020	add	r2,r0,r1
 1213  00001d00  afc20000	sw	(r30),r2
 1214  00001d04  0bffffa8	j	L73_LF2
 1215  00001d08  54000000	nop; delay slot nop
 1216  00001d0c          	L74_LF2:
 1217  00001d0c  8fc10004	lw	r1,4(r30)
 1218  00001d10  64220000	snei	r2,r1,#0
 1219  00001d14  10400010	beqz	r2,L76_LF2
 1220  00001d18  54000000	nop; delay slot nop
 1221  00001d1c  8fc10004	lw	r1,4(r30)
 1222  00001d20  8fc20000	lw	r2,(r30)
 1223  00001d24  ac220000	sw	(r1),r2
 1224  00001d28          	L76_LF2:
 1225  00001d28  8fc10000	lw	r1,(r30)
 1226  00001d2c  90220000	lbu	r2,(r1)
 1227  00001d30  64410000	snei	r1,r2,#0
 1228  00001d34  14200010	bnez	r1,L77_LF2
 1229  00001d38  54000000	nop; delay slot nop
 1230  00001d3c  8fc1fff4	lw	r1,-12(r30)
 1231  00001d40  08000294	j	L72_LF2
 1232  00001d44  54000000	nop; delay slot nop
 1233  00001d48          	L77_LF2:
 1234  00001d48  8fc10000	lw	r1,(r30)
 1235  00001d4c  90220000	lbu	r2,(r1)
 1236  00001d50  6041002d	seqi	r1,r2,#45
 1237  00001d54  10200024	beqz	r1,L78_LF2
 1238  00001d58  54000000	nop; delay slot nop
 1239  00001d5c  2001ffff	addi	r1,r0,#-1
 1240  00001d60  afc1ffec	sw	-20(r30),r1
 1241  00001d64  8fc20000	lw	r2,(r30)
 1242  00001d68  20410001	addi	r1,r2,#1
 1243  00001d6c  00011020	add	r2,r0,r1
 1244  00001d70  afc20000	sw	(r30),r2
 1245  00001d74  0800000c	j	L79_LF2
 1246  00001d78  54000000	nop; delay slot nop
 1247  00001d7c          	L78_LF2:
 1248  00001d7c  20010001	addi	r1,r0,#1
 1249  00001d80  afc1ffec	sw	-20(r30),r1
 1250  00001d84          	L79_LF2:
 1251  00001d84  8fc10008	lw	r1,8(r30)
 1252  00001d88  64220000	snei	r2,r1,#0
 1253  00001d8c  14400090	bnez	r2,L80_LF2
 1254  00001d90  54000000	nop; delay slot nop
 1255  00001d94  8fc10000	lw	r1,(r30)
 1256  00001d98  90220000	lbu	r2,(r1)
 1257  00001d9c  60410030	seqi	r1,r2,#48
 1258  00001da0  10200074	beqz	r1,L81_LF2
 1259  00001da4  54000000	nop; delay slot nop
 1260  00001da8  8fc20000	lw	r2,(r30)
 1261  00001dac  20410001	addi	r1,r2,#1
 1262  00001db0  00011020	add	r2,r0,r1
 1263  00001db4  afc20000	sw	(r30),r2
 1264  00001db8  8fc10000	lw	r1,(r30)
 1265  00001dbc  90220000	lbu	r2,(r1)
 1266  00001dc0  60410078	seqi	r1,r2,#120
 1267  00001dc4  14200020	bnez	r1,L83_LF2
 1268  00001dc8  54000000	nop; delay slot nop
 1269  00001dcc  8fc10000	lw	r1,(r30)
 1270  00001dd0  90220000	lbu	r2,(r1)
 1271  00001dd4  60410058	seqi	r1,r2,#88
 1272  00001dd8  1420000c	bnez	r1,L83_LF2
 1273  00001ddc  54000000	nop; delay slot nop
 1274  00001de0  08000024	j	L82_LF2
 1275  00001de4  54000000	nop; delay slot nop
 1276  00001de8          	L83_LF2:
 1277  00001de8  20010010	addi	r1,r0,#16
 1278  00001dec  afc10008	sw	8(r30),r1
 1279  00001df0  8fc20000	lw	r2,(r30)
 1280  00001df4  20410001	addi	r1,r2,#1
 1281  00001df8  00011020	add	r2,r0,r1
 1282  00001dfc  afc20000	sw	(r30),r2
 1283  00001e00  0800000c	j	L84_LF2
 1284  00001e04  54000000	nop; delay slot nop
 1285  00001e08          	L82_LF2:
 1286  00001e08  20010008	addi	r1,r0,#8
 1287  00001e0c  afc10008	sw	8(r30),r1
 1288  00001e10          	L84_LF2:
 1289  00001e10  0800000c	j	L80_LF2
 1290  00001e14  54000000	nop; delay slot nop
 1291  00001e18          	L81_LF2:
 1292  00001e18  2001000a	addi	r1,r0,#10
 1293  00001e1c  afc10008	sw	8(r30),r1
 1294  00001e20          	L85_LF2:
 1295  00001e20          	L80_LF2:
 1296  00001e20  8fc10008	lw	r1,8(r30)
 1297  00001e24  70220000	slei	r2,r1,#0
 1298  00001e28  1440001c	bnez	r2,L87_LF2
 1299  00001e2c  54000000	nop; delay slot nop
 1300  00001e30  8fc10008	lw	r1,8(r30)
 1301  00001e34  6c220010	sgti	r2,r1,#16
 1302  00001e38  1440000c	bnez	r2,L87_LF2
 1303  00001e3c  54000000	nop; delay slot nop
 1304  00001e40  08000010	j	L86_LF2
 1305  00001e44  54000000	nop; delay slot nop
 1306  00001e48          	L87_LF2:
 1307  00001e48  8fc1fff4	lw	r1,-12(r30)
 1308  00001e4c  08000188	j	L72_LF2
 1309  00001e50  54000000	nop; delay slot nop
 1310  00001e54          	L86_LF2:
 1311  00001e54  54000000	nop
 1312  00001e58          	L88_LF2:
 1313  00001e58  8fc10000	lw	r1,(r30)
 1314  00001e5c  90220000	lbu	r2,(r1)
 1315  00001e60  6c41002f	sgtui	r1,r2,#47
 1316  00001e64  10200030	beqz	r1,L91_LF2
 1317  00001e68  54000000	nop; delay slot nop
 1318  00001e6c  8fc10000	lw	r1,(r30)
 1319  00001e70  90220000	lbu	r2,(r1)
 1320  00001e74  70410039	sleui	r1,r2,#57
 1321  00001e78  1020001c	beqz	r1,L91_LF2
 1322  00001e7c  54000000	nop; delay slot nop
 1323  00001e80  8fc10000	lw	r1,(r30)
 1324  00001e84  90220000	lbu	r2,(r1)
 1325  00001e88  2041ffd0	addi	r1,r2,#-48
 1326  00001e8c  afc1fff0	sw	-16(r30),r1
 1327  00001e90  0800008c	j	L92_LF2
 1328  00001e94  54000000	nop; delay slot nop
 1329  00001e98          	L91_LF2:
 1330  00001e98  8fc10000	lw	r1,(r30)
 1331  00001e9c  90220000	lbu	r2,(r1)
 1332  00001ea0  6c410060	sgtui	r1,r2,#96
 1333  00001ea4  10200030	beqz	r1,L93_LF2
 1334  00001ea8  54000000	nop; delay slot nop
 1335  00001eac  8fc10000	lw	r1,(r30)
 1336  00001eb0  90220000	lbu	r2,(r1)
 1337  00001eb4  7041007a	sleui	r1,r2,#122
 1338  00001eb8  1020001c	beqz	r1,L93_LF2
 1339  00001ebc  54000000	nop; delay slot nop
 1340  00001ec0  8fc10000	lw	r1,(r30)
 1341  00001ec4  90220000	lbu	r2,(r1)
 1342  00001ec8  2041ffa9	addi	r1,r2,#-87
 1343  00001ecc  afc1fff0	sw	-16(r30),r1
 1344  00001ed0  0800004c	j	L92_LF2
 1345  00001ed4  54000000	nop; delay slot nop
 1346  00001ed8          	L93_LF2:
 1347  00001ed8  8fc10000	lw	r1,(r30)
 1348  00001edc  90220000	lbu	r2,(r1)
 1349  00001ee0  6c410040	sgtui	r1,r2,#64
 1350  00001ee4  10200030	beqz	r1,L95_LF2
 1351  00001ee8  54000000	nop; delay slot nop
 1352  00001eec  8fc10000	lw	r1,(r30)
 1353  00001ef0  90220000	lbu	r2,(r1)
 1354  00001ef4  7041005a	sleui	r1,r2,#90
 1355  00001ef8  1020001c	beqz	r1,L95_LF2
 1356  00001efc  54000000	nop; delay slot nop
 1357  00001f00  8fc10000	lw	r1,(r30)
 1358  00001f04  90220000	lbu	r2,(r1)
 1359  00001f08  2041ffc9	addi	r1,r2,#-55
 1360  00001f0c  afc1fff0	sw	-16(r30),r1
 1361  00001f10  0800000c	j	L92_LF2
 1362  00001f14  54000000	nop; delay slot nop
 1363  00001f18          	L95_LF2:
 1364  00001f18  200103e8	addi	r1,r0,#1000
 1365  00001f1c  afc1fff0	sw	-16(r30),r1
 1366  00001f20          	L96_LF2:
 1367  00001f20          	L94_LF2:
 1368  00001f20          	L92_LF2:
 1369  00001f20  8fc1fff0	lw	r1,-16(r30)
 1370  00001f24  8fc20008	lw	r2,8(r30)
 1371  00001f28  0022082a	slt	r1,r1,r2
 1372  00001f2c  10200040	beqz	r1,L90_LF2
 1373  00001f30  54000000	nop; delay slot nop
 1374  00001f34  8fc1fff4	lw	r1,-12(r30)
 1375  00001f38  8fc20008	lw	r2,8(r30)
 1376  00001f3c  00200035	movi2fp	f0,r1
 1377  00001f40  00400835	movi2fp	f1,r2
 1378  00001f44  0401000e	mult	f0,f0,f1
 1379  00001f48  00000834	movfp2i	r1,f0
 1380  00001f4c  afc1fff4	sw	-12(r30),r1
 1381  00001f50  8fc1fff4	lw	r1,-12(r30)
 1382  00001f54  8fc2fff0	lw	r2,-16(r30)
 1383  00001f58  00220820	add	r1,r1,r2
 1384  00001f5c  afc1fff4	sw	-12(r30),r1
 1385  00001f60  8fc20000	lw	r2,(r30)
 1386  00001f64  20410001	addi	r1,r2,#1
 1387  00001f68  00011020	add	r2,r0,r1
 1388  00001f6c  afc20000	sw	(r30),r2
 1389  00001f70          	L97_LF2:
 1390  00001f70          	L90_LF2:
 1391  00001f70  8fc1fff0	lw	r1,-16(r30)
 1392  00001f74  8fc20008	lw	r2,8(r30)
 1393  00001f78  0022082a	slt	r1,r1,r2
 1394  00001f7c  1420000c	bnez	r1,L98_LF2
 1395  00001f80  54000000	nop; delay slot nop
 1396  00001f84  0800000c	j	L89_LF2
 1397  00001f88  54000000	nop; delay slot nop
 1398  00001f8c          	L98_LF2:
 1399  00001f8c  0bfffec8	j	L88_LF2
 1400  00001f90  54000000	nop; delay slot nop
 1401  00001f94          	L89_LF2:
 1402  00001f94  8fc10004	lw	r1,4(r30)
 1403  00001f98  64220000	snei	r2,r1,#0
 1404  00001f9c  10400010	beqz	r2,L99_LF2
 1405  00001fa0  54000000	nop; delay slot nop
 1406  00001fa4  8fc10004	lw	r1,4(r30)
 1407  00001fa8  8fc20000	lw	r2,(r30)
 1408  00001fac  ac220000	sw	(r1),r2
 1409  00001fb0          	L99_LF2:
 1410  00001fb0  8fc1fff4	lw	r1,-12(r30)
 1411  00001fb4  8fc2ffec	lw	r2,-20(r30)
 1412  00001fb8  00200035	movi2fp	f0,r1
 1413  00001fbc  00400835	movi2fp	f1,r2
 1414  00001fc0  0401000e	mult	f0,f0,f1
 1415  00001fc4  00000834	movfp2i	r1,f0
 1416  00001fc8  afc1fff4	sw	-12(r30),r1
 1417  00001fcc  8fc1fff4	lw	r1,-12(r30)
 1418  00001fd0  08000004	j	L72_LF2
 1419  00001fd4  54000000	nop; delay slot nop
 1420  00001fd8          	L72_LF2:
 1421  00001fd8  8fa20000	lw	r2,0(r29)
 1422  00001fdc  8fdffff8	lw	r31,-8(r30)
 1423  00001fe0  001ee820	add	r29,r0,r30
 1424  00001fe4  8fdefffc	lw	r30,-4(r30)
 1425  00001fe8  4be00000	jr	r31
 1426  00001fec  54000000	nop
 1427  00001ff0          	.endproc _dstrtol
 1428  00001ff0          	.align 2
 1429  00001ff0          	.proc _bcopy
 1430  00001ff0          	.global _bcopy
 1431  00001ff0          	_bcopy:
 1432                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1433  00001ff0  afbefffc	sw	-4(r29),r30; push fp
 1434  00001ff4  001df020	add	r30,r0,r29; fp = sp
 1435  00001ff8  afbffff8	sw	-8(r29),r31; push ret addr
 1436  00001ffc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1437  00002000  afa20000	sw	0(r29),r2
 1438  00002004  afa30004	sw	4(r29),r3
 1439  00002008  54000000	nop
 1440  0000200c          	L101_LF2:
 1441  0000200c  8fc10008	lw	r1,8(r30)
 1442  00002010  2022ffff	addi	r2,r1,#-1
 1443  00002014  afc20008	sw	8(r30),r2
 1444  00002018  6c210000	sgti	r1,r1,#0
 1445  0000201c  1420000c	bnez	r1,L103_LF2
 1446  00002020  54000000	nop; delay slot nop
 1447  00002024  0800002c	j	L102_LF2
 1448  00002028  54000000	nop; delay slot nop
 1449  0000202c          	L103_LF2:
 1450  0000202c  8fc10004	lw	r1,4(r30)
 1451  00002030  20220001	addi	r2,r1,#1
 1452  00002034  afc20004	sw	4(r30),r2
 1453  00002038  8fc20000	lw	r2,(r30)
 1454  0000203c  20430001	addi	r3,r2,#1
 1455  00002040  afc30000	sw	(r30),r3
 1456  00002044  80420000	lb	r2,(r2)
 1457  00002048  a0220000	sb	(r1),r2
 1458  0000204c  0bffffbc	j	L101_LF2
 1459  00002050  54000000	nop; delay slot nop
 1460  00002054          	L102_LF2:
 1461  00002054          	L100_LF2:
 1462  00002054  8fa20000	lw	r2,0(r29)
 1463  00002058  8fa30004	lw	r3,4(r29)
 1464  0000205c  8fdffff8	lw	r31,-8(r30)
 1465  00002060  001ee820	add	r29,r0,r30
 1466  00002064  8fdefffc	lw	r30,-4(r30)
 1467  00002068  4be00000	jr	r31
 1468  0000206c  54000000	nop
 1469  00002070          	.endproc _bcopy
 1470  00002070          	.align 2
 1471  00002070          	.proc _bzero
 1472  00002070          	.global _bzero
 1473  00002070          	_bzero:
 1474                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1475  00002070  afbefffc	sw	-4(r29),r30; push fp
 1476  00002074  001df020	add	r30,r0,r29; fp = sp
 1477  00002078  afbffff8	sw	-8(r29),r31; push ret addr
 1478  0000207c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1479  00002080  afa20000	sw	0(r29),r2
 1480  00002084  54000000	nop
 1481  00002088          	L105_LF2:
 1482  00002088  8fc10004	lw	r1,4(r30)
 1483  0000208c  2022ffff	addi	r2,r1,#-1
 1484  00002090  afc20004	sw	4(r30),r2
 1485  00002094  6c210000	sgti	r1,r1,#0
 1486  00002098  1420000c	bnez	r1,L107_LF2
 1487  0000209c  54000000	nop; delay slot nop
 1488  000020a0  08000020	j	L106_LF2
 1489  000020a4  54000000	nop; delay slot nop
 1490  000020a8          	L107_LF2:
 1491  000020a8  8fc10000	lw	r1,(r30)
 1492  000020ac  20220001	addi	r2,r1,#1
 1493  000020b0  afc20000	sw	(r30),r2
 1494  000020b4  20020000	addi	r2,r0,(#0x0)&0xff
 1495  000020b8  a0220000	sb	(r1),r2
 1496  000020bc  0bffffc8	j	L105_LF2
 1497  000020c0  54000000	nop; delay slot nop
 1498  000020c4          	L106_LF2:
 1499  000020c4          	L104_LF2:
 1500  000020c4  8fa20000	lw	r2,0(r29)
 1501  000020c8  8fdffff8	lw	r31,-8(r30)
 1502  000020cc  001ee820	add	r29,r0,r30
 1503  000020d0  8fdefffc	lw	r30,-4(r30)
 1504  000020d4  4be00000	jr	r31
 1505  000020d8  54000000	nop
 1506  000020dc          	.endproc _bzero
 1507  000020dc          	.align 2
 1508  000020dc          	.proc _min
 1509  000020dc          	.global _min
 1510  000020dc          	_min:
 1511                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1512  000020dc  afbefffc	sw	-4(r29),r30; push fp
 1513  000020e0  001df020	add	r30,r0,r29; fp = sp
 1514  000020e4  afbffff8	sw	-8(r29),r31; push ret addr
 1515  000020e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1516  000020ec  afa20000	sw	0(r29),r2
 1517  000020f0  afa30004	sw	4(r29),r3
 1518  000020f4  8fc10000	lw	r1,(r30)
 1519  000020f8  8fc20004	lw	r2,4(r30)
 1520  000020fc  0022182c	sle	r3,r1,r2
 1521  00002100  14600008	bnez	r3,L109_LF2
 1522  00002104  54000000	nop; delay slot nop
 1523  00002108  8fc10004	lw	r1,4(r30)
 1524  0000210c          	L109_LF2:
 1525  0000210c  08000004	j	L108_LF2
 1526  00002110  54000000	nop; delay slot nop
 1527  00002114          	L108_LF2:
 1528  00002114  8fa20000	lw	r2,0(r29)
 1529  00002118  8fa30004	lw	r3,4(r29)
 1530  0000211c  8fdffff8	lw	r31,-8(r30)
 1531  00002120  001ee820	add	r29,r0,r30
 1532  00002124  8fdefffc	lw	r30,-4(r30)
 1533  00002128  4be00000	jr	r31
 1534  0000212c  54000000	nop
 1535  00002130          	.endproc _min
 1536  00002130          	.align 2
 1537  00002130          	.proc _max
 1538  00002130          	.global _max
 1539  00002130          	_max:
 1540                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1541  00002130  afbefffc	sw	-4(r29),r30; push fp
 1542  00002134  001df020	add	r30,r0,r29; fp = sp
 1543  00002138  afbffff8	sw	-8(r29),r31; push ret addr
 1544  0000213c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1545  00002140  afa20000	sw	0(r29),r2
 1546  00002144  afa30004	sw	4(r29),r3
 1547  00002148  8fc10000	lw	r1,(r30)
 1548  0000214c  8fc20004	lw	r2,4(r30)
 1549  00002150  0022182d	sge	r3,r1,r2
 1550  00002154  14600008	bnez	r3,L111_LF2
 1551  00002158  54000000	nop; delay slot nop
 1552  0000215c  8fc10004	lw	r1,4(r30)
 1553  00002160          	L111_LF2:
 1554  00002160  08000004	j	L110_LF2
 1555  00002164  54000000	nop; delay slot nop
 1556  00002168          	L110_LF2:
 1557  00002168  8fa20000	lw	r2,0(r29)
 1558  0000216c  8fa30004	lw	r3,4(r29)
 1559  00002170  8fdffff8	lw	r31,-8(r30)
 1560  00002174  001ee820	add	r29,r0,r30
 1561  00002178  8fdefffc	lw	r30,-4(r30)
 1562  0000217c  4be00000	jr	r31
 1563  00002180  54000000	nop
 1564  00002184          	.endproc _max
 1565                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1566                      ;;;
 1567                      ;;; Most of the traps are called in files from libtraps.
 1570  00002184          	.align 2
 1571  00002184          	.proc _exit
 1572  00002184          	.global _exit
 1573  00002184          	_exit:
 1574  00002184  44000300	trap	#0x300
 1575  00002188  4be00000	jr	r31
 1576  0000218c  54000000	nop
 1577  00002190          	.endproc _exit
 1579                      ; for the benefit of gcc.
 1580  00002190          	.proc ___main
 1581  00002190          	.global ___main
 1582  00002190          	___main:
 1583  00002190  4be00000	jr	r31
 1584  00002194  54000000	nop
 1585  00002198          	.endproc ___main
 1586  00002198          	.text
 1587  00002198          	.global _etext
 1588  00002198          	_etext:
 1589  00002198          	.align 3
 1590  00002198          	.data
 1591  000030a1          	.global _edata
 1592  000030a1          	_edata:
