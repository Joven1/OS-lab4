 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 162
    4                      ; Text size: 4408
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  556e616c	.ascii "Unallocated Virtual Access (%d): Bad semaphore s_procs_completed (%d)!"
   85  00003038  6c6f6361	
   85  0000303c  74656420	
   85  00003040  56697274	
   85  00003044  75616c20	
   85  00003048  41636365	
   85  0000304c  73732028	
   85  00003050  2564293a	
   85  00003054  20426164	
   85  00003058  2073656d	
   85  0000305c  6170686f	
   85  00003060  72652073	
   85  00003064  5f70726f	
   85  00003068  63735f63	
   85  0000306c  6f6d706c	
   85  00003070  65746564	
   85  00003074  20282564	
   85  00003078  2921    	
   86  0000307a  0a00    	.ascii "\n\000"
   87  0000307c          	.align 2
   88  0000307c          	LC2_LF0:
   89  0000307c  41636365	.ascii "Accessing.... Location: %d Value: %d\n\000"
   89  00003080  7373696e	
   89  00003084  672e2e2e	
   89  00003088  2e204c6f	
   89  0000308c  63617469	
   89  00003090  6f6e3a20	
   89  00003094  25642056	
   89  00003098  616c7565	
   89  0000309c  3a202564	
   89  000030a0  0a00    	
   90  000030a2          	.text
   91  000010d4          	.align 2
   92  000010d4          	.proc _main
   93  000010d4          	.global _main
   94  000010d4          	_main:
   95                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   96  000010d4  afbefffc	sw	-4(r29),r30; push fp
   97  000010d8  001df020	add	r30,r0,r29; fp = sp
   98  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   99  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  100  000010e4  8fc20000	lw	r2,(r30)
  101  000010e8  8fc30004	lw	r3,4(r30)
  102  000010ec  0c001040	jal	___main
  103  000010f0  54000000	nop; not filled.
  104  000010f4  64410002	snei	r1,r2,#2
  105  000010f8  10200028	beqz	r1,L18_LF0
  106  000010fc  54000000	nop; not filled.
  107  00001100  23bdfff8	addi	r29,r29,#-8
  108  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  109  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  110  0000110c  afa40000	sw	(r29),r4
  111  00001110  0c00015c	jal	_Printf
  112  00001114  54000000	nop; not filled.
  113  00001118  0c00025c	jal	_Exit
  114  0000111c  54000000	nop; not filled.
  115  00001120  23bd0008	addi	r29,r29,#8
  116  00001124          	L18_LF0:
  117  00001124  23bdfff0	addi	r29,r29,#-16
  118  00001128  8c630004	lw	r3,4(r3)
  119  0000112c  afa30000	sw	(r29),r3
  120  00001130  20040000	addi	r4,r0,#0
  121  00001134  afa40004	sw	4(r29),r4
  122  00001138  2004000a	addi	r4,r0,#10
  123  0000113c  afa40008	sw	8(r29),r4
  124  00001140  0c000af0	jal	_dstrtol
  125  00001144  54000000	nop; not filled.
  126  00001148  00011020	add	r2,r0,r1
  127  0000114c  afa20000	sw	(r29),r2
  128  00001150  0c000170	jal	_sem_signal
  129  00001154  54000000	nop; not filled.
  130  00001158  23bd0010	addi	r29,r29,#16
  131  0000115c  64210001	snei	r1,r1,#1
  132  00001160  10200038	beqz	r1,L19_LF0
  133  00001164  54000000	nop; not filled.
  134  00001168  0c000110	jal	_getpid
  135  0000116c  54000000	nop; not filled.
  136  00001170  23bdfff0	addi	r29,r29,#-16
  137  00001174  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  138  00001178  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  139  0000117c  afa40000	sw	(r29),r4
  140  00001180  afa10004	sw	4(r29),r1
  141  00001184  afa20008	sw	8(r29),r2
  142  00001188  0c0000e4	jal	_Printf
  143  0000118c  54000000	nop; not filled.
  144  00001190  0c0001e4	jal	_Exit
  145  00001194  54000000	nop; not filled.
  146  00001198  23bd0010	addi	r29,r29,#16
  147  0000119c          	L19_LF0:
  148  0000119c  3c010009	lhi	r1,#9
  149  000011a0  24211000	addui	r1,r1,#4096
  150  000011a4  20040050	addi	r4,r0,#80
  151  000011a8  ac240000	sw	(r1),r4
  152  000011ac  23bdfff0	addi	r29,r29,#-16
  153  000011b0  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  154  000011b4  2484307c	addui	r4,r4,(LC2_LF0)&0xffff
  155  000011b8  afa40000	sw	(r29),r4
  156  000011bc  afa10004	sw	4(r29),r1
  157  000011c0  8c210000	lw	r1,(r1)
  158  000011c4  afa10008	sw	8(r29),r1
  159  000011c8  0c0000a4	jal	_Printf
  160  000011cc  54000000	nop; not filled.
  161  000011d0  afa20000	sw	(r29),r2
  162  000011d4  0c0000ec	jal	_sem_signal
  163  000011d8  54000000	nop; not filled.
  164  000011dc  23bd0010	addi	r29,r29,#16
  165  000011e0  64210001	snei	r1,r1,#1
  166  000011e4  10200038	beqz	r1,L20_LF0
  167  000011e8  54000000	nop; not filled.
  168  000011ec  0c00008c	jal	_getpid
  169  000011f0  54000000	nop; not filled.
  170  000011f4  23bdfff0	addi	r29,r29,#-16
  171  000011f8  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  172  000011fc  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  173  00001200  afa40000	sw	(r29),r4
  174  00001204  afa10004	sw	4(r29),r1
  175  00001208  afa20008	sw	8(r29),r2
  176  0000120c  0c000060	jal	_Printf
  177  00001210  54000000	nop; not filled.
  178  00001214  0c000160	jal	_Exit
  179  00001218  54000000	nop; not filled.
  180  0000121c  23bd0010	addi	r29,r29,#16
  181  00001220          	L20_LF0:
  182  00001220  0c000f00	jal	_exit
  183  00001224  54000000	nop
  184  00001228          	.endproc _main
  185                      ;;;
  186                      ;;; Stub functions for DLX traps.
  187                      ;;;
  188                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  189                      ;;;
  190                      ;;; The traps such as Open and Close
  191                      ;;; (note the capital letters) are for use by user programs.  The traps
  192                      ;;; with names such as open and close (lower case) are for use by the OS.
  193                      ;;;
  196  00001228          	.align 2
  198                      ;;; The following are the traps to be used by user-level programs
  199                      ;;;
  201  00001228          	.align 2
  202  00001228          	.proc _Open
  203  00001228          	.global _Open
  204  00001228          	_Open:
  205                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  206                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  207                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  208  00001228  44000213	trap	#0x213
  209  0000122c  4be00000	jr	r31
  210  00001230  54000000	nop
  211  00001234          	.endproc _Open
  213  00001234          	.proc _Close
  214  00001234          	.global _Close
  215  00001234          	_Close:
  216  00001234  44000214	trap	#0x214
  217  00001238  4be00000	jr	r31
  218  0000123c  54000000	nop
  219  00001240          	.endproc _Close
  221  00001240          	.proc _Read
  222  00001240          	.global _Read
  223  00001240          	_Read:
  224  00001240  44000210	trap	#0x210
  225  00001244  4be00000	jr	r31
  226  00001248  54000000	nop
  227  0000124c          	.endproc _Read
  229  0000124c          	.proc _Write
  230  0000124c          	.global _Write
  231  0000124c          	_Write:
  232  0000124c  44000211	trap	#0x211
  233  00001250  4be00000	jr	r31
  234  00001254  54000000	nop
  235  00001258          	.endproc _Write
  237  00001258          	.proc _Lseek
  238  00001258          	.global _Lseek
  239  00001258          	_Lseek:
  240  00001258  44000212	trap	#0x212
  241  0000125c  4be00000	jr	r31
  242  00001260  54000000	nop
  243  00001264          	.endproc _Lseek
  245  00001264          	.proc _Putchar
  246  00001264          	.global _Putchar
  247  00001264          	_Putchar:
  248  00001264  44000280	trap	#0x280
  249  00001268  4be00000	jr	r31
  250  0000126c  54000000	nop
  251  00001270          	.endproc _Putchar
  253  00001270          	.proc _Printf
  254  00001270          	.global _Printf
  255  00001270          	_Printf:
  256  00001270  44000201	trap	#0x201
  257  00001274  4be00000	jr	r31
  258  00001278  54000000	nop
  259  0000127c          	.endproc _Printf
  261  0000127c          	.proc _getpid
  262  0000127c          	.global _getpid
  263  0000127c          	_getpid:
  264  0000127c  44000431	trap	#0x431
  265  00001280  4be00000	jr	r31
  266  00001284  54000000	nop
  267  00001288          	.endproc _getpid
  269  00001288          	.proc _process_create
  270  00001288          	.global _process_create
  271  00001288          	_process_create:
  272  00001288  44000432	trap	#0x432
  273  0000128c  4be00000	jr	r31
  274  00001290  54000000	nop
  275  00001294          	.endproc _process_create
  277  00001294          	.proc _shmget
  278  00001294          	.global _shmget
  279  00001294          	_shmget:
  280  00001294  44000440	trap	#0x440
  281  00001298  4be00000	jr	r31
  282  0000129c  54000000	nop
  283  000012a0          	.endproc _shmget
  285  000012a0          	.proc _shmat
  286  000012a0          	.global _shmat
  287  000012a0          	_shmat:
  288  000012a0  44000441	trap	#0x441
  289  000012a4  4be00000	jr	r31
  290  000012a8  54000000	nop
  291  000012ac          	.endproc _shmat
  293  000012ac          	.proc _sem_create
  294  000012ac          	.global _sem_create
  295  000012ac          	_sem_create:
  296  000012ac  44000450	trap	#0x450
  297  000012b0  4be00000	jr	r31
  298  000012b4  54000000	nop
  299  000012b8          	.endproc _sem_create
  301  000012b8          	.proc _sem_wait
  302  000012b8          	.global _sem_wait
  303  000012b8          	_sem_wait:
  304  000012b8  44000451	trap	#0x451
  305  000012bc  4be00000	jr	r31
  306  000012c0  54000000	nop
  307  000012c4          	.endproc _sem_wait
  309  000012c4          	.proc _sem_signal
  310  000012c4          	.global _sem_signal
  311  000012c4          	_sem_signal:
  312  000012c4  44000452	trap	#0x452
  313  000012c8  4be00000	jr	r31
  314  000012cc  54000000	nop
  315  000012d0          	.endproc _sem_signal
  317  000012d0          	.proc _lock_create
  318  000012d0          	.global _lock_create
  319  000012d0          	_lock_create:
  320  000012d0  44000453	trap	#0x453
  321  000012d4  4be00000	jr	r31
  322  000012d8  54000000	nop
  323  000012dc          	.endproc _lock_create
  325  000012dc          	.proc _lock_acquire
  326  000012dc          	.global _lock_acquire
  327  000012dc          	_lock_acquire:
  328  000012dc  44000454	trap	#0x454
  329  000012e0  4be00000	jr	r31
  330  000012e4  54000000	nop
  331  000012e8          	.endproc _lock_acquire
  333  000012e8          	.proc _lock_release
  334  000012e8          	.global _lock_release
  335  000012e8          	_lock_release:
  336  000012e8  44000455	trap	#0x455
  337  000012ec  4be00000	jr	r31
  338  000012f0  54000000	nop
  339  000012f4          	.endproc _lock_release
  341  000012f4          	.proc _cond_create
  342  000012f4          	.global _cond_create
  343  000012f4          	_cond_create:
  344  000012f4  44000456	trap	#0x456
  345  000012f8  4be00000	jr	r31
  346  000012fc  54000000	nop
  347  00001300          	.endproc _cond_create
  349  00001300          	.proc _cond_wait
  350  00001300          	.global _cond_wait
  351  00001300          	_cond_wait:
  352  00001300  44000457	trap	#0x457
  353  00001304  4be00000	jr	r31
  354  00001308  54000000	nop
  355  0000130c          	.endproc _cond_wait
  357  0000130c          	.proc _cond_signal
  358  0000130c          	.global _cond_signal
  359  0000130c          	_cond_signal:
  360  0000130c  44000458	trap	#0x458
  361  00001310  4be00000	jr	r31
  362  00001314  54000000	nop
  363  00001318          	.endproc _cond_signal
  365  00001318          	.proc _cond_broadcast
  366  00001318          	.global _cond_broadcast
  367  00001318          	_cond_broadcast:
  368  00001318  44000459	trap	#0x459
  369  0000131c  4be00000	jr	r31
  370  00001320  54000000	nop
  371  00001324          	.endproc _cond_broadcast
  373  00001324          	.proc _mbox_create
  374  00001324          	.global _mbox_create
  375  00001324          	_mbox_create:
  376  00001324  44000460	trap	#0x460
  377  00001328  4be00000	jr	r31
  378  0000132c  54000000	nop
  379  00001330          	.endproc _mbox_create
  381  00001330          	.proc _mbox_open
  382  00001330          	.global _mbox_open
  383  00001330          	_mbox_open:
  384  00001330  44000461	trap	#0x461
  385  00001334  4be00000	jr	r31
  386  00001338  54000000	nop
  387  0000133c          	.endproc _mbox_open
  389  0000133c          	.proc _mbox_close
  390  0000133c          	.global _mbox_close
  391  0000133c          	_mbox_close:
  392  0000133c  44000462	trap	#0x462
  393  00001340  4be00000	jr	r31
  394  00001344  54000000	nop
  395  00001348          	.endproc _mbox_close
  397  00001348          	.proc _mbox_send
  398  00001348          	.global _mbox_send
  399  00001348          	_mbox_send:
  400  00001348  44000463	trap	#0x463
  401  0000134c  4be00000	jr	r31
  402  00001350  54000000	nop
  403  00001354          	.endproc _mbox_send
  405  00001354          	.proc _mbox_recv
  406  00001354          	.global _mbox_recv
  407  00001354          	_mbox_recv:
  408  00001354  44000464	trap	#0x464
  409  00001358  4be00000	jr	r31
  410  0000135c  54000000	nop
  411  00001360          	.endproc _mbox_recv
  413  00001360          	.proc _sleep
  414  00001360          	.global _sleep
  415  00001360          	_sleep:
  416  00001360  44000465	trap	#0x465
  417  00001364  4be00000	jr	r31
  418  00001368  54000000	nop
  419  0000136c          	.endproc _sleep
  421  0000136c          	.proc _yield
  422  0000136c          	.global _yield
  423  0000136c          	_yield:
  424  0000136c  44000466	trap	#0x466
  425  00001370  4be00000	jr	r31
  426  00001374  54000000	nop
  427  00001378          	.endproc _yield
  430  00001378          	.proc _Exit
  431  00001378          	.global _Exit
  432  00001378          	_Exit:
  433  00001378  44000500	trap	#0x500
  434  0000137c  4be00000	jr	r31
  435  00001380  54000000	nop
  436  00001384          	.endproc _Exit
  439  00001384          	.proc _malloc
  440  00001384          	.global _malloc
  441  00001384          	_malloc:
  442  00001384  44000467	trap	#0x467
  443  00001388  4be00000	jr	r31
  444  0000138c          	.endproc _malloc
  447  0000138c          	.proc _mfree
  448  0000138c          	.global _mfree
  449  0000138c          	_mfree:
  450  0000138c  44000468	trap	#0x468
  451  00001390  4be00000	jr	r31
  452  00001394          	.endproc _mfree
  453                      ; Compiled by GCC
  455  00001394          	.align 2
  456  00001394          	.proc _isspace
  457  00001394          	.global _isspace
  458  00001394          	_isspace:
  459                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  460  00001394  afbefffc	sw	-4(r29),r30; push fp
  461  00001398  001df020	add	r30,r0,r29; fp = sp
  462  0000139c  afbffff8	sw	-8(r29),r31; push ret addr
  463  000013a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  464  000013a4  afa20000	sw	0(r29),r2
  465  000013a8  afa30004	sw	4(r29),r3
  466  000013ac  afa40008	sw	8(r29),r4
  467  000013b0  83c20003	lb	r2,3(r30)
  468  000013b4  20010000	addi	r1,r0,#0
  469  000013b8  304300ff	andi	r3,r2,#0x00ff
  470  000013bc  60640020	seqi	r4,r3,#32
  471  000013c0  1480002c	bnez	r4,L3_LF2
  472  000013c4  54000000	nop; delay slot nop
  473  000013c8  304300ff	andi	r3,r2,#0x00ff
  474  000013cc  60640009	seqi	r4,r3,#9
  475  000013d0  1480001c	bnez	r4,L3_LF2
  476  000013d4  54000000	nop; delay slot nop
  477  000013d8  304300ff	andi	r3,r2,#0x00ff
  478  000013dc  6064000a	seqi	r4,r3,#10
  479  000013e0  1480000c	bnez	r4,L3_LF2
  480  000013e4  54000000	nop; delay slot nop
  481  000013e8  08000008	j	L2_LF2
  482  000013ec  54000000	nop; delay slot nop
  483  000013f0          	L3_LF2:
  484  000013f0  20010001	addi	r1,r0,#1
  485  000013f4          	L2_LF2:
  486  000013f4  08000004	j	L1_LF2
  487  000013f8  54000000	nop; delay slot nop
  488  000013fc          	L1_LF2:
  489  000013fc  8fa20000	lw	r2,0(r29)
  490  00001400  8fa30004	lw	r3,4(r29)
  491  00001404  8fa40008	lw	r4,8(r29)
  492  00001408  8fdffff8	lw	r31,-8(r30)
  493  0000140c  001ee820	add	r29,r0,r30
  494  00001410  8fdefffc	lw	r30,-4(r30)
  495  00001414  4be00000	jr	r31
  496  00001418  54000000	nop
  497  0000141c          	.endproc _isspace
  498  0000141c          	.align 2
  499  0000141c          	.proc _isxdigit
  500  0000141c          	.global _isxdigit
  501  0000141c          	_isxdigit:
  502                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  503  0000141c  afbefffc	sw	-4(r29),r30; push fp
  504  00001420  001df020	add	r30,r0,r29; fp = sp
  505  00001424  afbffff8	sw	-8(r29),r31; push ret addr
  506  00001428  2fbd0018	subui	r29,r29,#24; alloc local storage
  507  0000142c  afa20000	sw	0(r29),r2
  508  00001430  afa30004	sw	4(r29),r3
  509  00001434  afa40008	sw	8(r29),r4
  510  00001438  83c20003	lb	r2,3(r30)
  511  0000143c  20010000	addi	r1,r0,#0
  512  00001440  304300ff	andi	r3,r2,#0x00ff
  513  00001444  6c64002f	sgtui	r4,r3,#47
  514  00001448  1080001c	beqz	r4,L7_LF2
  515  0000144c  54000000	nop; delay slot nop
  516  00001450  304300ff	andi	r3,r2,#0x00ff
  517  00001454  70640039	sleui	r4,r3,#57
  518  00001458  1480005c	bnez	r4,L6_LF2
  519  0000145c  54000000	nop; delay slot nop
  520  00001460  08000004	j	L7_LF2
  521  00001464  54000000	nop; delay slot nop
  522  00001468          	L7_LF2:
  523  00001468  304300ff	andi	r3,r2,#0x00ff
  524  0000146c  6c640060	sgtui	r4,r3,#96
  525  00001470  1080001c	beqz	r4,L8_LF2
  526  00001474  54000000	nop; delay slot nop
  527  00001478  304300ff	andi	r3,r2,#0x00ff
  528  0000147c  70640066	sleui	r4,r3,#102
  529  00001480  14800034	bnez	r4,L6_LF2
  530  00001484  54000000	nop; delay slot nop
  531  00001488  08000004	j	L8_LF2
  532  0000148c  54000000	nop; delay slot nop
  533  00001490          	L8_LF2:
  534  00001490  304300ff	andi	r3,r2,#0x00ff
  535  00001494  6c640040	sgtui	r4,r3,#64
  536  00001498  10800020	beqz	r4,L5_LF2
  537  0000149c  54000000	nop; delay slot nop
  538  000014a0  304300ff	andi	r3,r2,#0x00ff
  539  000014a4  70640041	sleui	r4,r3,#65
  540  000014a8  1480000c	bnez	r4,L6_LF2
  541  000014ac  54000000	nop; delay slot nop
  542  000014b0  08000008	j	L5_LF2
  543  000014b4  54000000	nop; delay slot nop
  544  000014b8          	L6_LF2:
  545  000014b8  20010001	addi	r1,r0,#1
  546  000014bc          	L5_LF2:
  547  000014bc  08000004	j	L4_LF2
  548  000014c0  54000000	nop; delay slot nop
  549  000014c4          	L4_LF2:
  550  000014c4  8fa20000	lw	r2,0(r29)
  551  000014c8  8fa30004	lw	r3,4(r29)
  552  000014cc  8fa40008	lw	r4,8(r29)
  553  000014d0  8fdffff8	lw	r31,-8(r30)
  554  000014d4  001ee820	add	r29,r0,r30
  555  000014d8  8fdefffc	lw	r30,-4(r30)
  556  000014dc  4be00000	jr	r31
  557  000014e0  54000000	nop
  558  000014e4          	.endproc _isxdigit
  559  000014e4          	.align 2
  560  000014e4          	.proc _dstrcpy
  561  000014e4          	.global _dstrcpy
  562  000014e4          	_dstrcpy:
  563                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  564  000014e4  afbefffc	sw	-4(r29),r30; push fp
  565  000014e8  001df020	add	r30,r0,r29; fp = sp
  566  000014ec  afbffff8	sw	-8(r29),r31; push ret addr
  567  000014f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  568  000014f4  afa20000	sw	0(r29),r2
  569  000014f8  afa30004	sw	4(r29),r3
  570  000014fc  8fc10000	lw	r1,(r30)
  571  00001500  afc1fff4	sw	-12(r30),r1
  572  00001504          	L10_LF2:
  573  00001504  8fc10000	lw	r1,(r30)
  574  00001508  20220001	addi	r2,r1,#1
  575  0000150c  afc20000	sw	(r30),r2
  576  00001510  8fc20004	lw	r2,4(r30)
  577  00001514  20430001	addi	r3,r2,#1
  578  00001518  afc30004	sw	4(r30),r3
  579  0000151c  80420000	lb	r2,(r2)
  580  00001520  a0220000	sb	(r1),r2
  581  00001524  a3c2fff3	sb	-13(r30),r2
  582  00001528          	L12_LF2:
  583  00001528  93c1fff3	lbu	r1,-13(r30)
  584  0000152c  64220000	snei	r2,r1,#0
  585  00001530  1440000c	bnez	r2,L13_LF2
  586  00001534  54000000	nop; delay slot nop
  587  00001538  0800000c	j	L11_LF2
  588  0000153c  54000000	nop; delay slot nop
  589  00001540          	L13_LF2:
  590  00001540  0bffffc0	j	L10_LF2
  591  00001544  54000000	nop; delay slot nop
  592  00001548          	L11_LF2:
  593  00001548  8fc1fff4	lw	r1,-12(r30)
  594  0000154c  08000004	j	L9_LF2
  595  00001550  54000000	nop; delay slot nop
  596  00001554          	L9_LF2:
  597  00001554  8fa20000	lw	r2,0(r29)
  598  00001558  8fa30004	lw	r3,4(r29)
  599  0000155c  8fdffff8	lw	r31,-8(r30)
  600  00001560  001ee820	add	r29,r0,r30
  601  00001564  8fdefffc	lw	r30,-4(r30)
  602  00001568  4be00000	jr	r31
  603  0000156c  54000000	nop
  604  00001570          	.endproc _dstrcpy
  605  00001570          	.align 2
  606  00001570          	.proc _dstrncpy
  607  00001570          	.global _dstrncpy
  608  00001570          	_dstrncpy:
  609                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  610  00001570  afbefffc	sw	-4(r29),r30; push fp
  611  00001574  001df020	add	r30,r0,r29; fp = sp
  612  00001578  afbffff8	sw	-8(r29),r31; push ret addr
  613  0000157c  2fbd0018	subui	r29,r29,#24; alloc local storage
  614  00001580  afa20000	sw	0(r29),r2
  615  00001584  afa30004	sw	4(r29),r3
  616  00001588  8fc10000	lw	r1,(r30)
  617  0000158c  afc1fff4	sw	-12(r30),r1
  618  00001590          	L15_LF2:
  619  00001590  8fc10008	lw	r1,8(r30)
  620  00001594  2022ffff	addi	r2,r1,#-1
  621  00001598  afc20008	sw	8(r30),r2
  622  0000159c  70210000	slei	r1,r1,#0
  623  000015a0  1020000c	beqz	r1,L18_LF2
  624  000015a4  54000000	nop; delay slot nop
  625  000015a8  08000048	j	L16_LF2
  626  000015ac  54000000	nop; delay slot nop
  627  000015b0          	L18_LF2:
  628  000015b0  8fc10000	lw	r1,(r30)
  629  000015b4  20220001	addi	r2,r1,#1
  630  000015b8  afc20000	sw	(r30),r2
  631  000015bc  8fc20004	lw	r2,4(r30)
  632  000015c0  20430001	addi	r3,r2,#1
  633  000015c4  afc30004	sw	4(r30),r3
  634  000015c8  80420000	lb	r2,(r2)
  635  000015cc  a0220000	sb	(r1),r2
  636  000015d0  a3c2fff3	sb	-13(r30),r2
  637  000015d4          	L17_LF2:
  638  000015d4  93c1fff3	lbu	r1,-13(r30)
  639  000015d8  64220000	snei	r2,r1,#0
  640  000015dc  1440000c	bnez	r2,L19_LF2
  641  000015e0  54000000	nop; delay slot nop
  642  000015e4  0800000c	j	L16_LF2
  643  000015e8  54000000	nop; delay slot nop
  644  000015ec          	L19_LF2:
  645  000015ec  0bffffa0	j	L15_LF2
  646  000015f0  54000000	nop; delay slot nop
  647  000015f4          	L16_LF2:
  648  000015f4  8fc1fff4	lw	r1,-12(r30)
  649  000015f8  08000004	j	L14_LF2
  650  000015fc  54000000	nop; delay slot nop
  651  00001600          	L14_LF2:
  652  00001600  8fa20000	lw	r2,0(r29)
  653  00001604  8fa30004	lw	r3,4(r29)
  654  00001608  8fdffff8	lw	r31,-8(r30)
  655  0000160c  001ee820	add	r29,r0,r30
  656  00001610  8fdefffc	lw	r30,-4(r30)
  657  00001614  4be00000	jr	r31
  658  00001618  54000000	nop
  659  0000161c          	.endproc _dstrncpy
  660  0000161c          	.align 2
  661  0000161c          	.proc _dstrcat
  662  0000161c          	.global _dstrcat
  663  0000161c          	_dstrcat:
  664                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  665  0000161c  afbefffc	sw	-4(r29),r30; push fp
  666  00001620  001df020	add	r30,r0,r29; fp = sp
  667  00001624  afbffff8	sw	-8(r29),r31; push ret addr
  668  00001628  2fbd0018	subui	r29,r29,#24; alloc local storage
  669  0000162c  afa20000	sw	0(r29),r2
  670  00001630  8fc10000	lw	r1,(r30)
  671  00001634  afc1fff4	sw	-12(r30),r1
  672  00001638          	L21_LF2:
  673  00001638  8fc10000	lw	r1,(r30)
  674  0000163c  90220000	lbu	r2,(r1)
  675  00001640  64410000	snei	r1,r2,#0
  676  00001644  1420000c	bnez	r1,L23_LF2
  677  00001648  54000000	nop; delay slot nop
  678  0000164c  0800001c	j	L22_LF2
  679  00001650  54000000	nop; delay slot nop
  680  00001654          	L23_LF2:
  681  00001654  8fc20000	lw	r2,(r30)
  682  00001658  20410001	addi	r1,r2,#1
  683  0000165c  00011020	add	r2,r0,r1
  684  00001660  afc20000	sw	(r30),r2
  685  00001664  0bffffd0	j	L21_LF2
  686  00001668  54000000	nop; delay slot nop
  687  0000166c          	L22_LF2:
  688  0000166c  23bdfff8	addi	r29,r29,#-8
  689  00001670  001d0820	add	r1,r0,r29
  690  00001674  8fc20000	lw	r2,(r30)
  691  00001678  ac220000	sw	(r1),r2
  692  0000167c  8fc20004	lw	r2,4(r30)
  693  00001680  ac220004	sw	4(r1),r2
  694  00001684  0ffffe5c	jal	_dstrcpy
  695  00001688  54000000	nop; delay slot nop
  696  0000168c  23bd0008	addi	r29,r29,#8
  697  00001690  8fc1fff4	lw	r1,-12(r30)
  698  00001694  08000004	j	L20_LF2
  699  00001698  54000000	nop; delay slot nop
  700  0000169c          	L20_LF2:
  701  0000169c  8fa20000	lw	r2,0(r29)
  702  000016a0  8fdffff8	lw	r31,-8(r30)
  703  000016a4  001ee820	add	r29,r0,r30
  704  000016a8  8fdefffc	lw	r30,-4(r30)
  705  000016ac  4be00000	jr	r31
  706  000016b0  54000000	nop
  707  000016b4          	.endproc _dstrcat
  708  000016b4          	.align 2
  709  000016b4          	.proc _dstrncmp
  710  000016b4          	.global _dstrncmp
  711  000016b4          	_dstrncmp:
  712                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  713  000016b4  afbefffc	sw	-4(r29),r30; push fp
  714  000016b8  001df020	add	r30,r0,r29; fp = sp
  715  000016bc  afbffff8	sw	-8(r29),r31; push ret addr
  716  000016c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  717  000016c4  afa20000	sw	0(r29),r2
  718  000016c8  afa30004	sw	4(r29),r3
  719  000016cc  54000000	nop
  720  000016d0  20010000	addi	r1,r0,#0
  721  000016d4  afc1fff4	sw	-12(r30),r1
  722  000016d8          	L25_LF2:
  723  000016d8  8fc1fff4	lw	r1,-12(r30)
  724  000016dc  8fc20008	lw	r2,8(r30)
  725  000016e0  0022082a	slt	r1,r1,r2
  726  000016e4  1420000c	bnez	r1,L28_LF2
  727  000016e8  54000000	nop; delay slot nop
  728  000016ec  08000088	j	L26_LF2
  729  000016f0  54000000	nop; delay slot nop
  730  000016f4          	L28_LF2:
  731  000016f4  8fc10004	lw	r1,4(r30)
  732  000016f8  90220000	lbu	r2,(r1)
  733  000016fc  64410000	snei	r1,r2,#0
  734  00001700  14200018	bnez	r1,L29_LF2
  735  00001704  54000000	nop; delay slot nop
  736  00001708  20010000	addi	r1,r0,#0
  737  0000170c  080000d8	j	L24_LF2
  738  00001710  54000000	nop; delay slot nop
  739  00001714  08000028	j	L30_LF2
  740  00001718  54000000	nop; delay slot nop
  741  0000171c          	L29_LF2:
  742  0000171c  8fc10000	lw	r1,(r30)
  743  00001720  8fc20004	lw	r2,4(r30)
  744  00001724  90210000	lbu	r1,(r1)
  745  00001728  90420000	lbu	r2,(r2)
  746  0000172c  00220829	sne	r1,r1,r2
  747  00001730  1020000c	beqz	r1,L30_LF2
  748  00001734  54000000	nop; delay slot nop
  749  00001738  0800003c	j	L26_LF2
  750  0000173c  54000000	nop; delay slot nop
  751  00001740          	L31_LF2:
  752  00001740          	L30_LF2:
  753  00001740  8fc20000	lw	r2,(r30)
  754  00001744  20410001	addi	r1,r2,#1
  755  00001748  00011020	add	r2,r0,r1
  756  0000174c  afc20000	sw	(r30),r2
  757  00001750  8fc20004	lw	r2,4(r30)
  758  00001754  20410001	addi	r1,r2,#1
  759  00001758  00011020	add	r2,r0,r1
  760  0000175c  afc20004	sw	4(r30),r2
  761  00001760          	L27_LF2:
  762  00001760  8fc2fff4	lw	r2,-12(r30)
  763  00001764  20410001	addi	r1,r2,#1
  764  00001768  00011020	add	r2,r0,r1
  765  0000176c  afc2fff4	sw	-12(r30),r2
  766  00001770  0bffff64	j	L25_LF2
  767  00001774  54000000	nop; delay slot nop
  768  00001778          	L26_LF2:
  769  00001778  8fc1fff4	lw	r1,-12(r30)
  770  0000177c  8fc20008	lw	r2,8(r30)
  771  00001780  00220828	seq	r1,r1,r2
  772  00001784  10200018	beqz	r1,L32_LF2
  773  00001788  54000000	nop; delay slot nop
  774  0000178c  20010000	addi	r1,r0,#0
  775  00001790  08000054	j	L24_LF2
  776  00001794  54000000	nop; delay slot nop
  777  00001798  0800004c	j	L33_LF2
  778  0000179c  54000000	nop; delay slot nop
  779  000017a0          	L32_LF2:
  780  000017a0  8fc20000	lw	r2,(r30)
  781  000017a4  90410000	lbu	r1,(r2)
  782  000017a8  8fc20004	lw	r2,4(r30)
  783  000017ac  90430000	lbu	r3,(r2)
  784  000017b0  00230822	sub	r1,r1,r3
  785  000017b4  74220000	sgei	r2,r1,#0
  786  000017b8  10400020	beqz	r2,L34_LF2
  787  000017bc  54000000	nop; delay slot nop
  788  000017c0  8fc10000	lw	r1,(r30)
  789  000017c4  8fc20004	lw	r2,4(r30)
  790  000017c8  90210000	lbu	r1,(r1)
  791  000017cc  90420000	lbu	r2,(r2)
  792  000017d0  00220829	sne	r1,r1,r2
  793  000017d4  08000008	j	L35_LF2
  794  000017d8  54000000	nop; delay slot nop
  795  000017dc          	L34_LF2:
  796  000017dc  2001ffff	addi	r1,r0,#-1
  797  000017e0          	L35_LF2:
  798  000017e0  08000004	j	L24_LF2
  799  000017e4  54000000	nop; delay slot nop
  800  000017e8          	L33_LF2:
  801  000017e8          	L24_LF2:
  802  000017e8  8fa20000	lw	r2,0(r29)
  803  000017ec  8fa30004	lw	r3,4(r29)
  804  000017f0  8fdffff8	lw	r31,-8(r30)
  805  000017f4  001ee820	add	r29,r0,r30
  806  000017f8  8fdefffc	lw	r30,-4(r30)
  807  000017fc  4be00000	jr	r31
  808  00001800  54000000	nop
  809  00001804          	.endproc _dstrncmp
  810  00001804          	.align 2
  811  00001804          	.proc _dstrlen
  812  00001804          	.global _dstrlen
  813  00001804          	_dstrlen:
  814                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  815  00001804  afbefffc	sw	-4(r29),r30; push fp
  816  00001808  001df020	add	r30,r0,r29; fp = sp
  817  0000180c  afbffff8	sw	-8(r29),r31; push ret addr
  818  00001810  2fbd0018	subui	r29,r29,#24; alloc local storage
  819  00001814  afa20000	sw	0(r29),r2
  820  00001818  20010000	addi	r1,r0,#0
  821  0000181c  afc1fff4	sw	-12(r30),r1
  822  00001820          	L37_LF2:
  823  00001820  8fc10000	lw	r1,(r30)
  824  00001824  20220001	addi	r2,r1,#1
  825  00001828  afc20000	sw	(r30),r2
  826  0000182c  90210000	lbu	r1,(r1)
  827  00001830  64220000	snei	r2,r1,#0
  828  00001834  1440000c	bnez	r2,L39_LF2
  829  00001838  54000000	nop; delay slot nop
  830  0000183c  0800001c	j	L38_LF2
  831  00001840  54000000	nop; delay slot nop
  832  00001844          	L39_LF2:
  833  00001844  8fc2fff4	lw	r2,-12(r30)
  834  00001848  20410001	addi	r1,r2,#1
  835  0000184c  00011020	add	r2,r0,r1
  836  00001850  afc2fff4	sw	-12(r30),r2
  837  00001854  0bffffc8	j	L37_LF2
  838  00001858  54000000	nop; delay slot nop
  839  0000185c          	L38_LF2:
  840  0000185c  8fc1fff4	lw	r1,-12(r30)
  841  00001860  08000004	j	L36_LF2
  842  00001864  54000000	nop; delay slot nop
  843  00001868          	L36_LF2:
  844  00001868  8fa20000	lw	r2,0(r29)
  845  0000186c  8fdffff8	lw	r31,-8(r30)
  846  00001870  001ee820	add	r29,r0,r30
  847  00001874  8fdefffc	lw	r30,-4(r30)
  848  00001878  4be00000	jr	r31
  849  0000187c  54000000	nop
  850  00001880          	.endproc _dstrlen
  851  00001880          	.align 2
  852  00001880          	.proc _dstrstr
  853  00001880          	.global _dstrstr
  854  00001880          	_dstrstr:
  855                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  856  00001880  afbefffc	sw	-4(r29),r30; push fp
  857  00001884  001df020	add	r30,r0,r29; fp = sp
  858  00001888  afbffff8	sw	-8(r29),r31; push ret addr
  859  0000188c  2fbd0018	subui	r29,r29,#24; alloc local storage
  860  00001890  afa20000	sw	0(r29),r2
  861  00001894  23bdfff8	addi	r29,r29,#-8
  862  00001898  001d0820	add	r1,r0,r29
  863  0000189c  8fc20004	lw	r2,4(r30)
  864  000018a0  ac220000	sw	(r1),r2
  865  000018a4  0fffff5c	jal	_dstrlen
  866  000018a8  54000000	nop; delay slot nop
  867  000018ac  23bd0008	addi	r29,r29,#8
  868  000018b0  afc1fff4	sw	-12(r30),r1
  869  000018b4          	L41_LF2:
  870  000018b4  8fc10000	lw	r1,(r30)
  871  000018b8  90220000	lbu	r2,(r1)
  872  000018bc  64410000	snei	r1,r2,#0
  873  000018c0  1420000c	bnez	r1,L43_LF2
  874  000018c4  54000000	nop; delay slot nop
  875  000018c8  08000060	j	L42_LF2
  876  000018cc  54000000	nop; delay slot nop
  877  000018d0          	L43_LF2:
  878  000018d0  23bdfff0	addi	r29,r29,#-16
  879  000018d4  001d0820	add	r1,r0,r29
  880  000018d8  8fc20000	lw	r2,(r30)
  881  000018dc  ac220000	sw	(r1),r2
  882  000018e0  8fc20004	lw	r2,4(r30)
  883  000018e4  ac220004	sw	4(r1),r2
  884  000018e8  8fc2fff4	lw	r2,-12(r30)
  885  000018ec  ac220008	sw	8(r1),r2
  886  000018f0  0ffffdc0	jal	_dstrncmp
  887  000018f4  54000000	nop; delay slot nop
  888  000018f8  23bd0010	addi	r29,r29,#16
  889  000018fc  64220000	snei	r2,r1,#0
  890  00001900  14400010	bnez	r2,L44_LF2
  891  00001904  54000000	nop; delay slot nop
  892  00001908  8fc10000	lw	r1,(r30)
  893  0000190c  08000028	j	L40_LF2
  894  00001910  54000000	nop; delay slot nop
  895  00001914          	L44_LF2:
  896  00001914  8fc20000	lw	r2,(r30)
  897  00001918  20410001	addi	r1,r2,#1
  898  0000191c  00011020	add	r2,r0,r1
  899  00001920  afc20000	sw	(r30),r2
  900  00001924  0bffff8c	j	L41_LF2
  901  00001928  54000000	nop; delay slot nop
  902  0000192c          	L42_LF2:
  903  0000192c  20010000	addi	r1,r0,#0
  904  00001930  08000004	j	L40_LF2
  905  00001934  54000000	nop; delay slot nop
  906  00001938          	L40_LF2:
  907  00001938  8fa20000	lw	r2,0(r29)
  908  0000193c  8fdffff8	lw	r31,-8(r30)
  909  00001940  001ee820	add	r29,r0,r30
  910  00001944  8fdefffc	lw	r30,-4(r30)
  911  00001948  4be00000	jr	r31
  912  0000194c  54000000	nop
  913  00001950          	.endproc _dstrstr
  914  00001950          	.align 2
  915  00001950          	.proc _dmindex
  916  00001950          	.global _dmindex
  917  00001950          	_dmindex:
  918                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  919  00001950  afbefffc	sw	-4(r29),r30; push fp
  920  00001954  001df020	add	r30,r0,r29; fp = sp
  921  00001958  afbffff8	sw	-8(r29),r31; push ret addr
  922  0000195c  2fbd0018	subui	r29,r29,#24; alloc local storage
  923  00001960  afa20000	sw	0(r29),r2
  924  00001964  54000000	nop
  925  00001968          	L46_LF2:
  926  00001968  8fc10000	lw	r1,(r30)
  927  0000196c  90220000	lbu	r2,(r1)
  928  00001970  64410000	snei	r1,r2,#0
  929  00001974  1420000c	bnez	r1,L48_LF2
  930  00001978  54000000	nop; delay slot nop
  931  0000197c  08000070	j	L47_LF2
  932  00001980  54000000	nop; delay slot nop
  933  00001984          	L48_LF2:
  934  00001984  8fc10004	lw	r1,4(r30)
  935  00001988  afc1fff4	sw	-12(r30),r1
  936  0000198c          	L49_LF2:
  937  0000198c  8fc1fff4	lw	r1,-12(r30)
  938  00001990  90220000	lbu	r2,(r1)
  939  00001994  64410000	snei	r1,r2,#0
  940  00001998  1420000c	bnez	r1,L52_LF2
  941  0000199c  54000000	nop; delay slot nop
  942  000019a0  08000044	j	L50_LF2
  943  000019a4  54000000	nop; delay slot nop
  944  000019a8          	L52_LF2:
  945  000019a8  8fc10000	lw	r1,(r30)
  946  000019ac  8fc2fff4	lw	r2,-12(r30)
  947  000019b0  90210000	lbu	r1,(r1)
  948  000019b4  90420000	lbu	r2,(r2)
  949  000019b8  00220828	seq	r1,r1,r2
  950  000019bc  10200010	beqz	r1,L51_LF2
  951  000019c0  54000000	nop; delay slot nop
  952  000019c4  8fc10000	lw	r1,(r30)
  953  000019c8  08000030	j	L45_LF2
  954  000019cc  54000000	nop; delay slot nop
  955  000019d0          	L53_LF2:
  956  000019d0          	L51_LF2:
  957  000019d0  8fc2fff4	lw	r2,-12(r30)
  958  000019d4  20410001	addi	r1,r2,#1
  959  000019d8  00011020	add	r2,r0,r1
  960  000019dc  afc2fff4	sw	-12(r30),r2
  961  000019e0  0bffffa8	j	L49_LF2
  962  000019e4  54000000	nop; delay slot nop
  963  000019e8          	L50_LF2:
  964  000019e8  0bffff7c	j	L46_LF2
  965  000019ec  54000000	nop; delay slot nop
  966  000019f0          	L47_LF2:
  967  000019f0  20010000	addi	r1,r0,#0
  968  000019f4  08000004	j	L45_LF2
  969  000019f8  54000000	nop; delay slot nop
  970  000019fc          	L45_LF2:
  971  000019fc  8fa20000	lw	r2,0(r29)
  972  00001a00  8fdffff8	lw	r31,-8(r30)
  973  00001a04  001ee820	add	r29,r0,r30
  974  00001a08  8fdefffc	lw	r30,-4(r30)
  975  00001a0c  4be00000	jr	r31
  976  00001a10  54000000	nop
  977  00001a14          	.endproc _dmindex
  978  00001a14          	.align 2
  979  00001a14          	.proc _dindex
  980  00001a14          	.global _dindex
  981  00001a14          	_dindex:
  982                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  983  00001a14  afbefffc	sw	-4(r29),r30; push fp
  984  00001a18  001df020	add	r30,r0,r29; fp = sp
  985  00001a1c  afbffff8	sw	-8(r29),r31; push ret addr
  986  00001a20  2fbd0010	subui	r29,r29,#16; alloc local storage
  987  00001a24  afa20000	sw	0(r29),r2
  988  00001a28  54000000	nop
  989  00001a2c          	L55_LF2:
  990  00001a2c  8fc10000	lw	r1,(r30)
  991  00001a30  90220000	lbu	r2,(r1)
  992  00001a34  64410000	snei	r1,r2,#0
  993  00001a38  1420000c	bnez	r1,L57_LF2
  994  00001a3c  54000000	nop; delay slot nop
  995  00001a40  08000040	j	L56_LF2
  996  00001a44  54000000	nop; delay slot nop
  997  00001a48          	L57_LF2:
  998  00001a48  8fc10000	lw	r1,(r30)
  999  00001a4c  90220000	lbu	r2,(r1)
 1000  00001a50  8fc10004	lw	r1,4(r30)
 1001  00001a54  00411028	seq	r2,r2,r1
 1002  00001a58  10400010	beqz	r2,L58_LF2
 1003  00001a5c  54000000	nop; delay slot nop
 1004  00001a60  8fc10000	lw	r1,(r30)
 1005  00001a64  08000028	j	L54_LF2
 1006  00001a68  54000000	nop; delay slot nop
 1007  00001a6c          	L58_LF2:
 1008  00001a6c  8fc20000	lw	r2,(r30)
 1009  00001a70  20410001	addi	r1,r2,#1
 1010  00001a74  00011020	add	r2,r0,r1
 1011  00001a78  afc20000	sw	(r30),r2
 1012  00001a7c  0bffffac	j	L55_LF2
 1013  00001a80  54000000	nop; delay slot nop
 1014  00001a84          	L56_LF2:
 1015  00001a84  20010000	addi	r1,r0,#0
 1016  00001a88  08000004	j	L54_LF2
 1017  00001a8c  54000000	nop; delay slot nop
 1018  00001a90          	L54_LF2:
 1019  00001a90  8fa20000	lw	r2,0(r29)
 1020  00001a94  8fdffff8	lw	r31,-8(r30)
 1021  00001a98  001ee820	add	r29,r0,r30
 1022  00001a9c  8fdefffc	lw	r30,-4(r30)
 1023  00001aa0  4be00000	jr	r31
 1024  00001aa4  54000000	nop
 1025  00001aa8          	.endproc _dindex
 1026  00001aa8          	.align 2
 1027  00001aa8          	.proc _ditoa
 1028  00001aa8          	.global _ditoa
 1029  00001aa8          	_ditoa:
 1030                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1031  00001aa8  afbefffc	sw	-4(r29),r30; push fp
 1032  00001aac  001df020	add	r30,r0,r29; fp = sp
 1033  00001ab0  afbffff8	sw	-8(r29),r31; push ret addr
 1034  00001ab4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1035  00001ab8  afa20000	sw	0(r29),r2
 1036  00001abc  afa30004	sw	4(r29),r3
 1037  00001ac0  8fc10000	lw	r1,(r30)
 1038  00001ac4  68220000	slti	r2,r1,#0
 1039  00001ac8  1040002c	beqz	r2,L60_LF2
 1040  00001acc  54000000	nop; delay slot nop
 1041  00001ad0  8fc10004	lw	r1,4(r30)
 1042  00001ad4  20220001	addi	r2,r1,#1
 1043  00001ad8  afc20004	sw	4(r30),r2
 1044  00001adc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1045  00001ae0  a0220000	sb	(r1),r2
 1046  00001ae4  8fc10000	lw	r1,(r30)
 1047  00001ae8  00011022	sub	r2,r0,r1
 1048  00001aec  afc20000	sw	(r30),r2
 1049  00001af0  08000118	j	L61_LF2
 1050  00001af4  54000000	nop; delay slot nop
 1051  00001af8          	L60_LF2:
 1052  00001af8  8fc10000	lw	r1,(r30)
 1053  00001afc  64220000	snei	r2,r1,#0
 1054  00001b00  14400020	bnez	r2,L62_LF2
 1055  00001b04  54000000	nop; delay slot nop
 1056  00001b08  8fc10004	lw	r1,4(r30)
 1057  00001b0c  20220001	addi	r2,r1,#1
 1058  00001b10  afc20004	sw	4(r30),r2
 1059  00001b14  20020030	addi	r2,r0,(#0x30)&0xff
 1060  00001b18  a0220000	sb	(r1),r2
 1061  00001b1c  080000ec	j	L61_LF2
 1062  00001b20  54000000	nop; delay slot nop
 1063  00001b24          	L62_LF2:
 1064  00001b24  20010001	addi	r1,r0,#1
 1065  00001b28  afc1fff4	sw	-12(r30),r1
 1066  00001b2c          	L64_LF2:
 1067  00001b2c  8fc1fff4	lw	r1,-12(r30)
 1068  00001b30  8fc20000	lw	r2,(r30)
 1069  00001b34  0022082c	sle	r1,r1,r2
 1070  00001b38  1420000c	bnez	r1,L66_LF2
 1071  00001b3c  54000000	nop; delay slot nop
 1072  00001b40  08000024	j	L65_LF2
 1073  00001b44  54000000	nop; delay slot nop
 1074  00001b48          	L67_LF2:
 1075  00001b48          	L66_LF2:
 1076  00001b48  8fc1fff4	lw	r1,-12(r30)
 1077  00001b4c  00011820	add	r3,r0,r1
 1078  00001b50  50620002	slli	r2,r3,#0x2
 1079  00001b54  00411020	add	r2,r2,r1
 1080  00001b58  50410001	slli	r1,r2,#0x1
 1081  00001b5c  afc1fff4	sw	-12(r30),r1
 1082  00001b60  0bffffc8	j	L64_LF2
 1083  00001b64  54000000	nop; delay slot nop
 1084  00001b68          	L65_LF2:
 1085  00001b68  54000000	nop
 1086  00001b6c          	L68_LF2:
 1087  00001b6c  8fc1fff4	lw	r1,-12(r30)
 1088  00001b70  2002000a	addi	r2,r0,#10
 1089  00001b74  00200035	movi2fp	f0,r1
 1090  00001b78  00400835	movi2fp	f1,r2
 1091  00001b7c  0401000f	div	f0,f0,f1
 1092  00001b80  00000834	movfp2i	r1,f0
 1093  00001b84  afc1fff4	sw	-12(r30),r1
 1094  00001b88  8fc10004	lw	r1,4(r30)
 1095  00001b8c  20220001	addi	r2,r1,#1
 1096  00001b90  afc20004	sw	4(r30),r2
 1097  00001b94  8fc20000	lw	r2,(r30)
 1098  00001b98  8fc3fff4	lw	r3,-12(r30)
 1099  00001b9c  00400035	movi2fp	f0,r2
 1100  00001ba0  00600835	movi2fp	f1,r3
 1101  00001ba4  0401000f	div	f0,f0,f1
 1102  00001ba8  00001034	movfp2i	r2,f0
 1103  00001bac  00021820	add	r3,r0,r2
 1104  00001bb0  20620030	addi	r2,r3,#48
 1105  00001bb4  a0220000	sb	(r1),r2
 1106  00001bb8  8fc10000	lw	r1,(r30)
 1107  00001bbc  8fc3fff4	lw	r3,-12(r30)
 1108  00001bc0  00200035	movi2fp	f0,r1
 1109  00001bc4  00600835	movi2fp	f1,r3
 1110  00001bc8  0401000f	div	f0,f0,f1
 1111  00001bcc  00001034	movfp2i	r2,f0
 1112  00001bd0  8fc3fff4	lw	r3,-12(r30)
 1113  00001bd4  00400035	movi2fp	f0,r2
 1114  00001bd8  00600835	movi2fp	f1,r3
 1115  00001bdc  0401000e	mult	f0,f0,f1
 1116  00001be0  00001034	movfp2i	r2,f0
 1117  00001be4  00220822	sub	r1,r1,r2
 1118  00001be8  afc10000	sw	(r30),r1
 1119  00001bec          	L70_LF2:
 1120  00001bec  8fc1fff4	lw	r1,-12(r30)
 1121  00001bf0  6c220001	sgti	r2,r1,#1
 1122  00001bf4  1440000c	bnez	r2,L71_LF2
 1123  00001bf8  54000000	nop; delay slot nop
 1124  00001bfc  0800000c	j	L61_LF2
 1125  00001c00  54000000	nop; delay slot nop
 1126  00001c04          	L71_LF2:
 1127  00001c04  0bffff64	j	L68_LF2
 1128  00001c08  54000000	nop; delay slot nop
 1129  00001c0c          	L69_LF2:
 1130  00001c0c          	L63_LF2:
 1131  00001c0c          	L61_LF2:
 1132  00001c0c  8fc10004	lw	r1,4(r30)
 1133  00001c10  20020000	addi	r2,r0,(#0x0)&0xff
 1134  00001c14  a0220000	sb	(r1),r2
 1135  00001c18          	L59_LF2:
 1136  00001c18  8fa20000	lw	r2,0(r29)
 1137  00001c1c  8fa30004	lw	r3,4(r29)
 1138  00001c20  8fdffff8	lw	r31,-8(r30)
 1139  00001c24  001ee820	add	r29,r0,r30
 1140  00001c28  8fdefffc	lw	r30,-4(r30)
 1141  00001c2c  4be00000	jr	r31
 1142  00001c30  54000000	nop
 1143  00001c34          	.endproc _ditoa
 1144  00001c34          	.align 2
 1145  00001c34          	.proc _dstrtol
 1146  00001c34          	.global _dstrtol
 1147  00001c34          	_dstrtol:
 1148                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1149  00001c34  afbefffc	sw	-4(r29),r30; push fp
 1150  00001c38  001df020	add	r30,r0,r29; fp = sp
 1151  00001c3c  afbffff8	sw	-8(r29),r31; push ret addr
 1152  00001c40  2fbd0020	subui	r29,r29,#32; alloc local storage
 1153  00001c44  afa20000	sw	0(r29),r2
 1154  00001c48  20010000	addi	r1,r0,#0
 1155  00001c4c  afc1fff4	sw	-12(r30),r1
 1156  00001c50          	L73_LF2:
 1157  00001c50  8fc10000	lw	r1,(r30)
 1158  00001c54  90220000	lbu	r2,(r1)
 1159  00001c58  60410020	seqi	r1,r2,#32
 1160  00001c5c  14200034	bnez	r1,L75_LF2
 1161  00001c60  54000000	nop; delay slot nop
 1162  00001c64  8fc10000	lw	r1,(r30)
 1163  00001c68  90220000	lbu	r2,(r1)
 1164  00001c6c  60410009	seqi	r1,r2,#9
 1165  00001c70  14200020	bnez	r1,L75_LF2
 1166  00001c74  54000000	nop; delay slot nop
 1167  00001c78  8fc10000	lw	r1,(r30)
 1168  00001c7c  90220000	lbu	r2,(r1)
 1169  00001c80  6041000a	seqi	r1,r2,#10
 1170  00001c84  1420000c	bnez	r1,L75_LF2
 1171  00001c88  54000000	nop; delay slot nop
 1172  00001c8c  0800001c	j	L74_LF2
 1173  00001c90  54000000	nop; delay slot nop
 1174  00001c94          	L75_LF2:
 1175  00001c94  8fc20000	lw	r2,(r30)
 1176  00001c98  20410001	addi	r1,r2,#1
 1177  00001c9c  00011020	add	r2,r0,r1
 1178  00001ca0  afc20000	sw	(r30),r2
 1179  00001ca4  0bffffa8	j	L73_LF2
 1180  00001ca8  54000000	nop; delay slot nop
 1181  00001cac          	L74_LF2:
 1182  00001cac  8fc10004	lw	r1,4(r30)
 1183  00001cb0  64220000	snei	r2,r1,#0
 1184  00001cb4  10400010	beqz	r2,L76_LF2
 1185  00001cb8  54000000	nop; delay slot nop
 1186  00001cbc  8fc10004	lw	r1,4(r30)
 1187  00001cc0  8fc20000	lw	r2,(r30)
 1188  00001cc4  ac220000	sw	(r1),r2
 1189  00001cc8          	L76_LF2:
 1190  00001cc8  8fc10000	lw	r1,(r30)
 1191  00001ccc  90220000	lbu	r2,(r1)
 1192  00001cd0  64410000	snei	r1,r2,#0
 1193  00001cd4  14200010	bnez	r1,L77_LF2
 1194  00001cd8  54000000	nop; delay slot nop
 1195  00001cdc  8fc1fff4	lw	r1,-12(r30)
 1196  00001ce0  08000294	j	L72_LF2
 1197  00001ce4  54000000	nop; delay slot nop
 1198  00001ce8          	L77_LF2:
 1199  00001ce8  8fc10000	lw	r1,(r30)
 1200  00001cec  90220000	lbu	r2,(r1)
 1201  00001cf0  6041002d	seqi	r1,r2,#45
 1202  00001cf4  10200024	beqz	r1,L78_LF2
 1203  00001cf8  54000000	nop; delay slot nop
 1204  00001cfc  2001ffff	addi	r1,r0,#-1
 1205  00001d00  afc1ffec	sw	-20(r30),r1
 1206  00001d04  8fc20000	lw	r2,(r30)
 1207  00001d08  20410001	addi	r1,r2,#1
 1208  00001d0c  00011020	add	r2,r0,r1
 1209  00001d10  afc20000	sw	(r30),r2
 1210  00001d14  0800000c	j	L79_LF2
 1211  00001d18  54000000	nop; delay slot nop
 1212  00001d1c          	L78_LF2:
 1213  00001d1c  20010001	addi	r1,r0,#1
 1214  00001d20  afc1ffec	sw	-20(r30),r1
 1215  00001d24          	L79_LF2:
 1216  00001d24  8fc10008	lw	r1,8(r30)
 1217  00001d28  64220000	snei	r2,r1,#0
 1218  00001d2c  14400090	bnez	r2,L80_LF2
 1219  00001d30  54000000	nop; delay slot nop
 1220  00001d34  8fc10000	lw	r1,(r30)
 1221  00001d38  90220000	lbu	r2,(r1)
 1222  00001d3c  60410030	seqi	r1,r2,#48
 1223  00001d40  10200074	beqz	r1,L81_LF2
 1224  00001d44  54000000	nop; delay slot nop
 1225  00001d48  8fc20000	lw	r2,(r30)
 1226  00001d4c  20410001	addi	r1,r2,#1
 1227  00001d50  00011020	add	r2,r0,r1
 1228  00001d54  afc20000	sw	(r30),r2
 1229  00001d58  8fc10000	lw	r1,(r30)
 1230  00001d5c  90220000	lbu	r2,(r1)
 1231  00001d60  60410078	seqi	r1,r2,#120
 1232  00001d64  14200020	bnez	r1,L83_LF2
 1233  00001d68  54000000	nop; delay slot nop
 1234  00001d6c  8fc10000	lw	r1,(r30)
 1235  00001d70  90220000	lbu	r2,(r1)
 1236  00001d74  60410058	seqi	r1,r2,#88
 1237  00001d78  1420000c	bnez	r1,L83_LF2
 1238  00001d7c  54000000	nop; delay slot nop
 1239  00001d80  08000024	j	L82_LF2
 1240  00001d84  54000000	nop; delay slot nop
 1241  00001d88          	L83_LF2:
 1242  00001d88  20010010	addi	r1,r0,#16
 1243  00001d8c  afc10008	sw	8(r30),r1
 1244  00001d90  8fc20000	lw	r2,(r30)
 1245  00001d94  20410001	addi	r1,r2,#1
 1246  00001d98  00011020	add	r2,r0,r1
 1247  00001d9c  afc20000	sw	(r30),r2
 1248  00001da0  0800000c	j	L84_LF2
 1249  00001da4  54000000	nop; delay slot nop
 1250  00001da8          	L82_LF2:
 1251  00001da8  20010008	addi	r1,r0,#8
 1252  00001dac  afc10008	sw	8(r30),r1
 1253  00001db0          	L84_LF2:
 1254  00001db0  0800000c	j	L80_LF2
 1255  00001db4  54000000	nop; delay slot nop
 1256  00001db8          	L81_LF2:
 1257  00001db8  2001000a	addi	r1,r0,#10
 1258  00001dbc  afc10008	sw	8(r30),r1
 1259  00001dc0          	L85_LF2:
 1260  00001dc0          	L80_LF2:
 1261  00001dc0  8fc10008	lw	r1,8(r30)
 1262  00001dc4  70220000	slei	r2,r1,#0
 1263  00001dc8  1440001c	bnez	r2,L87_LF2
 1264  00001dcc  54000000	nop; delay slot nop
 1265  00001dd0  8fc10008	lw	r1,8(r30)
 1266  00001dd4  6c220010	sgti	r2,r1,#16
 1267  00001dd8  1440000c	bnez	r2,L87_LF2
 1268  00001ddc  54000000	nop; delay slot nop
 1269  00001de0  08000010	j	L86_LF2
 1270  00001de4  54000000	nop; delay slot nop
 1271  00001de8          	L87_LF2:
 1272  00001de8  8fc1fff4	lw	r1,-12(r30)
 1273  00001dec  08000188	j	L72_LF2
 1274  00001df0  54000000	nop; delay slot nop
 1275  00001df4          	L86_LF2:
 1276  00001df4  54000000	nop
 1277  00001df8          	L88_LF2:
 1278  00001df8  8fc10000	lw	r1,(r30)
 1279  00001dfc  90220000	lbu	r2,(r1)
 1280  00001e00  6c41002f	sgtui	r1,r2,#47
 1281  00001e04  10200030	beqz	r1,L91_LF2
 1282  00001e08  54000000	nop; delay slot nop
 1283  00001e0c  8fc10000	lw	r1,(r30)
 1284  00001e10  90220000	lbu	r2,(r1)
 1285  00001e14  70410039	sleui	r1,r2,#57
 1286  00001e18  1020001c	beqz	r1,L91_LF2
 1287  00001e1c  54000000	nop; delay slot nop
 1288  00001e20  8fc10000	lw	r1,(r30)
 1289  00001e24  90220000	lbu	r2,(r1)
 1290  00001e28  2041ffd0	addi	r1,r2,#-48
 1291  00001e2c  afc1fff0	sw	-16(r30),r1
 1292  00001e30  0800008c	j	L92_LF2
 1293  00001e34  54000000	nop; delay slot nop
 1294  00001e38          	L91_LF2:
 1295  00001e38  8fc10000	lw	r1,(r30)
 1296  00001e3c  90220000	lbu	r2,(r1)
 1297  00001e40  6c410060	sgtui	r1,r2,#96
 1298  00001e44  10200030	beqz	r1,L93_LF2
 1299  00001e48  54000000	nop; delay slot nop
 1300  00001e4c  8fc10000	lw	r1,(r30)
 1301  00001e50  90220000	lbu	r2,(r1)
 1302  00001e54  7041007a	sleui	r1,r2,#122
 1303  00001e58  1020001c	beqz	r1,L93_LF2
 1304  00001e5c  54000000	nop; delay slot nop
 1305  00001e60  8fc10000	lw	r1,(r30)
 1306  00001e64  90220000	lbu	r2,(r1)
 1307  00001e68  2041ffa9	addi	r1,r2,#-87
 1308  00001e6c  afc1fff0	sw	-16(r30),r1
 1309  00001e70  0800004c	j	L92_LF2
 1310  00001e74  54000000	nop; delay slot nop
 1311  00001e78          	L93_LF2:
 1312  00001e78  8fc10000	lw	r1,(r30)
 1313  00001e7c  90220000	lbu	r2,(r1)
 1314  00001e80  6c410040	sgtui	r1,r2,#64
 1315  00001e84  10200030	beqz	r1,L95_LF2
 1316  00001e88  54000000	nop; delay slot nop
 1317  00001e8c  8fc10000	lw	r1,(r30)
 1318  00001e90  90220000	lbu	r2,(r1)
 1319  00001e94  7041005a	sleui	r1,r2,#90
 1320  00001e98  1020001c	beqz	r1,L95_LF2
 1321  00001e9c  54000000	nop; delay slot nop
 1322  00001ea0  8fc10000	lw	r1,(r30)
 1323  00001ea4  90220000	lbu	r2,(r1)
 1324  00001ea8  2041ffc9	addi	r1,r2,#-55
 1325  00001eac  afc1fff0	sw	-16(r30),r1
 1326  00001eb0  0800000c	j	L92_LF2
 1327  00001eb4  54000000	nop; delay slot nop
 1328  00001eb8          	L95_LF2:
 1329  00001eb8  200103e8	addi	r1,r0,#1000
 1330  00001ebc  afc1fff0	sw	-16(r30),r1
 1331  00001ec0          	L96_LF2:
 1332  00001ec0          	L94_LF2:
 1333  00001ec0          	L92_LF2:
 1334  00001ec0  8fc1fff0	lw	r1,-16(r30)
 1335  00001ec4  8fc20008	lw	r2,8(r30)
 1336  00001ec8  0022082a	slt	r1,r1,r2
 1337  00001ecc  10200040	beqz	r1,L90_LF2
 1338  00001ed0  54000000	nop; delay slot nop
 1339  00001ed4  8fc1fff4	lw	r1,-12(r30)
 1340  00001ed8  8fc20008	lw	r2,8(r30)
 1341  00001edc  00200035	movi2fp	f0,r1
 1342  00001ee0  00400835	movi2fp	f1,r2
 1343  00001ee4  0401000e	mult	f0,f0,f1
 1344  00001ee8  00000834	movfp2i	r1,f0
 1345  00001eec  afc1fff4	sw	-12(r30),r1
 1346  00001ef0  8fc1fff4	lw	r1,-12(r30)
 1347  00001ef4  8fc2fff0	lw	r2,-16(r30)
 1348  00001ef8  00220820	add	r1,r1,r2
 1349  00001efc  afc1fff4	sw	-12(r30),r1
 1350  00001f00  8fc20000	lw	r2,(r30)
 1351  00001f04  20410001	addi	r1,r2,#1
 1352  00001f08  00011020	add	r2,r0,r1
 1353  00001f0c  afc20000	sw	(r30),r2
 1354  00001f10          	L97_LF2:
 1355  00001f10          	L90_LF2:
 1356  00001f10  8fc1fff0	lw	r1,-16(r30)
 1357  00001f14  8fc20008	lw	r2,8(r30)
 1358  00001f18  0022082a	slt	r1,r1,r2
 1359  00001f1c  1420000c	bnez	r1,L98_LF2
 1360  00001f20  54000000	nop; delay slot nop
 1361  00001f24  0800000c	j	L89_LF2
 1362  00001f28  54000000	nop; delay slot nop
 1363  00001f2c          	L98_LF2:
 1364  00001f2c  0bfffec8	j	L88_LF2
 1365  00001f30  54000000	nop; delay slot nop
 1366  00001f34          	L89_LF2:
 1367  00001f34  8fc10004	lw	r1,4(r30)
 1368  00001f38  64220000	snei	r2,r1,#0
 1369  00001f3c  10400010	beqz	r2,L99_LF2
 1370  00001f40  54000000	nop; delay slot nop
 1371  00001f44  8fc10004	lw	r1,4(r30)
 1372  00001f48  8fc20000	lw	r2,(r30)
 1373  00001f4c  ac220000	sw	(r1),r2
 1374  00001f50          	L99_LF2:
 1375  00001f50  8fc1fff4	lw	r1,-12(r30)
 1376  00001f54  8fc2ffec	lw	r2,-20(r30)
 1377  00001f58  00200035	movi2fp	f0,r1
 1378  00001f5c  00400835	movi2fp	f1,r2
 1379  00001f60  0401000e	mult	f0,f0,f1
 1380  00001f64  00000834	movfp2i	r1,f0
 1381  00001f68  afc1fff4	sw	-12(r30),r1
 1382  00001f6c  8fc1fff4	lw	r1,-12(r30)
 1383  00001f70  08000004	j	L72_LF2
 1384  00001f74  54000000	nop; delay slot nop
 1385  00001f78          	L72_LF2:
 1386  00001f78  8fa20000	lw	r2,0(r29)
 1387  00001f7c  8fdffff8	lw	r31,-8(r30)
 1388  00001f80  001ee820	add	r29,r0,r30
 1389  00001f84  8fdefffc	lw	r30,-4(r30)
 1390  00001f88  4be00000	jr	r31
 1391  00001f8c  54000000	nop
 1392  00001f90          	.endproc _dstrtol
 1393  00001f90          	.align 2
 1394  00001f90          	.proc _bcopy
 1395  00001f90          	.global _bcopy
 1396  00001f90          	_bcopy:
 1397                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1398  00001f90  afbefffc	sw	-4(r29),r30; push fp
 1399  00001f94  001df020	add	r30,r0,r29; fp = sp
 1400  00001f98  afbffff8	sw	-8(r29),r31; push ret addr
 1401  00001f9c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1402  00001fa0  afa20000	sw	0(r29),r2
 1403  00001fa4  afa30004	sw	4(r29),r3
 1404  00001fa8  54000000	nop
 1405  00001fac          	L101_LF2:
 1406  00001fac  8fc10008	lw	r1,8(r30)
 1407  00001fb0  2022ffff	addi	r2,r1,#-1
 1408  00001fb4  afc20008	sw	8(r30),r2
 1409  00001fb8  6c210000	sgti	r1,r1,#0
 1410  00001fbc  1420000c	bnez	r1,L103_LF2
 1411  00001fc0  54000000	nop; delay slot nop
 1412  00001fc4  0800002c	j	L102_LF2
 1413  00001fc8  54000000	nop; delay slot nop
 1414  00001fcc          	L103_LF2:
 1415  00001fcc  8fc10004	lw	r1,4(r30)
 1416  00001fd0  20220001	addi	r2,r1,#1
 1417  00001fd4  afc20004	sw	4(r30),r2
 1418  00001fd8  8fc20000	lw	r2,(r30)
 1419  00001fdc  20430001	addi	r3,r2,#1
 1420  00001fe0  afc30000	sw	(r30),r3
 1421  00001fe4  80420000	lb	r2,(r2)
 1422  00001fe8  a0220000	sb	(r1),r2
 1423  00001fec  0bffffbc	j	L101_LF2
 1424  00001ff0  54000000	nop; delay slot nop
 1425  00001ff4          	L102_LF2:
 1426  00001ff4          	L100_LF2:
 1427  00001ff4  8fa20000	lw	r2,0(r29)
 1428  00001ff8  8fa30004	lw	r3,4(r29)
 1429  00001ffc  8fdffff8	lw	r31,-8(r30)
 1430  00002000  001ee820	add	r29,r0,r30
 1431  00002004  8fdefffc	lw	r30,-4(r30)
 1432  00002008  4be00000	jr	r31
 1433  0000200c  54000000	nop
 1434  00002010          	.endproc _bcopy
 1435  00002010          	.align 2
 1436  00002010          	.proc _bzero
 1437  00002010          	.global _bzero
 1438  00002010          	_bzero:
 1439                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1440  00002010  afbefffc	sw	-4(r29),r30; push fp
 1441  00002014  001df020	add	r30,r0,r29; fp = sp
 1442  00002018  afbffff8	sw	-8(r29),r31; push ret addr
 1443  0000201c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1444  00002020  afa20000	sw	0(r29),r2
 1445  00002024  54000000	nop
 1446  00002028          	L105_LF2:
 1447  00002028  8fc10004	lw	r1,4(r30)
 1448  0000202c  2022ffff	addi	r2,r1,#-1
 1449  00002030  afc20004	sw	4(r30),r2
 1450  00002034  6c210000	sgti	r1,r1,#0
 1451  00002038  1420000c	bnez	r1,L107_LF2
 1452  0000203c  54000000	nop; delay slot nop
 1453  00002040  08000020	j	L106_LF2
 1454  00002044  54000000	nop; delay slot nop
 1455  00002048          	L107_LF2:
 1456  00002048  8fc10000	lw	r1,(r30)
 1457  0000204c  20220001	addi	r2,r1,#1
 1458  00002050  afc20000	sw	(r30),r2
 1459  00002054  20020000	addi	r2,r0,(#0x0)&0xff
 1460  00002058  a0220000	sb	(r1),r2
 1461  0000205c  0bffffc8	j	L105_LF2
 1462  00002060  54000000	nop; delay slot nop
 1463  00002064          	L106_LF2:
 1464  00002064          	L104_LF2:
 1465  00002064  8fa20000	lw	r2,0(r29)
 1466  00002068  8fdffff8	lw	r31,-8(r30)
 1467  0000206c  001ee820	add	r29,r0,r30
 1468  00002070  8fdefffc	lw	r30,-4(r30)
 1469  00002074  4be00000	jr	r31
 1470  00002078  54000000	nop
 1471  0000207c          	.endproc _bzero
 1472  0000207c          	.align 2
 1473  0000207c          	.proc _min
 1474  0000207c          	.global _min
 1475  0000207c          	_min:
 1476                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1477  0000207c  afbefffc	sw	-4(r29),r30; push fp
 1478  00002080  001df020	add	r30,r0,r29; fp = sp
 1479  00002084  afbffff8	sw	-8(r29),r31; push ret addr
 1480  00002088  2fbd0010	subui	r29,r29,#16; alloc local storage
 1481  0000208c  afa20000	sw	0(r29),r2
 1482  00002090  afa30004	sw	4(r29),r3
 1483  00002094  8fc10000	lw	r1,(r30)
 1484  00002098  8fc20004	lw	r2,4(r30)
 1485  0000209c  0022182c	sle	r3,r1,r2
 1486  000020a0  14600008	bnez	r3,L109_LF2
 1487  000020a4  54000000	nop; delay slot nop
 1488  000020a8  8fc10004	lw	r1,4(r30)
 1489  000020ac          	L109_LF2:
 1490  000020ac  08000004	j	L108_LF2
 1491  000020b0  54000000	nop; delay slot nop
 1492  000020b4          	L108_LF2:
 1493  000020b4  8fa20000	lw	r2,0(r29)
 1494  000020b8  8fa30004	lw	r3,4(r29)
 1495  000020bc  8fdffff8	lw	r31,-8(r30)
 1496  000020c0  001ee820	add	r29,r0,r30
 1497  000020c4  8fdefffc	lw	r30,-4(r30)
 1498  000020c8  4be00000	jr	r31
 1499  000020cc  54000000	nop
 1500  000020d0          	.endproc _min
 1501  000020d0          	.align 2
 1502  000020d0          	.proc _max
 1503  000020d0          	.global _max
 1504  000020d0          	_max:
 1505                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1506  000020d0  afbefffc	sw	-4(r29),r30; push fp
 1507  000020d4  001df020	add	r30,r0,r29; fp = sp
 1508  000020d8  afbffff8	sw	-8(r29),r31; push ret addr
 1509  000020dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1510  000020e0  afa20000	sw	0(r29),r2
 1511  000020e4  afa30004	sw	4(r29),r3
 1512  000020e8  8fc10000	lw	r1,(r30)
 1513  000020ec  8fc20004	lw	r2,4(r30)
 1514  000020f0  0022182d	sge	r3,r1,r2
 1515  000020f4  14600008	bnez	r3,L111_LF2
 1516  000020f8  54000000	nop; delay slot nop
 1517  000020fc  8fc10004	lw	r1,4(r30)
 1518  00002100          	L111_LF2:
 1519  00002100  08000004	j	L110_LF2
 1520  00002104  54000000	nop; delay slot nop
 1521  00002108          	L110_LF2:
 1522  00002108  8fa20000	lw	r2,0(r29)
 1523  0000210c  8fa30004	lw	r3,4(r29)
 1524  00002110  8fdffff8	lw	r31,-8(r30)
 1525  00002114  001ee820	add	r29,r0,r30
 1526  00002118  8fdefffc	lw	r30,-4(r30)
 1527  0000211c  4be00000	jr	r31
 1528  00002120  54000000	nop
 1529  00002124          	.endproc _max
 1530                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1531                      ;;;
 1532                      ;;; Most of the traps are called in files from libtraps.
 1535  00002124          	.align 2
 1536  00002124          	.proc _exit
 1537  00002124          	.global _exit
 1538  00002124          	_exit:
 1539  00002124  44000300	trap	#0x300
 1540  00002128  4be00000	jr	r31
 1541  0000212c  54000000	nop
 1542  00002130          	.endproc _exit
 1544                      ; for the benefit of gcc.
 1545  00002130          	.proc ___main
 1546  00002130          	.global ___main
 1547  00002130          	___main:
 1548  00002130  4be00000	jr	r31
 1549  00002134  54000000	nop
 1550  00002138          	.endproc ___main
 1551  00002138          	.text
 1552  00002138          	.global _etext
 1553  00002138          	_etext:
 1554  00002138          	.align 3
 1555  00002138          	.data
 1556  000030a2          	.global _edata
 1557  000030a2          	_edata:
