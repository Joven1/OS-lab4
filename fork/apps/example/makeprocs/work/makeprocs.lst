 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 282
    4                      ; Text size: 4580
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <which program to run (1-6) or all of them (0) \n\000"
   82  00003004  653a2025	
   82  00003008  73203c77	
   82  0000300c  68696368	
   82  00003010  2070726f	
   82  00003014  6772616d	
   82  00003018  20746f20	
   82  0000301c  72756e20	
   82  00003020  28312d36	
   82  00003024  29206f72	
   82  00003028  20616c6c	
   82  0000302c  206f6620	
   82  00003030  7468656d	
   82  00003034  20283029	
   82  00003038  200a00  	
   83  0000303b          	.align 2
   84  0000303c          	LC1_LF0:
   85  0000303c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   85  00003040  70726f63	
   85  00003044  73202825	
   85  00003048  64293a20	
   85  0000304c  42616420	
   85  00003050  73656d5f	
   85  00003054  63726561	
   85  00003058  74650a00	
   86  0000305c          	.align 2
   87  0000305c          	LC2_LF0:
   88  0000305c  50726f63	.ascii "Process: (%d) Fork Number: (%d)\n\000"
   88  00003060  6573733a	
   88  00003064  20282564	
   88  00003068  2920466f	
   88  0000306c  726b204e	
   88  00003070  756d6265	
   88  00003074  723a2028	
   88  00003078  2564290a	
   88  0000307c  00      	
   89  0000307d          	.align 2
   90  00003080          	LC3_LF0:
   91  00003080  54686973	.ascii "This is a Parent Process: (%d)\n\000"
   91  00003084  20697320	
   91  00003088  61205061	
   91  0000308c  72656e74	
   91  00003090  2050726f	
   91  00003094  63657373	
   91  00003098  3a202825	
   91  0000309c  64290a00	
   92  000030a0          	.align 2
   93  000030a0          	LC4_LF0:
   94  000030a0  54686520	.ascii "The Child (%d) ID: %d\n\000"
   94  000030a4  4368696c	
   94  000030a8  64202825	
   94  000030ac  64292049	
   94  000030b0  443a2025	
   94  000030b4  640a00  	
   95  000030b7          	.align 2
   96  000030b8          	LC5_LF0:
   97  000030b8  54686973	.ascii "This is a Child (%d): (%d)\n\000"
   97  000030bc  20697320	
   97  000030c0  61204368	
   97  000030c4  696c6420	
   97  000030c8  28256429	
   97  000030cc  3a202825	
   97  000030d0  64290a00	
   98  000030d4          	.align 2
   99  000030d4          	LC6_LF0:
  100  000030d4  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  100  000030d8  70726f63	
  100  000030dc  73202825	
  100  000030e0  64293a20	
  100  000030e4  416c6c20	
  100  000030e8  6f746865	
  100  000030ec  72207072	
  100  000030f0  6f636573	
  100  000030f4  73657320	
  100  000030f8  636f6d70	
  100  000030fc  6c657465	
  100  00003100  642c2065	
  100  00003104  78697469	
  100  00003108  6e67206d	
  100  0000310c  61696e20	
  100  00003110  70726f63	
  100  00003114  6573732e	
  100  00003118  0a      	
  101  00003119  00      	.ascii "\000"
  102  0000311a          	.text
  103  000010d4          	.align 2
  104  000010d4          	.proc _main
  105  000010d4          	.global _main
  106  000010d4          	_main:
  107                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  108  000010d4  afbefffc	sw	-4(r29),r30; push fp
  109  000010d8  001df020	add	r30,r0,r29; fp = sp
  110  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  111  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  112  000010e4  8fc20000	lw	r2,(r30)
  113  000010e8  8fc30004	lw	r3,4(r30)
  114  000010ec  0c0010ec	jal	___main
  115  000010f0  54000000	nop; not filled.
  116  000010f4  64410002	snei	r1,r2,#2
  117  000010f8  10200030	beqz	r1,L14_LF0
  118  000010fc  54000000	nop; not filled.
  119  00001100  23bdfff8	addi	r29,r29,#-8
  120  00001104  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  121  00001108  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  122  0000110c  afa50000	sw	(r29),r5
  123  00001110  8c610000	lw	r1,(r3)
  124  00001114  afa10004	sw	4(r29),r1
  125  00001118  0c0001f4	jal	_Printf
  126  0000111c  54000000	nop; not filled.
  127  00001120  0c000300	jal	_Exit
  128  00001124  54000000	nop; not filled.
  129  00001128  23bd0008	addi	r29,r29,#8
  130  0000112c          	L14_LF0:
  131  0000112c  23bdfff0	addi	r29,r29,#-16
  132  00001130  8c630004	lw	r3,4(r3)
  133  00001134  afa30000	sw	(r29),r3
  134  00001138  20050000	addi	r5,r0,#0
  135  0000113c  afa50004	sw	4(r29),r5
  136  00001140  2005000a	addi	r5,r0,#10
  137  00001144  afa50008	sw	8(r29),r5
  138  00001148  0c000b94	jal	_dstrtol
  139  0000114c  54000000	nop; not filled.
  140  00001150  00012020	add	r4,r0,r1
  141  00001154  20050000	addi	r5,r0,#0
  142  00001158  afa50000	sw	(r29),r5
  143  0000115c  0c0001f8	jal	_sem_create
  144  00001160  54000000	nop; not filled.
  145  00001164  00011020	add	r2,r0,r1
  146  00001168  23bd0010	addi	r29,r29,#16
  147  0000116c  6041ffff	seqi	r1,r2,#-1
  148  00001170  10200034	beqz	r1,L15_LF0
  149  00001174  54000000	nop; not filled.
  150  00001178  0c0001ac	jal	_getpid
  151  0000117c  54000000	nop; not filled.
  152  00001180  23bdfff8	addi	r29,r29,#-8
  153  00001184  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  154  00001188  24a5303c	addui	r5,r5,(LC1_LF0)&0xffff
  155  0000118c  afa50000	sw	(r29),r5
  156  00001190  afa10004	sw	4(r29),r1
  157  00001194  0c000178	jal	_Printf
  158  00001198  54000000	nop; not filled.
  159  0000119c  0c000284	jal	_Exit
  160  000011a0  54000000	nop; not filled.
  161  000011a4  23bd0008	addi	r29,r29,#8
  162  000011a8          	L15_LF0:
  163  000011a8  23bdfff8	addi	r29,r29,#-8
  164  000011ac  afa20000	sw	(r29),r2
  165  000011b0  23c1ffe8	addi	r1,r30,#-24
  166  000011b4  afa10004	sw	4(r29),r1
  167  000011b8  0c000998	jal	_ditoa
  168  000011bc  54000000	nop; not filled.
  169  000011c0  20020000	addi	r2,r0,#0
  170  000011c4  23bd0008	addi	r29,r29,#8
  171  000011c8  0044082a	slt	r1,r2,r4
  172  000011cc  102000c8	beqz	r1,L17_LF0
  173  000011d0  54000000	nop; not filled.
  174  000011d4          	L19_LF0:
  175  000011d4  0c000150	jal	_getpid
  176  000011d8  54000000	nop; not filled.
  177  000011dc  23bdfff0	addi	r29,r29,#-16
  178  000011e0  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  179  000011e4  24a5305c	addui	r5,r5,(LC2_LF0)&0xffff
  180  000011e8  afa50000	sw	(r29),r5
  181  000011ec  afa10004	sw	4(r29),r1
  182  000011f0  afa20008	sw	8(r29),r2
  183  000011f4  0c000118	jal	_Printf
  184  000011f8  54000000	nop; not filled.
  185  000011fc  0c00011c	jal	_fork
  186  00001200  54000000	nop; not filled.
  187  00001204  00011820	add	r3,r0,r1
  188  00001208  23bd0010	addi	r29,r29,#16
  189  0000120c  64610000	snei	r1,r3,#0
  190  00001210  10200048	beqz	r1,L20_LF0
  191  00001214  54000000	nop; not filled.
  192  00001218  0c00010c	jal	_getpid
  193  0000121c  54000000	nop; not filled.
  194  00001220  23bdfff8	addi	r29,r29,#-8
  195  00001224  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  196  00001228  24a53080	addui	r5,r5,(LC3_LF0)&0xffff
  197  0000122c  afa50000	sw	(r29),r5
  198  00001230  afa10004	sw	4(r29),r1
  199  00001234  0c0000d8	jal	_Printf
  200  00001238  54000000	nop; not filled.
  201  0000123c  23bdfff8	addi	r29,r29,#-8
  202  00001240  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  203  00001244  24a530a0	addui	r5,r5,(LC4_LF0)&0xffff
  204  00001248  afa50000	sw	(r29),r5
  205  0000124c  afa20004	sw	4(r29),r2
  206  00001250  afa30008	sw	8(r29),r3
  207  00001254  08000024	j	L23_LF0
  208  00001258  54000000	nop; not filled.
  209  0000125c          	L20_LF0:
  210  0000125c  0c0000c8	jal	_getpid
  211  00001260  54000000	nop; not filled.
  212  00001264  23bdfff0	addi	r29,r29,#-16
  213  00001268  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  214  0000126c  24a530b8	addui	r5,r5,(LC5_LF0)&0xffff
  215  00001270  afa50000	sw	(r29),r5
  216  00001274  afa20004	sw	4(r29),r2
  217  00001278  afa10008	sw	8(r29),r1
  218  0000127c          	L23_LF0:
  219  0000127c  0c000090	jal	_Printf
  220  00001280  54000000	nop; not filled.
  221  00001284  23bd0010	addi	r29,r29,#16
  222  00001288  20420001	addi	r2,r2,#1
  223  0000128c  0044082a	slt	r1,r2,r4
  224  00001290  1420ff40	bnez	r1,L19_LF0
  225  00001294  54000000	nop; not filled.
  226  00001298          	L17_LF0:
  227  00001298  0c00008c	jal	_getpid
  228  0000129c  54000000	nop; not filled.
  229  000012a0  23bdfff8	addi	r29,r29,#-8
  230  000012a4  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  231  000012a8  24a530d4	addui	r5,r5,(LC6_LF0)&0xffff
  232  000012ac  afa50000	sw	(r29),r5
  233  000012b0  afa10004	sw	4(r29),r1
  234  000012b4  0c000058	jal	_Printf
  235  000012b8  54000000	nop; not filled.
  236  000012bc  23bd0008	addi	r29,r29,#8
  237  000012c0  0c000f0c	jal	_exit
  238  000012c4  54000000	nop
  239  000012c8          	.endproc _main
  240                      ;;;
  241                      ;;; Stub functions for DLX traps.
  242                      ;;;
  243                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  244                      ;;;
  245                      ;;; The traps such as Open and Close
  246                      ;;; (note the capital letters) are for use by user programs.  The traps
  247                      ;;; with names such as open and close (lower case) are for use by the OS.
  248                      ;;;
  251  000012c8          	.align 2
  253                      ;;; The following are the traps to be used by user-level programs
  254                      ;;;
  256  000012c8          	.align 2
  257  000012c8          	.proc _Open
  258  000012c8          	.global _Open
  259  000012c8          	_Open:
  260                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  261                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  262                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  263  000012c8  44000213	trap	#0x213
  264  000012cc  4be00000	jr	r31
  265  000012d0  54000000	nop
  266  000012d4          	.endproc _Open
  268  000012d4          	.proc _Close
  269  000012d4          	.global _Close
  270  000012d4          	_Close:
  271  000012d4  44000214	trap	#0x214
  272  000012d8  4be00000	jr	r31
  273  000012dc  54000000	nop
  274  000012e0          	.endproc _Close
  276  000012e0          	.proc _Read
  277  000012e0          	.global _Read
  278  000012e0          	_Read:
  279  000012e0  44000210	trap	#0x210
  280  000012e4  4be00000	jr	r31
  281  000012e8  54000000	nop
  282  000012ec          	.endproc _Read
  284  000012ec          	.proc _Write
  285  000012ec          	.global _Write
  286  000012ec          	_Write:
  287  000012ec  44000211	trap	#0x211
  288  000012f0  4be00000	jr	r31
  289  000012f4  54000000	nop
  290  000012f8          	.endproc _Write
  292  000012f8          	.proc _Lseek
  293  000012f8          	.global _Lseek
  294  000012f8          	_Lseek:
  295  000012f8  44000212	trap	#0x212
  296  000012fc  4be00000	jr	r31
  297  00001300  54000000	nop
  298  00001304          	.endproc _Lseek
  300  00001304          	.proc _Putchar
  301  00001304          	.global _Putchar
  302  00001304          	_Putchar:
  303  00001304  44000280	trap	#0x280
  304  00001308  4be00000	jr	r31
  305  0000130c  54000000	nop
  306  00001310          	.endproc _Putchar
  308  00001310          	.proc _Printf
  309  00001310          	.global _Printf
  310  00001310          	_Printf:
  311  00001310  44000201	trap	#0x201
  312  00001314  4be00000	jr	r31
  313  00001318  54000000	nop
  314  0000131c          	.endproc _Printf
  316  0000131c          	.proc _fork
  317  0000131c          	.global _fork
  318  0000131c          	_fork:
  319  0000131c  44000430	trap	#0x430
  320  00001320  4be00000	jr	r31
  321  00001324  54000000	nop
  322  00001328          	.endproc _fork
  324  00001328          	.proc _getpid
  325  00001328          	.global _getpid
  326  00001328          	_getpid:
  327  00001328  44000431	trap	#0x431
  328  0000132c  4be00000	jr	r31
  329  00001330  54000000	nop
  330  00001334          	.endproc _getpid
  332  00001334          	.proc _process_create
  333  00001334          	.global _process_create
  334  00001334          	_process_create:
  335  00001334  44000432	trap	#0x432
  336  00001338  4be00000	jr	r31
  337  0000133c  54000000	nop
  338  00001340          	.endproc _process_create
  340  00001340          	.proc _shmget
  341  00001340          	.global _shmget
  342  00001340          	_shmget:
  343  00001340  44000440	trap	#0x440
  344  00001344  4be00000	jr	r31
  345  00001348  54000000	nop
  346  0000134c          	.endproc _shmget
  348  0000134c          	.proc _shmat
  349  0000134c          	.global _shmat
  350  0000134c          	_shmat:
  351  0000134c  44000441	trap	#0x441
  352  00001350  4be00000	jr	r31
  353  00001354  54000000	nop
  354  00001358          	.endproc _shmat
  356  00001358          	.proc _sem_create
  357  00001358          	.global _sem_create
  358  00001358          	_sem_create:
  359  00001358  44000450	trap	#0x450
  360  0000135c  4be00000	jr	r31
  361  00001360  54000000	nop
  362  00001364          	.endproc _sem_create
  364  00001364          	.proc _sem_wait
  365  00001364          	.global _sem_wait
  366  00001364          	_sem_wait:
  367  00001364  44000451	trap	#0x451
  368  00001368  4be00000	jr	r31
  369  0000136c  54000000	nop
  370  00001370          	.endproc _sem_wait
  372  00001370          	.proc _sem_signal
  373  00001370          	.global _sem_signal
  374  00001370          	_sem_signal:
  375  00001370  44000452	trap	#0x452
  376  00001374  4be00000	jr	r31
  377  00001378  54000000	nop
  378  0000137c          	.endproc _sem_signal
  380  0000137c          	.proc _lock_create
  381  0000137c          	.global _lock_create
  382  0000137c          	_lock_create:
  383  0000137c  44000453	trap	#0x453
  384  00001380  4be00000	jr	r31
  385  00001384  54000000	nop
  386  00001388          	.endproc _lock_create
  388  00001388          	.proc _lock_acquire
  389  00001388          	.global _lock_acquire
  390  00001388          	_lock_acquire:
  391  00001388  44000454	trap	#0x454
  392  0000138c  4be00000	jr	r31
  393  00001390  54000000	nop
  394  00001394          	.endproc _lock_acquire
  396  00001394          	.proc _lock_release
  397  00001394          	.global _lock_release
  398  00001394          	_lock_release:
  399  00001394  44000455	trap	#0x455
  400  00001398  4be00000	jr	r31
  401  0000139c  54000000	nop
  402  000013a0          	.endproc _lock_release
  404  000013a0          	.proc _cond_create
  405  000013a0          	.global _cond_create
  406  000013a0          	_cond_create:
  407  000013a0  44000456	trap	#0x456
  408  000013a4  4be00000	jr	r31
  409  000013a8  54000000	nop
  410  000013ac          	.endproc _cond_create
  412  000013ac          	.proc _cond_wait
  413  000013ac          	.global _cond_wait
  414  000013ac          	_cond_wait:
  415  000013ac  44000457	trap	#0x457
  416  000013b0  4be00000	jr	r31
  417  000013b4  54000000	nop
  418  000013b8          	.endproc _cond_wait
  420  000013b8          	.proc _cond_signal
  421  000013b8          	.global _cond_signal
  422  000013b8          	_cond_signal:
  423  000013b8  44000458	trap	#0x458
  424  000013bc  4be00000	jr	r31
  425  000013c0  54000000	nop
  426  000013c4          	.endproc _cond_signal
  428  000013c4          	.proc _cond_broadcast
  429  000013c4          	.global _cond_broadcast
  430  000013c4          	_cond_broadcast:
  431  000013c4  44000459	trap	#0x459
  432  000013c8  4be00000	jr	r31
  433  000013cc  54000000	nop
  434  000013d0          	.endproc _cond_broadcast
  436  000013d0          	.proc _mbox_create
  437  000013d0          	.global _mbox_create
  438  000013d0          	_mbox_create:
  439  000013d0  44000460	trap	#0x460
  440  000013d4  4be00000	jr	r31
  441  000013d8  54000000	nop
  442  000013dc          	.endproc _mbox_create
  444  000013dc          	.proc _mbox_open
  445  000013dc          	.global _mbox_open
  446  000013dc          	_mbox_open:
  447  000013dc  44000461	trap	#0x461
  448  000013e0  4be00000	jr	r31
  449  000013e4  54000000	nop
  450  000013e8          	.endproc _mbox_open
  452  000013e8          	.proc _mbox_close
  453  000013e8          	.global _mbox_close
  454  000013e8          	_mbox_close:
  455  000013e8  44000462	trap	#0x462
  456  000013ec  4be00000	jr	r31
  457  000013f0  54000000	nop
  458  000013f4          	.endproc _mbox_close
  460  000013f4          	.proc _mbox_send
  461  000013f4          	.global _mbox_send
  462  000013f4          	_mbox_send:
  463  000013f4  44000463	trap	#0x463
  464  000013f8  4be00000	jr	r31
  465  000013fc  54000000	nop
  466  00001400          	.endproc _mbox_send
  468  00001400          	.proc _mbox_recv
  469  00001400          	.global _mbox_recv
  470  00001400          	_mbox_recv:
  471  00001400  44000464	trap	#0x464
  472  00001404  4be00000	jr	r31
  473  00001408  54000000	nop
  474  0000140c          	.endproc _mbox_recv
  476  0000140c          	.proc _sleep
  477  0000140c          	.global _sleep
  478  0000140c          	_sleep:
  479  0000140c  44000465	trap	#0x465
  480  00001410  4be00000	jr	r31
  481  00001414  54000000	nop
  482  00001418          	.endproc _sleep
  484  00001418          	.proc _yield
  485  00001418          	.global _yield
  486  00001418          	_yield:
  487  00001418  44000466	trap	#0x466
  488  0000141c  4be00000	jr	r31
  489  00001420  54000000	nop
  490  00001424          	.endproc _yield
  493  00001424          	.proc _Exit
  494  00001424          	.global _Exit
  495  00001424          	_Exit:
  496  00001424  44000500	trap	#0x500
  497  00001428  4be00000	jr	r31
  498  0000142c  54000000	nop
  499  00001430          	.endproc _Exit
  502  00001430          	.proc _malloc
  503  00001430          	.global _malloc
  504  00001430          	_malloc:
  505  00001430  44000467	trap	#0x467
  506  00001434  4be00000	jr	r31
  507  00001438          	.endproc _malloc
  510  00001438          	.proc _mfree
  511  00001438          	.global _mfree
  512  00001438          	_mfree:
  513  00001438  44000468	trap	#0x468
  514  0000143c  4be00000	jr	r31
  515  00001440          	.endproc _mfree
  516                      ; Compiled by GCC
  518  00001440          	.align 2
  519  00001440          	.proc _isspace
  520  00001440          	.global _isspace
  521  00001440          	_isspace:
  522                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  523  00001440  afbefffc	sw	-4(r29),r30; push fp
  524  00001444  001df020	add	r30,r0,r29; fp = sp
  525  00001448  afbffff8	sw	-8(r29),r31; push ret addr
  526  0000144c  2fbd0018	subui	r29,r29,#24; alloc local storage
  527  00001450  afa20000	sw	0(r29),r2
  528  00001454  afa30004	sw	4(r29),r3
  529  00001458  afa40008	sw	8(r29),r4
  530  0000145c  83c20003	lb	r2,3(r30)
  531  00001460  20010000	addi	r1,r0,#0
  532  00001464  304300ff	andi	r3,r2,#0x00ff
  533  00001468  60640020	seqi	r4,r3,#32
  534  0000146c  1480002c	bnez	r4,L3_LF2
  535  00001470  54000000	nop; delay slot nop
  536  00001474  304300ff	andi	r3,r2,#0x00ff
  537  00001478  60640009	seqi	r4,r3,#9
  538  0000147c  1480001c	bnez	r4,L3_LF2
  539  00001480  54000000	nop; delay slot nop
  540  00001484  304300ff	andi	r3,r2,#0x00ff
  541  00001488  6064000a	seqi	r4,r3,#10
  542  0000148c  1480000c	bnez	r4,L3_LF2
  543  00001490  54000000	nop; delay slot nop
  544  00001494  08000008	j	L2_LF2
  545  00001498  54000000	nop; delay slot nop
  546  0000149c          	L3_LF2:
  547  0000149c  20010001	addi	r1,r0,#1
  548  000014a0          	L2_LF2:
  549  000014a0  08000004	j	L1_LF2
  550  000014a4  54000000	nop; delay slot nop
  551  000014a8          	L1_LF2:
  552  000014a8  8fa20000	lw	r2,0(r29)
  553  000014ac  8fa30004	lw	r3,4(r29)
  554  000014b0  8fa40008	lw	r4,8(r29)
  555  000014b4  8fdffff8	lw	r31,-8(r30)
  556  000014b8  001ee820	add	r29,r0,r30
  557  000014bc  8fdefffc	lw	r30,-4(r30)
  558  000014c0  4be00000	jr	r31
  559  000014c4  54000000	nop
  560  000014c8          	.endproc _isspace
  561  000014c8          	.align 2
  562  000014c8          	.proc _isxdigit
  563  000014c8          	.global _isxdigit
  564  000014c8          	_isxdigit:
  565                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  566  000014c8  afbefffc	sw	-4(r29),r30; push fp
  567  000014cc  001df020	add	r30,r0,r29; fp = sp
  568  000014d0  afbffff8	sw	-8(r29),r31; push ret addr
  569  000014d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  570  000014d8  afa20000	sw	0(r29),r2
  571  000014dc  afa30004	sw	4(r29),r3
  572  000014e0  afa40008	sw	8(r29),r4
  573  000014e4  83c20003	lb	r2,3(r30)
  574  000014e8  20010000	addi	r1,r0,#0
  575  000014ec  304300ff	andi	r3,r2,#0x00ff
  576  000014f0  6c64002f	sgtui	r4,r3,#47
  577  000014f4  1080001c	beqz	r4,L7_LF2
  578  000014f8  54000000	nop; delay slot nop
  579  000014fc  304300ff	andi	r3,r2,#0x00ff
  580  00001500  70640039	sleui	r4,r3,#57
  581  00001504  1480005c	bnez	r4,L6_LF2
  582  00001508  54000000	nop; delay slot nop
  583  0000150c  08000004	j	L7_LF2
  584  00001510  54000000	nop; delay slot nop
  585  00001514          	L7_LF2:
  586  00001514  304300ff	andi	r3,r2,#0x00ff
  587  00001518  6c640060	sgtui	r4,r3,#96
  588  0000151c  1080001c	beqz	r4,L8_LF2
  589  00001520  54000000	nop; delay slot nop
  590  00001524  304300ff	andi	r3,r2,#0x00ff
  591  00001528  70640066	sleui	r4,r3,#102
  592  0000152c  14800034	bnez	r4,L6_LF2
  593  00001530  54000000	nop; delay slot nop
  594  00001534  08000004	j	L8_LF2
  595  00001538  54000000	nop; delay slot nop
  596  0000153c          	L8_LF2:
  597  0000153c  304300ff	andi	r3,r2,#0x00ff
  598  00001540  6c640040	sgtui	r4,r3,#64
  599  00001544  10800020	beqz	r4,L5_LF2
  600  00001548  54000000	nop; delay slot nop
  601  0000154c  304300ff	andi	r3,r2,#0x00ff
  602  00001550  70640041	sleui	r4,r3,#65
  603  00001554  1480000c	bnez	r4,L6_LF2
  604  00001558  54000000	nop; delay slot nop
  605  0000155c  08000008	j	L5_LF2
  606  00001560  54000000	nop; delay slot nop
  607  00001564          	L6_LF2:
  608  00001564  20010001	addi	r1,r0,#1
  609  00001568          	L5_LF2:
  610  00001568  08000004	j	L4_LF2
  611  0000156c  54000000	nop; delay slot nop
  612  00001570          	L4_LF2:
  613  00001570  8fa20000	lw	r2,0(r29)
  614  00001574  8fa30004	lw	r3,4(r29)
  615  00001578  8fa40008	lw	r4,8(r29)
  616  0000157c  8fdffff8	lw	r31,-8(r30)
  617  00001580  001ee820	add	r29,r0,r30
  618  00001584  8fdefffc	lw	r30,-4(r30)
  619  00001588  4be00000	jr	r31
  620  0000158c  54000000	nop
  621  00001590          	.endproc _isxdigit
  622  00001590          	.align 2
  623  00001590          	.proc _dstrcpy
  624  00001590          	.global _dstrcpy
  625  00001590          	_dstrcpy:
  626                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  627  00001590  afbefffc	sw	-4(r29),r30; push fp
  628  00001594  001df020	add	r30,r0,r29; fp = sp
  629  00001598  afbffff8	sw	-8(r29),r31; push ret addr
  630  0000159c  2fbd0018	subui	r29,r29,#24; alloc local storage
  631  000015a0  afa20000	sw	0(r29),r2
  632  000015a4  afa30004	sw	4(r29),r3
  633  000015a8  8fc10000	lw	r1,(r30)
  634  000015ac  afc1fff4	sw	-12(r30),r1
  635  000015b0          	L10_LF2:
  636  000015b0  8fc10000	lw	r1,(r30)
  637  000015b4  20220001	addi	r2,r1,#1
  638  000015b8  afc20000	sw	(r30),r2
  639  000015bc  8fc20004	lw	r2,4(r30)
  640  000015c0  20430001	addi	r3,r2,#1
  641  000015c4  afc30004	sw	4(r30),r3
  642  000015c8  80420000	lb	r2,(r2)
  643  000015cc  a0220000	sb	(r1),r2
  644  000015d0  a3c2fff3	sb	-13(r30),r2
  645  000015d4          	L12_LF2:
  646  000015d4  93c1fff3	lbu	r1,-13(r30)
  647  000015d8  64220000	snei	r2,r1,#0
  648  000015dc  1440000c	bnez	r2,L13_LF2
  649  000015e0  54000000	nop; delay slot nop
  650  000015e4  0800000c	j	L11_LF2
  651  000015e8  54000000	nop; delay slot nop
  652  000015ec          	L13_LF2:
  653  000015ec  0bffffc0	j	L10_LF2
  654  000015f0  54000000	nop; delay slot nop
  655  000015f4          	L11_LF2:
  656  000015f4  8fc1fff4	lw	r1,-12(r30)
  657  000015f8  08000004	j	L9_LF2
  658  000015fc  54000000	nop; delay slot nop
  659  00001600          	L9_LF2:
  660  00001600  8fa20000	lw	r2,0(r29)
  661  00001604  8fa30004	lw	r3,4(r29)
  662  00001608  8fdffff8	lw	r31,-8(r30)
  663  0000160c  001ee820	add	r29,r0,r30
  664  00001610  8fdefffc	lw	r30,-4(r30)
  665  00001614  4be00000	jr	r31
  666  00001618  54000000	nop
  667  0000161c          	.endproc _dstrcpy
  668  0000161c          	.align 2
  669  0000161c          	.proc _dstrncpy
  670  0000161c          	.global _dstrncpy
  671  0000161c          	_dstrncpy:
  672                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  673  0000161c  afbefffc	sw	-4(r29),r30; push fp
  674  00001620  001df020	add	r30,r0,r29; fp = sp
  675  00001624  afbffff8	sw	-8(r29),r31; push ret addr
  676  00001628  2fbd0018	subui	r29,r29,#24; alloc local storage
  677  0000162c  afa20000	sw	0(r29),r2
  678  00001630  afa30004	sw	4(r29),r3
  679  00001634  8fc10000	lw	r1,(r30)
  680  00001638  afc1fff4	sw	-12(r30),r1
  681  0000163c          	L15_LF2:
  682  0000163c  8fc10008	lw	r1,8(r30)
  683  00001640  2022ffff	addi	r2,r1,#-1
  684  00001644  afc20008	sw	8(r30),r2
  685  00001648  70210000	slei	r1,r1,#0
  686  0000164c  1020000c	beqz	r1,L18_LF2
  687  00001650  54000000	nop; delay slot nop
  688  00001654  08000048	j	L16_LF2
  689  00001658  54000000	nop; delay slot nop
  690  0000165c          	L18_LF2:
  691  0000165c  8fc10000	lw	r1,(r30)
  692  00001660  20220001	addi	r2,r1,#1
  693  00001664  afc20000	sw	(r30),r2
  694  00001668  8fc20004	lw	r2,4(r30)
  695  0000166c  20430001	addi	r3,r2,#1
  696  00001670  afc30004	sw	4(r30),r3
  697  00001674  80420000	lb	r2,(r2)
  698  00001678  a0220000	sb	(r1),r2
  699  0000167c  a3c2fff3	sb	-13(r30),r2
  700  00001680          	L17_LF2:
  701  00001680  93c1fff3	lbu	r1,-13(r30)
  702  00001684  64220000	snei	r2,r1,#0
  703  00001688  1440000c	bnez	r2,L19_LF2
  704  0000168c  54000000	nop; delay slot nop
  705  00001690  0800000c	j	L16_LF2
  706  00001694  54000000	nop; delay slot nop
  707  00001698          	L19_LF2:
  708  00001698  0bffffa0	j	L15_LF2
  709  0000169c  54000000	nop; delay slot nop
  710  000016a0          	L16_LF2:
  711  000016a0  8fc1fff4	lw	r1,-12(r30)
  712  000016a4  08000004	j	L14_LF2
  713  000016a8  54000000	nop; delay slot nop
  714  000016ac          	L14_LF2:
  715  000016ac  8fa20000	lw	r2,0(r29)
  716  000016b0  8fa30004	lw	r3,4(r29)
  717  000016b4  8fdffff8	lw	r31,-8(r30)
  718  000016b8  001ee820	add	r29,r0,r30
  719  000016bc  8fdefffc	lw	r30,-4(r30)
  720  000016c0  4be00000	jr	r31
  721  000016c4  54000000	nop
  722  000016c8          	.endproc _dstrncpy
  723  000016c8          	.align 2
  724  000016c8          	.proc _dstrcat
  725  000016c8          	.global _dstrcat
  726  000016c8          	_dstrcat:
  727                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  728  000016c8  afbefffc	sw	-4(r29),r30; push fp
  729  000016cc  001df020	add	r30,r0,r29; fp = sp
  730  000016d0  afbffff8	sw	-8(r29),r31; push ret addr
  731  000016d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  732  000016d8  afa20000	sw	0(r29),r2
  733  000016dc  8fc10000	lw	r1,(r30)
  734  000016e0  afc1fff4	sw	-12(r30),r1
  735  000016e4          	L21_LF2:
  736  000016e4  8fc10000	lw	r1,(r30)
  737  000016e8  90220000	lbu	r2,(r1)
  738  000016ec  64410000	snei	r1,r2,#0
  739  000016f0  1420000c	bnez	r1,L23_LF2
  740  000016f4  54000000	nop; delay slot nop
  741  000016f8  0800001c	j	L22_LF2
  742  000016fc  54000000	nop; delay slot nop
  743  00001700          	L23_LF2:
  744  00001700  8fc20000	lw	r2,(r30)
  745  00001704  20410001	addi	r1,r2,#1
  746  00001708  00011020	add	r2,r0,r1
  747  0000170c  afc20000	sw	(r30),r2
  748  00001710  0bffffd0	j	L21_LF2
  749  00001714  54000000	nop; delay slot nop
  750  00001718          	L22_LF2:
  751  00001718  23bdfff8	addi	r29,r29,#-8
  752  0000171c  001d0820	add	r1,r0,r29
  753  00001720  8fc20000	lw	r2,(r30)
  754  00001724  ac220000	sw	(r1),r2
  755  00001728  8fc20004	lw	r2,4(r30)
  756  0000172c  ac220004	sw	4(r1),r2
  757  00001730  0ffffe5c	jal	_dstrcpy
  758  00001734  54000000	nop; delay slot nop
  759  00001738  23bd0008	addi	r29,r29,#8
  760  0000173c  8fc1fff4	lw	r1,-12(r30)
  761  00001740  08000004	j	L20_LF2
  762  00001744  54000000	nop; delay slot nop
  763  00001748          	L20_LF2:
  764  00001748  8fa20000	lw	r2,0(r29)
  765  0000174c  8fdffff8	lw	r31,-8(r30)
  766  00001750  001ee820	add	r29,r0,r30
  767  00001754  8fdefffc	lw	r30,-4(r30)
  768  00001758  4be00000	jr	r31
  769  0000175c  54000000	nop
  770  00001760          	.endproc _dstrcat
  771  00001760          	.align 2
  772  00001760          	.proc _dstrncmp
  773  00001760          	.global _dstrncmp
  774  00001760          	_dstrncmp:
  775                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  776  00001760  afbefffc	sw	-4(r29),r30; push fp
  777  00001764  001df020	add	r30,r0,r29; fp = sp
  778  00001768  afbffff8	sw	-8(r29),r31; push ret addr
  779  0000176c  2fbd0018	subui	r29,r29,#24; alloc local storage
  780  00001770  afa20000	sw	0(r29),r2
  781  00001774  afa30004	sw	4(r29),r3
  782  00001778  54000000	nop
  783  0000177c  20010000	addi	r1,r0,#0
  784  00001780  afc1fff4	sw	-12(r30),r1
  785  00001784          	L25_LF2:
  786  00001784  8fc1fff4	lw	r1,-12(r30)
  787  00001788  8fc20008	lw	r2,8(r30)
  788  0000178c  0022082a	slt	r1,r1,r2
  789  00001790  1420000c	bnez	r1,L28_LF2
  790  00001794  54000000	nop; delay slot nop
  791  00001798  08000088	j	L26_LF2
  792  0000179c  54000000	nop; delay slot nop
  793  000017a0          	L28_LF2:
  794  000017a0  8fc10004	lw	r1,4(r30)
  795  000017a4  90220000	lbu	r2,(r1)
  796  000017a8  64410000	snei	r1,r2,#0
  797  000017ac  14200018	bnez	r1,L29_LF2
  798  000017b0  54000000	nop; delay slot nop
  799  000017b4  20010000	addi	r1,r0,#0
  800  000017b8  080000d8	j	L24_LF2
  801  000017bc  54000000	nop; delay slot nop
  802  000017c0  08000028	j	L30_LF2
  803  000017c4  54000000	nop; delay slot nop
  804  000017c8          	L29_LF2:
  805  000017c8  8fc10000	lw	r1,(r30)
  806  000017cc  8fc20004	lw	r2,4(r30)
  807  000017d0  90210000	lbu	r1,(r1)
  808  000017d4  90420000	lbu	r2,(r2)
  809  000017d8  00220829	sne	r1,r1,r2
  810  000017dc  1020000c	beqz	r1,L30_LF2
  811  000017e0  54000000	nop; delay slot nop
  812  000017e4  0800003c	j	L26_LF2
  813  000017e8  54000000	nop; delay slot nop
  814  000017ec          	L31_LF2:
  815  000017ec          	L30_LF2:
  816  000017ec  8fc20000	lw	r2,(r30)
  817  000017f0  20410001	addi	r1,r2,#1
  818  000017f4  00011020	add	r2,r0,r1
  819  000017f8  afc20000	sw	(r30),r2
  820  000017fc  8fc20004	lw	r2,4(r30)
  821  00001800  20410001	addi	r1,r2,#1
  822  00001804  00011020	add	r2,r0,r1
  823  00001808  afc20004	sw	4(r30),r2
  824  0000180c          	L27_LF2:
  825  0000180c  8fc2fff4	lw	r2,-12(r30)
  826  00001810  20410001	addi	r1,r2,#1
  827  00001814  00011020	add	r2,r0,r1
  828  00001818  afc2fff4	sw	-12(r30),r2
  829  0000181c  0bffff64	j	L25_LF2
  830  00001820  54000000	nop; delay slot nop
  831  00001824          	L26_LF2:
  832  00001824  8fc1fff4	lw	r1,-12(r30)
  833  00001828  8fc20008	lw	r2,8(r30)
  834  0000182c  00220828	seq	r1,r1,r2
  835  00001830  10200018	beqz	r1,L32_LF2
  836  00001834  54000000	nop; delay slot nop
  837  00001838  20010000	addi	r1,r0,#0
  838  0000183c  08000054	j	L24_LF2
  839  00001840  54000000	nop; delay slot nop
  840  00001844  0800004c	j	L33_LF2
  841  00001848  54000000	nop; delay slot nop
  842  0000184c          	L32_LF2:
  843  0000184c  8fc20000	lw	r2,(r30)
  844  00001850  90410000	lbu	r1,(r2)
  845  00001854  8fc20004	lw	r2,4(r30)
  846  00001858  90430000	lbu	r3,(r2)
  847  0000185c  00230822	sub	r1,r1,r3
  848  00001860  74220000	sgei	r2,r1,#0
  849  00001864  10400020	beqz	r2,L34_LF2
  850  00001868  54000000	nop; delay slot nop
  851  0000186c  8fc10000	lw	r1,(r30)
  852  00001870  8fc20004	lw	r2,4(r30)
  853  00001874  90210000	lbu	r1,(r1)
  854  00001878  90420000	lbu	r2,(r2)
  855  0000187c  00220829	sne	r1,r1,r2
  856  00001880  08000008	j	L35_LF2
  857  00001884  54000000	nop; delay slot nop
  858  00001888          	L34_LF2:
  859  00001888  2001ffff	addi	r1,r0,#-1
  860  0000188c          	L35_LF2:
  861  0000188c  08000004	j	L24_LF2
  862  00001890  54000000	nop; delay slot nop
  863  00001894          	L33_LF2:
  864  00001894          	L24_LF2:
  865  00001894  8fa20000	lw	r2,0(r29)
  866  00001898  8fa30004	lw	r3,4(r29)
  867  0000189c  8fdffff8	lw	r31,-8(r30)
  868  000018a0  001ee820	add	r29,r0,r30
  869  000018a4  8fdefffc	lw	r30,-4(r30)
  870  000018a8  4be00000	jr	r31
  871  000018ac  54000000	nop
  872  000018b0          	.endproc _dstrncmp
  873  000018b0          	.align 2
  874  000018b0          	.proc _dstrlen
  875  000018b0          	.global _dstrlen
  876  000018b0          	_dstrlen:
  877                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  878  000018b0  afbefffc	sw	-4(r29),r30; push fp
  879  000018b4  001df020	add	r30,r0,r29; fp = sp
  880  000018b8  afbffff8	sw	-8(r29),r31; push ret addr
  881  000018bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  882  000018c0  afa20000	sw	0(r29),r2
  883  000018c4  20010000	addi	r1,r0,#0
  884  000018c8  afc1fff4	sw	-12(r30),r1
  885  000018cc          	L37_LF2:
  886  000018cc  8fc10000	lw	r1,(r30)
  887  000018d0  20220001	addi	r2,r1,#1
  888  000018d4  afc20000	sw	(r30),r2
  889  000018d8  90210000	lbu	r1,(r1)
  890  000018dc  64220000	snei	r2,r1,#0
  891  000018e0  1440000c	bnez	r2,L39_LF2
  892  000018e4  54000000	nop; delay slot nop
  893  000018e8  0800001c	j	L38_LF2
  894  000018ec  54000000	nop; delay slot nop
  895  000018f0          	L39_LF2:
  896  000018f0  8fc2fff4	lw	r2,-12(r30)
  897  000018f4  20410001	addi	r1,r2,#1
  898  000018f8  00011020	add	r2,r0,r1
  899  000018fc  afc2fff4	sw	-12(r30),r2
  900  00001900  0bffffc8	j	L37_LF2
  901  00001904  54000000	nop; delay slot nop
  902  00001908          	L38_LF2:
  903  00001908  8fc1fff4	lw	r1,-12(r30)
  904  0000190c  08000004	j	L36_LF2
  905  00001910  54000000	nop; delay slot nop
  906  00001914          	L36_LF2:
  907  00001914  8fa20000	lw	r2,0(r29)
  908  00001918  8fdffff8	lw	r31,-8(r30)
  909  0000191c  001ee820	add	r29,r0,r30
  910  00001920  8fdefffc	lw	r30,-4(r30)
  911  00001924  4be00000	jr	r31
  912  00001928  54000000	nop
  913  0000192c          	.endproc _dstrlen
  914  0000192c          	.align 2
  915  0000192c          	.proc _dstrstr
  916  0000192c          	.global _dstrstr
  917  0000192c          	_dstrstr:
  918                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  919  0000192c  afbefffc	sw	-4(r29),r30; push fp
  920  00001930  001df020	add	r30,r0,r29; fp = sp
  921  00001934  afbffff8	sw	-8(r29),r31; push ret addr
  922  00001938  2fbd0018	subui	r29,r29,#24; alloc local storage
  923  0000193c  afa20000	sw	0(r29),r2
  924  00001940  23bdfff8	addi	r29,r29,#-8
  925  00001944  001d0820	add	r1,r0,r29
  926  00001948  8fc20004	lw	r2,4(r30)
  927  0000194c  ac220000	sw	(r1),r2
  928  00001950  0fffff5c	jal	_dstrlen
  929  00001954  54000000	nop; delay slot nop
  930  00001958  23bd0008	addi	r29,r29,#8
  931  0000195c  afc1fff4	sw	-12(r30),r1
  932  00001960          	L41_LF2:
  933  00001960  8fc10000	lw	r1,(r30)
  934  00001964  90220000	lbu	r2,(r1)
  935  00001968  64410000	snei	r1,r2,#0
  936  0000196c  1420000c	bnez	r1,L43_LF2
  937  00001970  54000000	nop; delay slot nop
  938  00001974  08000060	j	L42_LF2
  939  00001978  54000000	nop; delay slot nop
  940  0000197c          	L43_LF2:
  941  0000197c  23bdfff0	addi	r29,r29,#-16
  942  00001980  001d0820	add	r1,r0,r29
  943  00001984  8fc20000	lw	r2,(r30)
  944  00001988  ac220000	sw	(r1),r2
  945  0000198c  8fc20004	lw	r2,4(r30)
  946  00001990  ac220004	sw	4(r1),r2
  947  00001994  8fc2fff4	lw	r2,-12(r30)
  948  00001998  ac220008	sw	8(r1),r2
  949  0000199c  0ffffdc0	jal	_dstrncmp
  950  000019a0  54000000	nop; delay slot nop
  951  000019a4  23bd0010	addi	r29,r29,#16
  952  000019a8  64220000	snei	r2,r1,#0
  953  000019ac  14400010	bnez	r2,L44_LF2
  954  000019b0  54000000	nop; delay slot nop
  955  000019b4  8fc10000	lw	r1,(r30)
  956  000019b8  08000028	j	L40_LF2
  957  000019bc  54000000	nop; delay slot nop
  958  000019c0          	L44_LF2:
  959  000019c0  8fc20000	lw	r2,(r30)
  960  000019c4  20410001	addi	r1,r2,#1
  961  000019c8  00011020	add	r2,r0,r1
  962  000019cc  afc20000	sw	(r30),r2
  963  000019d0  0bffff8c	j	L41_LF2
  964  000019d4  54000000	nop; delay slot nop
  965  000019d8          	L42_LF2:
  966  000019d8  20010000	addi	r1,r0,#0
  967  000019dc  08000004	j	L40_LF2
  968  000019e0  54000000	nop; delay slot nop
  969  000019e4          	L40_LF2:
  970  000019e4  8fa20000	lw	r2,0(r29)
  971  000019e8  8fdffff8	lw	r31,-8(r30)
  972  000019ec  001ee820	add	r29,r0,r30
  973  000019f0  8fdefffc	lw	r30,-4(r30)
  974  000019f4  4be00000	jr	r31
  975  000019f8  54000000	nop
  976  000019fc          	.endproc _dstrstr
  977  000019fc          	.align 2
  978  000019fc          	.proc _dmindex
  979  000019fc          	.global _dmindex
  980  000019fc          	_dmindex:
  981                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  982  000019fc  afbefffc	sw	-4(r29),r30; push fp
  983  00001a00  001df020	add	r30,r0,r29; fp = sp
  984  00001a04  afbffff8	sw	-8(r29),r31; push ret addr
  985  00001a08  2fbd0018	subui	r29,r29,#24; alloc local storage
  986  00001a0c  afa20000	sw	0(r29),r2
  987  00001a10  54000000	nop
  988  00001a14          	L46_LF2:
  989  00001a14  8fc10000	lw	r1,(r30)
  990  00001a18  90220000	lbu	r2,(r1)
  991  00001a1c  64410000	snei	r1,r2,#0
  992  00001a20  1420000c	bnez	r1,L48_LF2
  993  00001a24  54000000	nop; delay slot nop
  994  00001a28  08000070	j	L47_LF2
  995  00001a2c  54000000	nop; delay slot nop
  996  00001a30          	L48_LF2:
  997  00001a30  8fc10004	lw	r1,4(r30)
  998  00001a34  afc1fff4	sw	-12(r30),r1
  999  00001a38          	L49_LF2:
 1000  00001a38  8fc1fff4	lw	r1,-12(r30)
 1001  00001a3c  90220000	lbu	r2,(r1)
 1002  00001a40  64410000	snei	r1,r2,#0
 1003  00001a44  1420000c	bnez	r1,L52_LF2
 1004  00001a48  54000000	nop; delay slot nop
 1005  00001a4c  08000044	j	L50_LF2
 1006  00001a50  54000000	nop; delay slot nop
 1007  00001a54          	L52_LF2:
 1008  00001a54  8fc10000	lw	r1,(r30)
 1009  00001a58  8fc2fff4	lw	r2,-12(r30)
 1010  00001a5c  90210000	lbu	r1,(r1)
 1011  00001a60  90420000	lbu	r2,(r2)
 1012  00001a64  00220828	seq	r1,r1,r2
 1013  00001a68  10200010	beqz	r1,L51_LF2
 1014  00001a6c  54000000	nop; delay slot nop
 1015  00001a70  8fc10000	lw	r1,(r30)
 1016  00001a74  08000030	j	L45_LF2
 1017  00001a78  54000000	nop; delay slot nop
 1018  00001a7c          	L53_LF2:
 1019  00001a7c          	L51_LF2:
 1020  00001a7c  8fc2fff4	lw	r2,-12(r30)
 1021  00001a80  20410001	addi	r1,r2,#1
 1022  00001a84  00011020	add	r2,r0,r1
 1023  00001a88  afc2fff4	sw	-12(r30),r2
 1024  00001a8c  0bffffa8	j	L49_LF2
 1025  00001a90  54000000	nop; delay slot nop
 1026  00001a94          	L50_LF2:
 1027  00001a94  0bffff7c	j	L46_LF2
 1028  00001a98  54000000	nop; delay slot nop
 1029  00001a9c          	L47_LF2:
 1030  00001a9c  20010000	addi	r1,r0,#0
 1031  00001aa0  08000004	j	L45_LF2
 1032  00001aa4  54000000	nop; delay slot nop
 1033  00001aa8          	L45_LF2:
 1034  00001aa8  8fa20000	lw	r2,0(r29)
 1035  00001aac  8fdffff8	lw	r31,-8(r30)
 1036  00001ab0  001ee820	add	r29,r0,r30
 1037  00001ab4  8fdefffc	lw	r30,-4(r30)
 1038  00001ab8  4be00000	jr	r31
 1039  00001abc  54000000	nop
 1040  00001ac0          	.endproc _dmindex
 1041  00001ac0          	.align 2
 1042  00001ac0          	.proc _dindex
 1043  00001ac0          	.global _dindex
 1044  00001ac0          	_dindex:
 1045                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1046  00001ac0  afbefffc	sw	-4(r29),r30; push fp
 1047  00001ac4  001df020	add	r30,r0,r29; fp = sp
 1048  00001ac8  afbffff8	sw	-8(r29),r31; push ret addr
 1049  00001acc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1050  00001ad0  afa20000	sw	0(r29),r2
 1051  00001ad4  54000000	nop
 1052  00001ad8          	L55_LF2:
 1053  00001ad8  8fc10000	lw	r1,(r30)
 1054  00001adc  90220000	lbu	r2,(r1)
 1055  00001ae0  64410000	snei	r1,r2,#0
 1056  00001ae4  1420000c	bnez	r1,L57_LF2
 1057  00001ae8  54000000	nop; delay slot nop
 1058  00001aec  08000040	j	L56_LF2
 1059  00001af0  54000000	nop; delay slot nop
 1060  00001af4          	L57_LF2:
 1061  00001af4  8fc10000	lw	r1,(r30)
 1062  00001af8  90220000	lbu	r2,(r1)
 1063  00001afc  8fc10004	lw	r1,4(r30)
 1064  00001b00  00411028	seq	r2,r2,r1
 1065  00001b04  10400010	beqz	r2,L58_LF2
 1066  00001b08  54000000	nop; delay slot nop
 1067  00001b0c  8fc10000	lw	r1,(r30)
 1068  00001b10  08000028	j	L54_LF2
 1069  00001b14  54000000	nop; delay slot nop
 1070  00001b18          	L58_LF2:
 1071  00001b18  8fc20000	lw	r2,(r30)
 1072  00001b1c  20410001	addi	r1,r2,#1
 1073  00001b20  00011020	add	r2,r0,r1
 1074  00001b24  afc20000	sw	(r30),r2
 1075  00001b28  0bffffac	j	L55_LF2
 1076  00001b2c  54000000	nop; delay slot nop
 1077  00001b30          	L56_LF2:
 1078  00001b30  20010000	addi	r1,r0,#0
 1079  00001b34  08000004	j	L54_LF2
 1080  00001b38  54000000	nop; delay slot nop
 1081  00001b3c          	L54_LF2:
 1082  00001b3c  8fa20000	lw	r2,0(r29)
 1083  00001b40  8fdffff8	lw	r31,-8(r30)
 1084  00001b44  001ee820	add	r29,r0,r30
 1085  00001b48  8fdefffc	lw	r30,-4(r30)
 1086  00001b4c  4be00000	jr	r31
 1087  00001b50  54000000	nop
 1088  00001b54          	.endproc _dindex
 1089  00001b54          	.align 2
 1090  00001b54          	.proc _ditoa
 1091  00001b54          	.global _ditoa
 1092  00001b54          	_ditoa:
 1093                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1094  00001b54  afbefffc	sw	-4(r29),r30; push fp
 1095  00001b58  001df020	add	r30,r0,r29; fp = sp
 1096  00001b5c  afbffff8	sw	-8(r29),r31; push ret addr
 1097  00001b60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1098  00001b64  afa20000	sw	0(r29),r2
 1099  00001b68  afa30004	sw	4(r29),r3
 1100  00001b6c  8fc10000	lw	r1,(r30)
 1101  00001b70  68220000	slti	r2,r1,#0
 1102  00001b74  1040002c	beqz	r2,L60_LF2
 1103  00001b78  54000000	nop; delay slot nop
 1104  00001b7c  8fc10004	lw	r1,4(r30)
 1105  00001b80  20220001	addi	r2,r1,#1
 1106  00001b84  afc20004	sw	4(r30),r2
 1107  00001b88  2002002d	addi	r2,r0,(#0x2d)&0xff
 1108  00001b8c  a0220000	sb	(r1),r2
 1109  00001b90  8fc10000	lw	r1,(r30)
 1110  00001b94  00011022	sub	r2,r0,r1
 1111  00001b98  afc20000	sw	(r30),r2
 1112  00001b9c  08000118	j	L61_LF2
 1113  00001ba0  54000000	nop; delay slot nop
 1114  00001ba4          	L60_LF2:
 1115  00001ba4  8fc10000	lw	r1,(r30)
 1116  00001ba8  64220000	snei	r2,r1,#0
 1117  00001bac  14400020	bnez	r2,L62_LF2
 1118  00001bb0  54000000	nop; delay slot nop
 1119  00001bb4  8fc10004	lw	r1,4(r30)
 1120  00001bb8  20220001	addi	r2,r1,#1
 1121  00001bbc  afc20004	sw	4(r30),r2
 1122  00001bc0  20020030	addi	r2,r0,(#0x30)&0xff
 1123  00001bc4  a0220000	sb	(r1),r2
 1124  00001bc8  080000ec	j	L61_LF2
 1125  00001bcc  54000000	nop; delay slot nop
 1126  00001bd0          	L62_LF2:
 1127  00001bd0  20010001	addi	r1,r0,#1
 1128  00001bd4  afc1fff4	sw	-12(r30),r1
 1129  00001bd8          	L64_LF2:
 1130  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1131  00001bdc  8fc20000	lw	r2,(r30)
 1132  00001be0  0022082c	sle	r1,r1,r2
 1133  00001be4  1420000c	bnez	r1,L66_LF2
 1134  00001be8  54000000	nop; delay slot nop
 1135  00001bec  08000024	j	L65_LF2
 1136  00001bf0  54000000	nop; delay slot nop
 1137  00001bf4          	L67_LF2:
 1138  00001bf4          	L66_LF2:
 1139  00001bf4  8fc1fff4	lw	r1,-12(r30)
 1140  00001bf8  00011820	add	r3,r0,r1
 1141  00001bfc  50620002	slli	r2,r3,#0x2
 1142  00001c00  00411020	add	r2,r2,r1
 1143  00001c04  50410001	slli	r1,r2,#0x1
 1144  00001c08  afc1fff4	sw	-12(r30),r1
 1145  00001c0c  0bffffc8	j	L64_LF2
 1146  00001c10  54000000	nop; delay slot nop
 1147  00001c14          	L65_LF2:
 1148  00001c14  54000000	nop
 1149  00001c18          	L68_LF2:
 1150  00001c18  8fc1fff4	lw	r1,-12(r30)
 1151  00001c1c  2002000a	addi	r2,r0,#10
 1152  00001c20  00200035	movi2fp	f0,r1
 1153  00001c24  00400835	movi2fp	f1,r2
 1154  00001c28  0401000f	div	f0,f0,f1
 1155  00001c2c  00000834	movfp2i	r1,f0
 1156  00001c30  afc1fff4	sw	-12(r30),r1
 1157  00001c34  8fc10004	lw	r1,4(r30)
 1158  00001c38  20220001	addi	r2,r1,#1
 1159  00001c3c  afc20004	sw	4(r30),r2
 1160  00001c40  8fc20000	lw	r2,(r30)
 1161  00001c44  8fc3fff4	lw	r3,-12(r30)
 1162  00001c48  00400035	movi2fp	f0,r2
 1163  00001c4c  00600835	movi2fp	f1,r3
 1164  00001c50  0401000f	div	f0,f0,f1
 1165  00001c54  00001034	movfp2i	r2,f0
 1166  00001c58  00021820	add	r3,r0,r2
 1167  00001c5c  20620030	addi	r2,r3,#48
 1168  00001c60  a0220000	sb	(r1),r2
 1169  00001c64  8fc10000	lw	r1,(r30)
 1170  00001c68  8fc3fff4	lw	r3,-12(r30)
 1171  00001c6c  00200035	movi2fp	f0,r1
 1172  00001c70  00600835	movi2fp	f1,r3
 1173  00001c74  0401000f	div	f0,f0,f1
 1174  00001c78  00001034	movfp2i	r2,f0
 1175  00001c7c  8fc3fff4	lw	r3,-12(r30)
 1176  00001c80  00400035	movi2fp	f0,r2
 1177  00001c84  00600835	movi2fp	f1,r3
 1178  00001c88  0401000e	mult	f0,f0,f1
 1179  00001c8c  00001034	movfp2i	r2,f0
 1180  00001c90  00220822	sub	r1,r1,r2
 1181  00001c94  afc10000	sw	(r30),r1
 1182  00001c98          	L70_LF2:
 1183  00001c98  8fc1fff4	lw	r1,-12(r30)
 1184  00001c9c  6c220001	sgti	r2,r1,#1
 1185  00001ca0  1440000c	bnez	r2,L71_LF2
 1186  00001ca4  54000000	nop; delay slot nop
 1187  00001ca8  0800000c	j	L61_LF2
 1188  00001cac  54000000	nop; delay slot nop
 1189  00001cb0          	L71_LF2:
 1190  00001cb0  0bffff64	j	L68_LF2
 1191  00001cb4  54000000	nop; delay slot nop
 1192  00001cb8          	L69_LF2:
 1193  00001cb8          	L63_LF2:
 1194  00001cb8          	L61_LF2:
 1195  00001cb8  8fc10004	lw	r1,4(r30)
 1196  00001cbc  20020000	addi	r2,r0,(#0x0)&0xff
 1197  00001cc0  a0220000	sb	(r1),r2
 1198  00001cc4          	L59_LF2:
 1199  00001cc4  8fa20000	lw	r2,0(r29)
 1200  00001cc8  8fa30004	lw	r3,4(r29)
 1201  00001ccc  8fdffff8	lw	r31,-8(r30)
 1202  00001cd0  001ee820	add	r29,r0,r30
 1203  00001cd4  8fdefffc	lw	r30,-4(r30)
 1204  00001cd8  4be00000	jr	r31
 1205  00001cdc  54000000	nop
 1206  00001ce0          	.endproc _ditoa
 1207  00001ce0          	.align 2
 1208  00001ce0          	.proc _dstrtol
 1209  00001ce0          	.global _dstrtol
 1210  00001ce0          	_dstrtol:
 1211                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1212  00001ce0  afbefffc	sw	-4(r29),r30; push fp
 1213  00001ce4  001df020	add	r30,r0,r29; fp = sp
 1214  00001ce8  afbffff8	sw	-8(r29),r31; push ret addr
 1215  00001cec  2fbd0020	subui	r29,r29,#32; alloc local storage
 1216  00001cf0  afa20000	sw	0(r29),r2
 1217  00001cf4  20010000	addi	r1,r0,#0
 1218  00001cf8  afc1fff4	sw	-12(r30),r1
 1219  00001cfc          	L73_LF2:
 1220  00001cfc  8fc10000	lw	r1,(r30)
 1221  00001d00  90220000	lbu	r2,(r1)
 1222  00001d04  60410020	seqi	r1,r2,#32
 1223  00001d08  14200034	bnez	r1,L75_LF2
 1224  00001d0c  54000000	nop; delay slot nop
 1225  00001d10  8fc10000	lw	r1,(r30)
 1226  00001d14  90220000	lbu	r2,(r1)
 1227  00001d18  60410009	seqi	r1,r2,#9
 1228  00001d1c  14200020	bnez	r1,L75_LF2
 1229  00001d20  54000000	nop; delay slot nop
 1230  00001d24  8fc10000	lw	r1,(r30)
 1231  00001d28  90220000	lbu	r2,(r1)
 1232  00001d2c  6041000a	seqi	r1,r2,#10
 1233  00001d30  1420000c	bnez	r1,L75_LF2
 1234  00001d34  54000000	nop; delay slot nop
 1235  00001d38  0800001c	j	L74_LF2
 1236  00001d3c  54000000	nop; delay slot nop
 1237  00001d40          	L75_LF2:
 1238  00001d40  8fc20000	lw	r2,(r30)
 1239  00001d44  20410001	addi	r1,r2,#1
 1240  00001d48  00011020	add	r2,r0,r1
 1241  00001d4c  afc20000	sw	(r30),r2
 1242  00001d50  0bffffa8	j	L73_LF2
 1243  00001d54  54000000	nop; delay slot nop
 1244  00001d58          	L74_LF2:
 1245  00001d58  8fc10004	lw	r1,4(r30)
 1246  00001d5c  64220000	snei	r2,r1,#0
 1247  00001d60  10400010	beqz	r2,L76_LF2
 1248  00001d64  54000000	nop; delay slot nop
 1249  00001d68  8fc10004	lw	r1,4(r30)
 1250  00001d6c  8fc20000	lw	r2,(r30)
 1251  00001d70  ac220000	sw	(r1),r2
 1252  00001d74          	L76_LF2:
 1253  00001d74  8fc10000	lw	r1,(r30)
 1254  00001d78  90220000	lbu	r2,(r1)
 1255  00001d7c  64410000	snei	r1,r2,#0
 1256  00001d80  14200010	bnez	r1,L77_LF2
 1257  00001d84  54000000	nop; delay slot nop
 1258  00001d88  8fc1fff4	lw	r1,-12(r30)
 1259  00001d8c  08000294	j	L72_LF2
 1260  00001d90  54000000	nop; delay slot nop
 1261  00001d94          	L77_LF2:
 1262  00001d94  8fc10000	lw	r1,(r30)
 1263  00001d98  90220000	lbu	r2,(r1)
 1264  00001d9c  6041002d	seqi	r1,r2,#45
 1265  00001da0  10200024	beqz	r1,L78_LF2
 1266  00001da4  54000000	nop; delay slot nop
 1267  00001da8  2001ffff	addi	r1,r0,#-1
 1268  00001dac  afc1ffec	sw	-20(r30),r1
 1269  00001db0  8fc20000	lw	r2,(r30)
 1270  00001db4  20410001	addi	r1,r2,#1
 1271  00001db8  00011020	add	r2,r0,r1
 1272  00001dbc  afc20000	sw	(r30),r2
 1273  00001dc0  0800000c	j	L79_LF2
 1274  00001dc4  54000000	nop; delay slot nop
 1275  00001dc8          	L78_LF2:
 1276  00001dc8  20010001	addi	r1,r0,#1
 1277  00001dcc  afc1ffec	sw	-20(r30),r1
 1278  00001dd0          	L79_LF2:
 1279  00001dd0  8fc10008	lw	r1,8(r30)
 1280  00001dd4  64220000	snei	r2,r1,#0
 1281  00001dd8  14400090	bnez	r2,L80_LF2
 1282  00001ddc  54000000	nop; delay slot nop
 1283  00001de0  8fc10000	lw	r1,(r30)
 1284  00001de4  90220000	lbu	r2,(r1)
 1285  00001de8  60410030	seqi	r1,r2,#48
 1286  00001dec  10200074	beqz	r1,L81_LF2
 1287  00001df0  54000000	nop; delay slot nop
 1288  00001df4  8fc20000	lw	r2,(r30)
 1289  00001df8  20410001	addi	r1,r2,#1
 1290  00001dfc  00011020	add	r2,r0,r1
 1291  00001e00  afc20000	sw	(r30),r2
 1292  00001e04  8fc10000	lw	r1,(r30)
 1293  00001e08  90220000	lbu	r2,(r1)
 1294  00001e0c  60410078	seqi	r1,r2,#120
 1295  00001e10  14200020	bnez	r1,L83_LF2
 1296  00001e14  54000000	nop; delay slot nop
 1297  00001e18  8fc10000	lw	r1,(r30)
 1298  00001e1c  90220000	lbu	r2,(r1)
 1299  00001e20  60410058	seqi	r1,r2,#88
 1300  00001e24  1420000c	bnez	r1,L83_LF2
 1301  00001e28  54000000	nop; delay slot nop
 1302  00001e2c  08000024	j	L82_LF2
 1303  00001e30  54000000	nop; delay slot nop
 1304  00001e34          	L83_LF2:
 1305  00001e34  20010010	addi	r1,r0,#16
 1306  00001e38  afc10008	sw	8(r30),r1
 1307  00001e3c  8fc20000	lw	r2,(r30)
 1308  00001e40  20410001	addi	r1,r2,#1
 1309  00001e44  00011020	add	r2,r0,r1
 1310  00001e48  afc20000	sw	(r30),r2
 1311  00001e4c  0800000c	j	L84_LF2
 1312  00001e50  54000000	nop; delay slot nop
 1313  00001e54          	L82_LF2:
 1314  00001e54  20010008	addi	r1,r0,#8
 1315  00001e58  afc10008	sw	8(r30),r1
 1316  00001e5c          	L84_LF2:
 1317  00001e5c  0800000c	j	L80_LF2
 1318  00001e60  54000000	nop; delay slot nop
 1319  00001e64          	L81_LF2:
 1320  00001e64  2001000a	addi	r1,r0,#10
 1321  00001e68  afc10008	sw	8(r30),r1
 1322  00001e6c          	L85_LF2:
 1323  00001e6c          	L80_LF2:
 1324  00001e6c  8fc10008	lw	r1,8(r30)
 1325  00001e70  70220000	slei	r2,r1,#0
 1326  00001e74  1440001c	bnez	r2,L87_LF2
 1327  00001e78  54000000	nop; delay slot nop
 1328  00001e7c  8fc10008	lw	r1,8(r30)
 1329  00001e80  6c220010	sgti	r2,r1,#16
 1330  00001e84  1440000c	bnez	r2,L87_LF2
 1331  00001e88  54000000	nop; delay slot nop
 1332  00001e8c  08000010	j	L86_LF2
 1333  00001e90  54000000	nop; delay slot nop
 1334  00001e94          	L87_LF2:
 1335  00001e94  8fc1fff4	lw	r1,-12(r30)
 1336  00001e98  08000188	j	L72_LF2
 1337  00001e9c  54000000	nop; delay slot nop
 1338  00001ea0          	L86_LF2:
 1339  00001ea0  54000000	nop
 1340  00001ea4          	L88_LF2:
 1341  00001ea4  8fc10000	lw	r1,(r30)
 1342  00001ea8  90220000	lbu	r2,(r1)
 1343  00001eac  6c41002f	sgtui	r1,r2,#47
 1344  00001eb0  10200030	beqz	r1,L91_LF2
 1345  00001eb4  54000000	nop; delay slot nop
 1346  00001eb8  8fc10000	lw	r1,(r30)
 1347  00001ebc  90220000	lbu	r2,(r1)
 1348  00001ec0  70410039	sleui	r1,r2,#57
 1349  00001ec4  1020001c	beqz	r1,L91_LF2
 1350  00001ec8  54000000	nop; delay slot nop
 1351  00001ecc  8fc10000	lw	r1,(r30)
 1352  00001ed0  90220000	lbu	r2,(r1)
 1353  00001ed4  2041ffd0	addi	r1,r2,#-48
 1354  00001ed8  afc1fff0	sw	-16(r30),r1
 1355  00001edc  0800008c	j	L92_LF2
 1356  00001ee0  54000000	nop; delay slot nop
 1357  00001ee4          	L91_LF2:
 1358  00001ee4  8fc10000	lw	r1,(r30)
 1359  00001ee8  90220000	lbu	r2,(r1)
 1360  00001eec  6c410060	sgtui	r1,r2,#96
 1361  00001ef0  10200030	beqz	r1,L93_LF2
 1362  00001ef4  54000000	nop; delay slot nop
 1363  00001ef8  8fc10000	lw	r1,(r30)
 1364  00001efc  90220000	lbu	r2,(r1)
 1365  00001f00  7041007a	sleui	r1,r2,#122
 1366  00001f04  1020001c	beqz	r1,L93_LF2
 1367  00001f08  54000000	nop; delay slot nop
 1368  00001f0c  8fc10000	lw	r1,(r30)
 1369  00001f10  90220000	lbu	r2,(r1)
 1370  00001f14  2041ffa9	addi	r1,r2,#-87
 1371  00001f18  afc1fff0	sw	-16(r30),r1
 1372  00001f1c  0800004c	j	L92_LF2
 1373  00001f20  54000000	nop; delay slot nop
 1374  00001f24          	L93_LF2:
 1375  00001f24  8fc10000	lw	r1,(r30)
 1376  00001f28  90220000	lbu	r2,(r1)
 1377  00001f2c  6c410040	sgtui	r1,r2,#64
 1378  00001f30  10200030	beqz	r1,L95_LF2
 1379  00001f34  54000000	nop; delay slot nop
 1380  00001f38  8fc10000	lw	r1,(r30)
 1381  00001f3c  90220000	lbu	r2,(r1)
 1382  00001f40  7041005a	sleui	r1,r2,#90
 1383  00001f44  1020001c	beqz	r1,L95_LF2
 1384  00001f48  54000000	nop; delay slot nop
 1385  00001f4c  8fc10000	lw	r1,(r30)
 1386  00001f50  90220000	lbu	r2,(r1)
 1387  00001f54  2041ffc9	addi	r1,r2,#-55
 1388  00001f58  afc1fff0	sw	-16(r30),r1
 1389  00001f5c  0800000c	j	L92_LF2
 1390  00001f60  54000000	nop; delay slot nop
 1391  00001f64          	L95_LF2:
 1392  00001f64  200103e8	addi	r1,r0,#1000
 1393  00001f68  afc1fff0	sw	-16(r30),r1
 1394  00001f6c          	L96_LF2:
 1395  00001f6c          	L94_LF2:
 1396  00001f6c          	L92_LF2:
 1397  00001f6c  8fc1fff0	lw	r1,-16(r30)
 1398  00001f70  8fc20008	lw	r2,8(r30)
 1399  00001f74  0022082a	slt	r1,r1,r2
 1400  00001f78  10200040	beqz	r1,L90_LF2
 1401  00001f7c  54000000	nop; delay slot nop
 1402  00001f80  8fc1fff4	lw	r1,-12(r30)
 1403  00001f84  8fc20008	lw	r2,8(r30)
 1404  00001f88  00200035	movi2fp	f0,r1
 1405  00001f8c  00400835	movi2fp	f1,r2
 1406  00001f90  0401000e	mult	f0,f0,f1
 1407  00001f94  00000834	movfp2i	r1,f0
 1408  00001f98  afc1fff4	sw	-12(r30),r1
 1409  00001f9c  8fc1fff4	lw	r1,-12(r30)
 1410  00001fa0  8fc2fff0	lw	r2,-16(r30)
 1411  00001fa4  00220820	add	r1,r1,r2
 1412  00001fa8  afc1fff4	sw	-12(r30),r1
 1413  00001fac  8fc20000	lw	r2,(r30)
 1414  00001fb0  20410001	addi	r1,r2,#1
 1415  00001fb4  00011020	add	r2,r0,r1
 1416  00001fb8  afc20000	sw	(r30),r2
 1417  00001fbc          	L97_LF2:
 1418  00001fbc          	L90_LF2:
 1419  00001fbc  8fc1fff0	lw	r1,-16(r30)
 1420  00001fc0  8fc20008	lw	r2,8(r30)
 1421  00001fc4  0022082a	slt	r1,r1,r2
 1422  00001fc8  1420000c	bnez	r1,L98_LF2
 1423  00001fcc  54000000	nop; delay slot nop
 1424  00001fd0  0800000c	j	L89_LF2
 1425  00001fd4  54000000	nop; delay slot nop
 1426  00001fd8          	L98_LF2:
 1427  00001fd8  0bfffec8	j	L88_LF2
 1428  00001fdc  54000000	nop; delay slot nop
 1429  00001fe0          	L89_LF2:
 1430  00001fe0  8fc10004	lw	r1,4(r30)
 1431  00001fe4  64220000	snei	r2,r1,#0
 1432  00001fe8  10400010	beqz	r2,L99_LF2
 1433  00001fec  54000000	nop; delay slot nop
 1434  00001ff0  8fc10004	lw	r1,4(r30)
 1435  00001ff4  8fc20000	lw	r2,(r30)
 1436  00001ff8  ac220000	sw	(r1),r2
 1437  00001ffc          	L99_LF2:
 1438  00001ffc  8fc1fff4	lw	r1,-12(r30)
 1439  00002000  8fc2ffec	lw	r2,-20(r30)
 1440  00002004  00200035	movi2fp	f0,r1
 1441  00002008  00400835	movi2fp	f1,r2
 1442  0000200c  0401000e	mult	f0,f0,f1
 1443  00002010  00000834	movfp2i	r1,f0
 1444  00002014  afc1fff4	sw	-12(r30),r1
 1445  00002018  8fc1fff4	lw	r1,-12(r30)
 1446  0000201c  08000004	j	L72_LF2
 1447  00002020  54000000	nop; delay slot nop
 1448  00002024          	L72_LF2:
 1449  00002024  8fa20000	lw	r2,0(r29)
 1450  00002028  8fdffff8	lw	r31,-8(r30)
 1451  0000202c  001ee820	add	r29,r0,r30
 1452  00002030  8fdefffc	lw	r30,-4(r30)
 1453  00002034  4be00000	jr	r31
 1454  00002038  54000000	nop
 1455  0000203c          	.endproc _dstrtol
 1456  0000203c          	.align 2
 1457  0000203c          	.proc _bcopy
 1458  0000203c          	.global _bcopy
 1459  0000203c          	_bcopy:
 1460                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1461  0000203c  afbefffc	sw	-4(r29),r30; push fp
 1462  00002040  001df020	add	r30,r0,r29; fp = sp
 1463  00002044  afbffff8	sw	-8(r29),r31; push ret addr
 1464  00002048  2fbd0010	subui	r29,r29,#16; alloc local storage
 1465  0000204c  afa20000	sw	0(r29),r2
 1466  00002050  afa30004	sw	4(r29),r3
 1467  00002054  54000000	nop
 1468  00002058          	L101_LF2:
 1469  00002058  8fc10008	lw	r1,8(r30)
 1470  0000205c  2022ffff	addi	r2,r1,#-1
 1471  00002060  afc20008	sw	8(r30),r2
 1472  00002064  6c210000	sgti	r1,r1,#0
 1473  00002068  1420000c	bnez	r1,L103_LF2
 1474  0000206c  54000000	nop; delay slot nop
 1475  00002070  0800002c	j	L102_LF2
 1476  00002074  54000000	nop; delay slot nop
 1477  00002078          	L103_LF2:
 1478  00002078  8fc10004	lw	r1,4(r30)
 1479  0000207c  20220001	addi	r2,r1,#1
 1480  00002080  afc20004	sw	4(r30),r2
 1481  00002084  8fc20000	lw	r2,(r30)
 1482  00002088  20430001	addi	r3,r2,#1
 1483  0000208c  afc30000	sw	(r30),r3
 1484  00002090  80420000	lb	r2,(r2)
 1485  00002094  a0220000	sb	(r1),r2
 1486  00002098  0bffffbc	j	L101_LF2
 1487  0000209c  54000000	nop; delay slot nop
 1488  000020a0          	L102_LF2:
 1489  000020a0          	L100_LF2:
 1490  000020a0  8fa20000	lw	r2,0(r29)
 1491  000020a4  8fa30004	lw	r3,4(r29)
 1492  000020a8  8fdffff8	lw	r31,-8(r30)
 1493  000020ac  001ee820	add	r29,r0,r30
 1494  000020b0  8fdefffc	lw	r30,-4(r30)
 1495  000020b4  4be00000	jr	r31
 1496  000020b8  54000000	nop
 1497  000020bc          	.endproc _bcopy
 1498  000020bc          	.align 2
 1499  000020bc          	.proc _bzero
 1500  000020bc          	.global _bzero
 1501  000020bc          	_bzero:
 1502                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1503  000020bc  afbefffc	sw	-4(r29),r30; push fp
 1504  000020c0  001df020	add	r30,r0,r29; fp = sp
 1505  000020c4  afbffff8	sw	-8(r29),r31; push ret addr
 1506  000020c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1507  000020cc  afa20000	sw	0(r29),r2
 1508  000020d0  54000000	nop
 1509  000020d4          	L105_LF2:
 1510  000020d4  8fc10004	lw	r1,4(r30)
 1511  000020d8  2022ffff	addi	r2,r1,#-1
 1512  000020dc  afc20004	sw	4(r30),r2
 1513  000020e0  6c210000	sgti	r1,r1,#0
 1514  000020e4  1420000c	bnez	r1,L107_LF2
 1515  000020e8  54000000	nop; delay slot nop
 1516  000020ec  08000020	j	L106_LF2
 1517  000020f0  54000000	nop; delay slot nop
 1518  000020f4          	L107_LF2:
 1519  000020f4  8fc10000	lw	r1,(r30)
 1520  000020f8  20220001	addi	r2,r1,#1
 1521  000020fc  afc20000	sw	(r30),r2
 1522  00002100  20020000	addi	r2,r0,(#0x0)&0xff
 1523  00002104  a0220000	sb	(r1),r2
 1524  00002108  0bffffc8	j	L105_LF2
 1525  0000210c  54000000	nop; delay slot nop
 1526  00002110          	L106_LF2:
 1527  00002110          	L104_LF2:
 1528  00002110  8fa20000	lw	r2,0(r29)
 1529  00002114  8fdffff8	lw	r31,-8(r30)
 1530  00002118  001ee820	add	r29,r0,r30
 1531  0000211c  8fdefffc	lw	r30,-4(r30)
 1532  00002120  4be00000	jr	r31
 1533  00002124  54000000	nop
 1534  00002128          	.endproc _bzero
 1535  00002128          	.align 2
 1536  00002128          	.proc _min
 1537  00002128          	.global _min
 1538  00002128          	_min:
 1539                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1540  00002128  afbefffc	sw	-4(r29),r30; push fp
 1541  0000212c  001df020	add	r30,r0,r29; fp = sp
 1542  00002130  afbffff8	sw	-8(r29),r31; push ret addr
 1543  00002134  2fbd0010	subui	r29,r29,#16; alloc local storage
 1544  00002138  afa20000	sw	0(r29),r2
 1545  0000213c  afa30004	sw	4(r29),r3
 1546  00002140  8fc10000	lw	r1,(r30)
 1547  00002144  8fc20004	lw	r2,4(r30)
 1548  00002148  0022182c	sle	r3,r1,r2
 1549  0000214c  14600008	bnez	r3,L109_LF2
 1550  00002150  54000000	nop; delay slot nop
 1551  00002154  8fc10004	lw	r1,4(r30)
 1552  00002158          	L109_LF2:
 1553  00002158  08000004	j	L108_LF2
 1554  0000215c  54000000	nop; delay slot nop
 1555  00002160          	L108_LF2:
 1556  00002160  8fa20000	lw	r2,0(r29)
 1557  00002164  8fa30004	lw	r3,4(r29)
 1558  00002168  8fdffff8	lw	r31,-8(r30)
 1559  0000216c  001ee820	add	r29,r0,r30
 1560  00002170  8fdefffc	lw	r30,-4(r30)
 1561  00002174  4be00000	jr	r31
 1562  00002178  54000000	nop
 1563  0000217c          	.endproc _min
 1564  0000217c          	.align 2
 1565  0000217c          	.proc _max
 1566  0000217c          	.global _max
 1567  0000217c          	_max:
 1568                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1569  0000217c  afbefffc	sw	-4(r29),r30; push fp
 1570  00002180  001df020	add	r30,r0,r29; fp = sp
 1571  00002184  afbffff8	sw	-8(r29),r31; push ret addr
 1572  00002188  2fbd0010	subui	r29,r29,#16; alloc local storage
 1573  0000218c  afa20000	sw	0(r29),r2
 1574  00002190  afa30004	sw	4(r29),r3
 1575  00002194  8fc10000	lw	r1,(r30)
 1576  00002198  8fc20004	lw	r2,4(r30)
 1577  0000219c  0022182d	sge	r3,r1,r2
 1578  000021a0  14600008	bnez	r3,L111_LF2
 1579  000021a4  54000000	nop; delay slot nop
 1580  000021a8  8fc10004	lw	r1,4(r30)
 1581  000021ac          	L111_LF2:
 1582  000021ac  08000004	j	L110_LF2
 1583  000021b0  54000000	nop; delay slot nop
 1584  000021b4          	L110_LF2:
 1585  000021b4  8fa20000	lw	r2,0(r29)
 1586  000021b8  8fa30004	lw	r3,4(r29)
 1587  000021bc  8fdffff8	lw	r31,-8(r30)
 1588  000021c0  001ee820	add	r29,r0,r30
 1589  000021c4  8fdefffc	lw	r30,-4(r30)
 1590  000021c8  4be00000	jr	r31
 1591  000021cc  54000000	nop
 1592  000021d0          	.endproc _max
 1593                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1594                      ;;;
 1595                      ;;; Most of the traps are called in files from libtraps.
 1598  000021d0          	.align 2
 1599  000021d0          	.proc _exit
 1600  000021d0          	.global _exit
 1601  000021d0          	_exit:
 1602  000021d0  44000300	trap	#0x300
 1603  000021d4  4be00000	jr	r31
 1604  000021d8  54000000	nop
 1605  000021dc          	.endproc _exit
 1607                      ; for the benefit of gcc.
 1608  000021dc          	.proc ___main
 1609  000021dc          	.global ___main
 1610  000021dc          	___main:
 1611  000021dc  4be00000	jr	r31
 1612  000021e0  54000000	nop
 1613  000021e4          	.endproc ___main
 1614  000021e4          	.text
 1615  000021e4          	.global _etext
 1616  000021e4          	_etext:
 1617  000021e4          	.align 3
 1618  000021e8          	.data
 1619  0000311a          	.global _edata
 1620  0000311a          	_edata:
