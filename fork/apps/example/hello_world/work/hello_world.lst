 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 169
    4                      ; Text size: 4368
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   85  00003038  6f5f776f	
   85  0000303c  726c6420	
   85  00003040  28256429	
   85  00003044  3a204865	
   85  00003048  6c6c6f20	
   85  0000304c  776f726c	
   85  00003050  64210a00	
   86  00003054          	.align 2
   87  00003054          	LC2_LF0:
   88  00003054  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  00003058  6f5f776f	
   88  0000305c  726c6420	
   88  00003060  28256429	
   88  00003064  3a204261	
   88  00003068  64207365	
   88  0000306c  6d617068	
   88  00003070  6f726520	
   88  00003074  735f7072	
   88  00003078  6f63735f	
   88  0000307c  636f6d70	
   88  00003080  6c657465	
   88  00003084  64202825	
   88  00003088  6429210a	
   88  0000308c  00      	
   89  0000308d          	.align 2
   90  00003090          	LC3_LF0:
   91  00003090  68656c6c	.ascii "hello_world (%d): Done!\n\000"
   91  00003094  6f5f776f	
   91  00003098  726c6420	
   91  0000309c  28256429	
   91  000030a0  3a20446f	
   91  000030a4  6e65210a	
   91  000030a8  00      	
   92  000030a9          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c001018	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c000128	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c000234	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000ac8	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011020	add	r2,r0,r1
  129  0000114c  0c000104	jal	_getpid
  130  00001150  54000000	nop; not filled.
  131  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  132  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  133  0000115c  afa40000	sw	(r29),r4
  134  00001160  afa10004	sw	4(r29),r1
  135  00001164  0c0000d4	jal	_Printf
  136  00001168  54000000	nop; not filled.
  137  0000116c  afa20000	sw	(r29),r2
  138  00001170  0c000128	jal	_sem_signal
  139  00001174  54000000	nop; not filled.
  140  00001178  23bd0010	addi	r29,r29,#16
  141  0000117c  64210001	snei	r1,r1,#1
  142  00001180  10200038	beqz	r1,L18_LF0
  143  00001184  54000000	nop; not filled.
  144  00001188  0c0000c8	jal	_getpid
  145  0000118c  54000000	nop; not filled.
  146  00001190  23bdfff0	addi	r29,r29,#-16
  147  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  148  00001198  24843054	addui	r4,r4,(LC2_LF0)&0xffff
  149  0000119c  afa40000	sw	(r29),r4
  150  000011a0  afa10004	sw	4(r29),r1
  151  000011a4  afa20008	sw	8(r29),r2
  152  000011a8  0c000090	jal	_Printf
  153  000011ac  54000000	nop; not filled.
  154  000011b0  0c00019c	jal	_Exit
  155  000011b4  54000000	nop; not filled.
  156  000011b8  23bd0010	addi	r29,r29,#16
  157  000011bc          	L18_LF0:
  158  000011bc  0c000088	jal	_fork
  159  000011c0  54000000	nop; not filled.
  160  000011c4  0c00008c	jal	_getpid
  161  000011c8  54000000	nop; not filled.
  162  000011cc  23bdfff8	addi	r29,r29,#-8
  163  000011d0  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  164  000011d4  24843090	addui	r4,r4,(LC3_LF0)&0xffff
  165  000011d8  afa40000	sw	(r29),r4
  166  000011dc  afa10004	sw	4(r29),r1
  167  000011e0  0c000058	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  23bd0008	addi	r29,r29,#8
  170  000011ec  0c000f0c	jal	_exit
  171  000011f0  54000000	nop
  172  000011f4          	.endproc _main
  173                      ;;;
  174                      ;;; Stub functions for DLX traps.
  175                      ;;;
  176                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  177                      ;;;
  178                      ;;; The traps such as Open and Close
  179                      ;;; (note the capital letters) are for use by user programs.  The traps
  180                      ;;; with names such as open and close (lower case) are for use by the OS.
  181                      ;;;
  184  000011f4          	.align 2
  186                      ;;; The following are the traps to be used by user-level programs
  187                      ;;;
  189  000011f4          	.align 2
  190  000011f4          	.proc _Open
  191  000011f4          	.global _Open
  192  000011f4          	_Open:
  193                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  194                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  195                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  196  000011f4  44000213	trap	#0x213
  197  000011f8  4be00000	jr	r31
  198  000011fc  54000000	nop
  199  00001200          	.endproc _Open
  201  00001200          	.proc _Close
  202  00001200          	.global _Close
  203  00001200          	_Close:
  204  00001200  44000214	trap	#0x214
  205  00001204  4be00000	jr	r31
  206  00001208  54000000	nop
  207  0000120c          	.endproc _Close
  209  0000120c          	.proc _Read
  210  0000120c          	.global _Read
  211  0000120c          	_Read:
  212  0000120c  44000210	trap	#0x210
  213  00001210  4be00000	jr	r31
  214  00001214  54000000	nop
  215  00001218          	.endproc _Read
  217  00001218          	.proc _Write
  218  00001218          	.global _Write
  219  00001218          	_Write:
  220  00001218  44000211	trap	#0x211
  221  0000121c  4be00000	jr	r31
  222  00001220  54000000	nop
  223  00001224          	.endproc _Write
  225  00001224          	.proc _Lseek
  226  00001224          	.global _Lseek
  227  00001224          	_Lseek:
  228  00001224  44000212	trap	#0x212
  229  00001228  4be00000	jr	r31
  230  0000122c  54000000	nop
  231  00001230          	.endproc _Lseek
  233  00001230          	.proc _Putchar
  234  00001230          	.global _Putchar
  235  00001230          	_Putchar:
  236  00001230  44000280	trap	#0x280
  237  00001234  4be00000	jr	r31
  238  00001238  54000000	nop
  239  0000123c          	.endproc _Putchar
  241  0000123c          	.proc _Printf
  242  0000123c          	.global _Printf
  243  0000123c          	_Printf:
  244  0000123c  44000201	trap	#0x201
  245  00001240  4be00000	jr	r31
  246  00001244  54000000	nop
  247  00001248          	.endproc _Printf
  249  00001248          	.proc _fork
  250  00001248          	.global _fork
  251  00001248          	_fork:
  252  00001248  44000430	trap	#0x430
  253  0000124c  4be00000	jr	r31
  254  00001250  54000000	nop
  255  00001254          	.endproc _fork
  257  00001254          	.proc _getpid
  258  00001254          	.global _getpid
  259  00001254          	_getpid:
  260  00001254  44000431	trap	#0x431
  261  00001258  4be00000	jr	r31
  262  0000125c  54000000	nop
  263  00001260          	.endproc _getpid
  265  00001260          	.proc _process_create
  266  00001260          	.global _process_create
  267  00001260          	_process_create:
  268  00001260  44000432	trap	#0x432
  269  00001264  4be00000	jr	r31
  270  00001268  54000000	nop
  271  0000126c          	.endproc _process_create
  273  0000126c          	.proc _shmget
  274  0000126c          	.global _shmget
  275  0000126c          	_shmget:
  276  0000126c  44000440	trap	#0x440
  277  00001270  4be00000	jr	r31
  278  00001274  54000000	nop
  279  00001278          	.endproc _shmget
  281  00001278          	.proc _shmat
  282  00001278          	.global _shmat
  283  00001278          	_shmat:
  284  00001278  44000441	trap	#0x441
  285  0000127c  4be00000	jr	r31
  286  00001280  54000000	nop
  287  00001284          	.endproc _shmat
  289  00001284          	.proc _sem_create
  290  00001284          	.global _sem_create
  291  00001284          	_sem_create:
  292  00001284  44000450	trap	#0x450
  293  00001288  4be00000	jr	r31
  294  0000128c  54000000	nop
  295  00001290          	.endproc _sem_create
  297  00001290          	.proc _sem_wait
  298  00001290          	.global _sem_wait
  299  00001290          	_sem_wait:
  300  00001290  44000451	trap	#0x451
  301  00001294  4be00000	jr	r31
  302  00001298  54000000	nop
  303  0000129c          	.endproc _sem_wait
  305  0000129c          	.proc _sem_signal
  306  0000129c          	.global _sem_signal
  307  0000129c          	_sem_signal:
  308  0000129c  44000452	trap	#0x452
  309  000012a0  4be00000	jr	r31
  310  000012a4  54000000	nop
  311  000012a8          	.endproc _sem_signal
  313  000012a8          	.proc _lock_create
  314  000012a8          	.global _lock_create
  315  000012a8          	_lock_create:
  316  000012a8  44000453	trap	#0x453
  317  000012ac  4be00000	jr	r31
  318  000012b0  54000000	nop
  319  000012b4          	.endproc _lock_create
  321  000012b4          	.proc _lock_acquire
  322  000012b4          	.global _lock_acquire
  323  000012b4          	_lock_acquire:
  324  000012b4  44000454	trap	#0x454
  325  000012b8  4be00000	jr	r31
  326  000012bc  54000000	nop
  327  000012c0          	.endproc _lock_acquire
  329  000012c0          	.proc _lock_release
  330  000012c0          	.global _lock_release
  331  000012c0          	_lock_release:
  332  000012c0  44000455	trap	#0x455
  333  000012c4  4be00000	jr	r31
  334  000012c8  54000000	nop
  335  000012cc          	.endproc _lock_release
  337  000012cc          	.proc _cond_create
  338  000012cc          	.global _cond_create
  339  000012cc          	_cond_create:
  340  000012cc  44000456	trap	#0x456
  341  000012d0  4be00000	jr	r31
  342  000012d4  54000000	nop
  343  000012d8          	.endproc _cond_create
  345  000012d8          	.proc _cond_wait
  346  000012d8          	.global _cond_wait
  347  000012d8          	_cond_wait:
  348  000012d8  44000457	trap	#0x457
  349  000012dc  4be00000	jr	r31
  350  000012e0  54000000	nop
  351  000012e4          	.endproc _cond_wait
  353  000012e4          	.proc _cond_signal
  354  000012e4          	.global _cond_signal
  355  000012e4          	_cond_signal:
  356  000012e4  44000458	trap	#0x458
  357  000012e8  4be00000	jr	r31
  358  000012ec  54000000	nop
  359  000012f0          	.endproc _cond_signal
  361  000012f0          	.proc _cond_broadcast
  362  000012f0          	.global _cond_broadcast
  363  000012f0          	_cond_broadcast:
  364  000012f0  44000459	trap	#0x459
  365  000012f4  4be00000	jr	r31
  366  000012f8  54000000	nop
  367  000012fc          	.endproc _cond_broadcast
  369  000012fc          	.proc _mbox_create
  370  000012fc          	.global _mbox_create
  371  000012fc          	_mbox_create:
  372  000012fc  44000460	trap	#0x460
  373  00001300  4be00000	jr	r31
  374  00001304  54000000	nop
  375  00001308          	.endproc _mbox_create
  377  00001308          	.proc _mbox_open
  378  00001308          	.global _mbox_open
  379  00001308          	_mbox_open:
  380  00001308  44000461	trap	#0x461
  381  0000130c  4be00000	jr	r31
  382  00001310  54000000	nop
  383  00001314          	.endproc _mbox_open
  385  00001314          	.proc _mbox_close
  386  00001314          	.global _mbox_close
  387  00001314          	_mbox_close:
  388  00001314  44000462	trap	#0x462
  389  00001318  4be00000	jr	r31
  390  0000131c  54000000	nop
  391  00001320          	.endproc _mbox_close
  393  00001320          	.proc _mbox_send
  394  00001320          	.global _mbox_send
  395  00001320          	_mbox_send:
  396  00001320  44000463	trap	#0x463
  397  00001324  4be00000	jr	r31
  398  00001328  54000000	nop
  399  0000132c          	.endproc _mbox_send
  401  0000132c          	.proc _mbox_recv
  402  0000132c          	.global _mbox_recv
  403  0000132c          	_mbox_recv:
  404  0000132c  44000464	trap	#0x464
  405  00001330  4be00000	jr	r31
  406  00001334  54000000	nop
  407  00001338          	.endproc _mbox_recv
  409  00001338          	.proc _sleep
  410  00001338          	.global _sleep
  411  00001338          	_sleep:
  412  00001338  44000465	trap	#0x465
  413  0000133c  4be00000	jr	r31
  414  00001340  54000000	nop
  415  00001344          	.endproc _sleep
  417  00001344          	.proc _yield
  418  00001344          	.global _yield
  419  00001344          	_yield:
  420  00001344  44000466	trap	#0x466
  421  00001348  4be00000	jr	r31
  422  0000134c  54000000	nop
  423  00001350          	.endproc _yield
  426  00001350          	.proc _Exit
  427  00001350          	.global _Exit
  428  00001350          	_Exit:
  429  00001350  44000500	trap	#0x500
  430  00001354  4be00000	jr	r31
  431  00001358  54000000	nop
  432  0000135c          	.endproc _Exit
  435  0000135c          	.proc _malloc
  436  0000135c          	.global _malloc
  437  0000135c          	_malloc:
  438  0000135c  44000467	trap	#0x467
  439  00001360  4be00000	jr	r31
  440  00001364          	.endproc _malloc
  443  00001364          	.proc _mfree
  444  00001364          	.global _mfree
  445  00001364          	_mfree:
  446  00001364  44000468	trap	#0x468
  447  00001368  4be00000	jr	r31
  448  0000136c          	.endproc _mfree
  449                      ; Compiled by GCC
  451  0000136c          	.align 2
  452  0000136c          	.proc _isspace
  453  0000136c          	.global _isspace
  454  0000136c          	_isspace:
  455                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  456  0000136c  afbefffc	sw	-4(r29),r30; push fp
  457  00001370  001df020	add	r30,r0,r29; fp = sp
  458  00001374  afbffff8	sw	-8(r29),r31; push ret addr
  459  00001378  2fbd0018	subui	r29,r29,#24; alloc local storage
  460  0000137c  afa20000	sw	0(r29),r2
  461  00001380  afa30004	sw	4(r29),r3
  462  00001384  afa40008	sw	8(r29),r4
  463  00001388  83c20003	lb	r2,3(r30)
  464  0000138c  20010000	addi	r1,r0,#0
  465  00001390  304300ff	andi	r3,r2,#0x00ff
  466  00001394  60640020	seqi	r4,r3,#32
  467  00001398  1480002c	bnez	r4,L3_LF2
  468  0000139c  54000000	nop; delay slot nop
  469  000013a0  304300ff	andi	r3,r2,#0x00ff
  470  000013a4  60640009	seqi	r4,r3,#9
  471  000013a8  1480001c	bnez	r4,L3_LF2
  472  000013ac  54000000	nop; delay slot nop
  473  000013b0  304300ff	andi	r3,r2,#0x00ff
  474  000013b4  6064000a	seqi	r4,r3,#10
  475  000013b8  1480000c	bnez	r4,L3_LF2
  476  000013bc  54000000	nop; delay slot nop
  477  000013c0  08000008	j	L2_LF2
  478  000013c4  54000000	nop; delay slot nop
  479  000013c8          	L3_LF2:
  480  000013c8  20010001	addi	r1,r0,#1
  481  000013cc          	L2_LF2:
  482  000013cc  08000004	j	L1_LF2
  483  000013d0  54000000	nop; delay slot nop
  484  000013d4          	L1_LF2:
  485  000013d4  8fa20000	lw	r2,0(r29)
  486  000013d8  8fa30004	lw	r3,4(r29)
  487  000013dc  8fa40008	lw	r4,8(r29)
  488  000013e0  8fdffff8	lw	r31,-8(r30)
  489  000013e4  001ee820	add	r29,r0,r30
  490  000013e8  8fdefffc	lw	r30,-4(r30)
  491  000013ec  4be00000	jr	r31
  492  000013f0  54000000	nop
  493  000013f4          	.endproc _isspace
  494  000013f4          	.align 2
  495  000013f4          	.proc _isxdigit
  496  000013f4          	.global _isxdigit
  497  000013f4          	_isxdigit:
  498                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  499  000013f4  afbefffc	sw	-4(r29),r30; push fp
  500  000013f8  001df020	add	r30,r0,r29; fp = sp
  501  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  502  00001400  2fbd0018	subui	r29,r29,#24; alloc local storage
  503  00001404  afa20000	sw	0(r29),r2
  504  00001408  afa30004	sw	4(r29),r3
  505  0000140c  afa40008	sw	8(r29),r4
  506  00001410  83c20003	lb	r2,3(r30)
  507  00001414  20010000	addi	r1,r0,#0
  508  00001418  304300ff	andi	r3,r2,#0x00ff
  509  0000141c  6c64002f	sgtui	r4,r3,#47
  510  00001420  1080001c	beqz	r4,L7_LF2
  511  00001424  54000000	nop; delay slot nop
  512  00001428  304300ff	andi	r3,r2,#0x00ff
  513  0000142c  70640039	sleui	r4,r3,#57
  514  00001430  1480005c	bnez	r4,L6_LF2
  515  00001434  54000000	nop; delay slot nop
  516  00001438  08000004	j	L7_LF2
  517  0000143c  54000000	nop; delay slot nop
  518  00001440          	L7_LF2:
  519  00001440  304300ff	andi	r3,r2,#0x00ff
  520  00001444  6c640060	sgtui	r4,r3,#96
  521  00001448  1080001c	beqz	r4,L8_LF2
  522  0000144c  54000000	nop; delay slot nop
  523  00001450  304300ff	andi	r3,r2,#0x00ff
  524  00001454  70640066	sleui	r4,r3,#102
  525  00001458  14800034	bnez	r4,L6_LF2
  526  0000145c  54000000	nop; delay slot nop
  527  00001460  08000004	j	L8_LF2
  528  00001464  54000000	nop; delay slot nop
  529  00001468          	L8_LF2:
  530  00001468  304300ff	andi	r3,r2,#0x00ff
  531  0000146c  6c640040	sgtui	r4,r3,#64
  532  00001470  10800020	beqz	r4,L5_LF2
  533  00001474  54000000	nop; delay slot nop
  534  00001478  304300ff	andi	r3,r2,#0x00ff
  535  0000147c  70640041	sleui	r4,r3,#65
  536  00001480  1480000c	bnez	r4,L6_LF2
  537  00001484  54000000	nop; delay slot nop
  538  00001488  08000008	j	L5_LF2
  539  0000148c  54000000	nop; delay slot nop
  540  00001490          	L6_LF2:
  541  00001490  20010001	addi	r1,r0,#1
  542  00001494          	L5_LF2:
  543  00001494  08000004	j	L4_LF2
  544  00001498  54000000	nop; delay slot nop
  545  0000149c          	L4_LF2:
  546  0000149c  8fa20000	lw	r2,0(r29)
  547  000014a0  8fa30004	lw	r3,4(r29)
  548  000014a4  8fa40008	lw	r4,8(r29)
  549  000014a8  8fdffff8	lw	r31,-8(r30)
  550  000014ac  001ee820	add	r29,r0,r30
  551  000014b0  8fdefffc	lw	r30,-4(r30)
  552  000014b4  4be00000	jr	r31
  553  000014b8  54000000	nop
  554  000014bc          	.endproc _isxdigit
  555  000014bc          	.align 2
  556  000014bc          	.proc _dstrcpy
  557  000014bc          	.global _dstrcpy
  558  000014bc          	_dstrcpy:
  559                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  560  000014bc  afbefffc	sw	-4(r29),r30; push fp
  561  000014c0  001df020	add	r30,r0,r29; fp = sp
  562  000014c4  afbffff8	sw	-8(r29),r31; push ret addr
  563  000014c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  564  000014cc  afa20000	sw	0(r29),r2
  565  000014d0  afa30004	sw	4(r29),r3
  566  000014d4  8fc10000	lw	r1,(r30)
  567  000014d8  afc1fff4	sw	-12(r30),r1
  568  000014dc          	L10_LF2:
  569  000014dc  8fc10000	lw	r1,(r30)
  570  000014e0  20220001	addi	r2,r1,#1
  571  000014e4  afc20000	sw	(r30),r2
  572  000014e8  8fc20004	lw	r2,4(r30)
  573  000014ec  20430001	addi	r3,r2,#1
  574  000014f0  afc30004	sw	4(r30),r3
  575  000014f4  80420000	lb	r2,(r2)
  576  000014f8  a0220000	sb	(r1),r2
  577  000014fc  a3c2fff3	sb	-13(r30),r2
  578  00001500          	L12_LF2:
  579  00001500  93c1fff3	lbu	r1,-13(r30)
  580  00001504  64220000	snei	r2,r1,#0
  581  00001508  1440000c	bnez	r2,L13_LF2
  582  0000150c  54000000	nop; delay slot nop
  583  00001510  0800000c	j	L11_LF2
  584  00001514  54000000	nop; delay slot nop
  585  00001518          	L13_LF2:
  586  00001518  0bffffc0	j	L10_LF2
  587  0000151c  54000000	nop; delay slot nop
  588  00001520          	L11_LF2:
  589  00001520  8fc1fff4	lw	r1,-12(r30)
  590  00001524  08000004	j	L9_LF2
  591  00001528  54000000	nop; delay slot nop
  592  0000152c          	L9_LF2:
  593  0000152c  8fa20000	lw	r2,0(r29)
  594  00001530  8fa30004	lw	r3,4(r29)
  595  00001534  8fdffff8	lw	r31,-8(r30)
  596  00001538  001ee820	add	r29,r0,r30
  597  0000153c  8fdefffc	lw	r30,-4(r30)
  598  00001540  4be00000	jr	r31
  599  00001544  54000000	nop
  600  00001548          	.endproc _dstrcpy
  601  00001548          	.align 2
  602  00001548          	.proc _dstrncpy
  603  00001548          	.global _dstrncpy
  604  00001548          	_dstrncpy:
  605                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  606  00001548  afbefffc	sw	-4(r29),r30; push fp
  607  0000154c  001df020	add	r30,r0,r29; fp = sp
  608  00001550  afbffff8	sw	-8(r29),r31; push ret addr
  609  00001554  2fbd0018	subui	r29,r29,#24; alloc local storage
  610  00001558  afa20000	sw	0(r29),r2
  611  0000155c  afa30004	sw	4(r29),r3
  612  00001560  8fc10000	lw	r1,(r30)
  613  00001564  afc1fff4	sw	-12(r30),r1
  614  00001568          	L15_LF2:
  615  00001568  8fc10008	lw	r1,8(r30)
  616  0000156c  2022ffff	addi	r2,r1,#-1
  617  00001570  afc20008	sw	8(r30),r2
  618  00001574  70210000	slei	r1,r1,#0
  619  00001578  1020000c	beqz	r1,L18_LF2
  620  0000157c  54000000	nop; delay slot nop
  621  00001580  08000048	j	L16_LF2
  622  00001584  54000000	nop; delay slot nop
  623  00001588          	L18_LF2:
  624  00001588  8fc10000	lw	r1,(r30)
  625  0000158c  20220001	addi	r2,r1,#1
  626  00001590  afc20000	sw	(r30),r2
  627  00001594  8fc20004	lw	r2,4(r30)
  628  00001598  20430001	addi	r3,r2,#1
  629  0000159c  afc30004	sw	4(r30),r3
  630  000015a0  80420000	lb	r2,(r2)
  631  000015a4  a0220000	sb	(r1),r2
  632  000015a8  a3c2fff3	sb	-13(r30),r2
  633  000015ac          	L17_LF2:
  634  000015ac  93c1fff3	lbu	r1,-13(r30)
  635  000015b0  64220000	snei	r2,r1,#0
  636  000015b4  1440000c	bnez	r2,L19_LF2
  637  000015b8  54000000	nop; delay slot nop
  638  000015bc  0800000c	j	L16_LF2
  639  000015c0  54000000	nop; delay slot nop
  640  000015c4          	L19_LF2:
  641  000015c4  0bffffa0	j	L15_LF2
  642  000015c8  54000000	nop; delay slot nop
  643  000015cc          	L16_LF2:
  644  000015cc  8fc1fff4	lw	r1,-12(r30)
  645  000015d0  08000004	j	L14_LF2
  646  000015d4  54000000	nop; delay slot nop
  647  000015d8          	L14_LF2:
  648  000015d8  8fa20000	lw	r2,0(r29)
  649  000015dc  8fa30004	lw	r3,4(r29)
  650  000015e0  8fdffff8	lw	r31,-8(r30)
  651  000015e4  001ee820	add	r29,r0,r30
  652  000015e8  8fdefffc	lw	r30,-4(r30)
  653  000015ec  4be00000	jr	r31
  654  000015f0  54000000	nop
  655  000015f4          	.endproc _dstrncpy
  656  000015f4          	.align 2
  657  000015f4          	.proc _dstrcat
  658  000015f4          	.global _dstrcat
  659  000015f4          	_dstrcat:
  660                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  661  000015f4  afbefffc	sw	-4(r29),r30; push fp
  662  000015f8  001df020	add	r30,r0,r29; fp = sp
  663  000015fc  afbffff8	sw	-8(r29),r31; push ret addr
  664  00001600  2fbd0018	subui	r29,r29,#24; alloc local storage
  665  00001604  afa20000	sw	0(r29),r2
  666  00001608  8fc10000	lw	r1,(r30)
  667  0000160c  afc1fff4	sw	-12(r30),r1
  668  00001610          	L21_LF2:
  669  00001610  8fc10000	lw	r1,(r30)
  670  00001614  90220000	lbu	r2,(r1)
  671  00001618  64410000	snei	r1,r2,#0
  672  0000161c  1420000c	bnez	r1,L23_LF2
  673  00001620  54000000	nop; delay slot nop
  674  00001624  0800001c	j	L22_LF2
  675  00001628  54000000	nop; delay slot nop
  676  0000162c          	L23_LF2:
  677  0000162c  8fc20000	lw	r2,(r30)
  678  00001630  20410001	addi	r1,r2,#1
  679  00001634  00011020	add	r2,r0,r1
  680  00001638  afc20000	sw	(r30),r2
  681  0000163c  0bffffd0	j	L21_LF2
  682  00001640  54000000	nop; delay slot nop
  683  00001644          	L22_LF2:
  684  00001644  23bdfff8	addi	r29,r29,#-8
  685  00001648  001d0820	add	r1,r0,r29
  686  0000164c  8fc20000	lw	r2,(r30)
  687  00001650  ac220000	sw	(r1),r2
  688  00001654  8fc20004	lw	r2,4(r30)
  689  00001658  ac220004	sw	4(r1),r2
  690  0000165c  0ffffe5c	jal	_dstrcpy
  691  00001660  54000000	nop; delay slot nop
  692  00001664  23bd0008	addi	r29,r29,#8
  693  00001668  8fc1fff4	lw	r1,-12(r30)
  694  0000166c  08000004	j	L20_LF2
  695  00001670  54000000	nop; delay slot nop
  696  00001674          	L20_LF2:
  697  00001674  8fa20000	lw	r2,0(r29)
  698  00001678  8fdffff8	lw	r31,-8(r30)
  699  0000167c  001ee820	add	r29,r0,r30
  700  00001680  8fdefffc	lw	r30,-4(r30)
  701  00001684  4be00000	jr	r31
  702  00001688  54000000	nop
  703  0000168c          	.endproc _dstrcat
  704  0000168c          	.align 2
  705  0000168c          	.proc _dstrncmp
  706  0000168c          	.global _dstrncmp
  707  0000168c          	_dstrncmp:
  708                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  709  0000168c  afbefffc	sw	-4(r29),r30; push fp
  710  00001690  001df020	add	r30,r0,r29; fp = sp
  711  00001694  afbffff8	sw	-8(r29),r31; push ret addr
  712  00001698  2fbd0018	subui	r29,r29,#24; alloc local storage
  713  0000169c  afa20000	sw	0(r29),r2
  714  000016a0  afa30004	sw	4(r29),r3
  715  000016a4  54000000	nop
  716  000016a8  20010000	addi	r1,r0,#0
  717  000016ac  afc1fff4	sw	-12(r30),r1
  718  000016b0          	L25_LF2:
  719  000016b0  8fc1fff4	lw	r1,-12(r30)
  720  000016b4  8fc20008	lw	r2,8(r30)
  721  000016b8  0022082a	slt	r1,r1,r2
  722  000016bc  1420000c	bnez	r1,L28_LF2
  723  000016c0  54000000	nop; delay slot nop
  724  000016c4  08000088	j	L26_LF2
  725  000016c8  54000000	nop; delay slot nop
  726  000016cc          	L28_LF2:
  727  000016cc  8fc10004	lw	r1,4(r30)
  728  000016d0  90220000	lbu	r2,(r1)
  729  000016d4  64410000	snei	r1,r2,#0
  730  000016d8  14200018	bnez	r1,L29_LF2
  731  000016dc  54000000	nop; delay slot nop
  732  000016e0  20010000	addi	r1,r0,#0
  733  000016e4  080000d8	j	L24_LF2
  734  000016e8  54000000	nop; delay slot nop
  735  000016ec  08000028	j	L30_LF2
  736  000016f0  54000000	nop; delay slot nop
  737  000016f4          	L29_LF2:
  738  000016f4  8fc10000	lw	r1,(r30)
  739  000016f8  8fc20004	lw	r2,4(r30)
  740  000016fc  90210000	lbu	r1,(r1)
  741  00001700  90420000	lbu	r2,(r2)
  742  00001704  00220829	sne	r1,r1,r2
  743  00001708  1020000c	beqz	r1,L30_LF2
  744  0000170c  54000000	nop; delay slot nop
  745  00001710  0800003c	j	L26_LF2
  746  00001714  54000000	nop; delay slot nop
  747  00001718          	L31_LF2:
  748  00001718          	L30_LF2:
  749  00001718  8fc20000	lw	r2,(r30)
  750  0000171c  20410001	addi	r1,r2,#1
  751  00001720  00011020	add	r2,r0,r1
  752  00001724  afc20000	sw	(r30),r2
  753  00001728  8fc20004	lw	r2,4(r30)
  754  0000172c  20410001	addi	r1,r2,#1
  755  00001730  00011020	add	r2,r0,r1
  756  00001734  afc20004	sw	4(r30),r2
  757  00001738          	L27_LF2:
  758  00001738  8fc2fff4	lw	r2,-12(r30)
  759  0000173c  20410001	addi	r1,r2,#1
  760  00001740  00011020	add	r2,r0,r1
  761  00001744  afc2fff4	sw	-12(r30),r2
  762  00001748  0bffff64	j	L25_LF2
  763  0000174c  54000000	nop; delay slot nop
  764  00001750          	L26_LF2:
  765  00001750  8fc1fff4	lw	r1,-12(r30)
  766  00001754  8fc20008	lw	r2,8(r30)
  767  00001758  00220828	seq	r1,r1,r2
  768  0000175c  10200018	beqz	r1,L32_LF2
  769  00001760  54000000	nop; delay slot nop
  770  00001764  20010000	addi	r1,r0,#0
  771  00001768  08000054	j	L24_LF2
  772  0000176c  54000000	nop; delay slot nop
  773  00001770  0800004c	j	L33_LF2
  774  00001774  54000000	nop; delay slot nop
  775  00001778          	L32_LF2:
  776  00001778  8fc20000	lw	r2,(r30)
  777  0000177c  90410000	lbu	r1,(r2)
  778  00001780  8fc20004	lw	r2,4(r30)
  779  00001784  90430000	lbu	r3,(r2)
  780  00001788  00230822	sub	r1,r1,r3
  781  0000178c  74220000	sgei	r2,r1,#0
  782  00001790  10400020	beqz	r2,L34_LF2
  783  00001794  54000000	nop; delay slot nop
  784  00001798  8fc10000	lw	r1,(r30)
  785  0000179c  8fc20004	lw	r2,4(r30)
  786  000017a0  90210000	lbu	r1,(r1)
  787  000017a4  90420000	lbu	r2,(r2)
  788  000017a8  00220829	sne	r1,r1,r2
  789  000017ac  08000008	j	L35_LF2
  790  000017b0  54000000	nop; delay slot nop
  791  000017b4          	L34_LF2:
  792  000017b4  2001ffff	addi	r1,r0,#-1
  793  000017b8          	L35_LF2:
  794  000017b8  08000004	j	L24_LF2
  795  000017bc  54000000	nop; delay slot nop
  796  000017c0          	L33_LF2:
  797  000017c0          	L24_LF2:
  798  000017c0  8fa20000	lw	r2,0(r29)
  799  000017c4  8fa30004	lw	r3,4(r29)
  800  000017c8  8fdffff8	lw	r31,-8(r30)
  801  000017cc  001ee820	add	r29,r0,r30
  802  000017d0  8fdefffc	lw	r30,-4(r30)
  803  000017d4  4be00000	jr	r31
  804  000017d8  54000000	nop
  805  000017dc          	.endproc _dstrncmp
  806  000017dc          	.align 2
  807  000017dc          	.proc _dstrlen
  808  000017dc          	.global _dstrlen
  809  000017dc          	_dstrlen:
  810                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  811  000017dc  afbefffc	sw	-4(r29),r30; push fp
  812  000017e0  001df020	add	r30,r0,r29; fp = sp
  813  000017e4  afbffff8	sw	-8(r29),r31; push ret addr
  814  000017e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  815  000017ec  afa20000	sw	0(r29),r2
  816  000017f0  20010000	addi	r1,r0,#0
  817  000017f4  afc1fff4	sw	-12(r30),r1
  818  000017f8          	L37_LF2:
  819  000017f8  8fc10000	lw	r1,(r30)
  820  000017fc  20220001	addi	r2,r1,#1
  821  00001800  afc20000	sw	(r30),r2
  822  00001804  90210000	lbu	r1,(r1)
  823  00001808  64220000	snei	r2,r1,#0
  824  0000180c  1440000c	bnez	r2,L39_LF2
  825  00001810  54000000	nop; delay slot nop
  826  00001814  0800001c	j	L38_LF2
  827  00001818  54000000	nop; delay slot nop
  828  0000181c          	L39_LF2:
  829  0000181c  8fc2fff4	lw	r2,-12(r30)
  830  00001820  20410001	addi	r1,r2,#1
  831  00001824  00011020	add	r2,r0,r1
  832  00001828  afc2fff4	sw	-12(r30),r2
  833  0000182c  0bffffc8	j	L37_LF2
  834  00001830  54000000	nop; delay slot nop
  835  00001834          	L38_LF2:
  836  00001834  8fc1fff4	lw	r1,-12(r30)
  837  00001838  08000004	j	L36_LF2
  838  0000183c  54000000	nop; delay slot nop
  839  00001840          	L36_LF2:
  840  00001840  8fa20000	lw	r2,0(r29)
  841  00001844  8fdffff8	lw	r31,-8(r30)
  842  00001848  001ee820	add	r29,r0,r30
  843  0000184c  8fdefffc	lw	r30,-4(r30)
  844  00001850  4be00000	jr	r31
  845  00001854  54000000	nop
  846  00001858          	.endproc _dstrlen
  847  00001858          	.align 2
  848  00001858          	.proc _dstrstr
  849  00001858          	.global _dstrstr
  850  00001858          	_dstrstr:
  851                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  852  00001858  afbefffc	sw	-4(r29),r30; push fp
  853  0000185c  001df020	add	r30,r0,r29; fp = sp
  854  00001860  afbffff8	sw	-8(r29),r31; push ret addr
  855  00001864  2fbd0018	subui	r29,r29,#24; alloc local storage
  856  00001868  afa20000	sw	0(r29),r2
  857  0000186c  23bdfff8	addi	r29,r29,#-8
  858  00001870  001d0820	add	r1,r0,r29
  859  00001874  8fc20004	lw	r2,4(r30)
  860  00001878  ac220000	sw	(r1),r2
  861  0000187c  0fffff5c	jal	_dstrlen
  862  00001880  54000000	nop; delay slot nop
  863  00001884  23bd0008	addi	r29,r29,#8
  864  00001888  afc1fff4	sw	-12(r30),r1
  865  0000188c          	L41_LF2:
  866  0000188c  8fc10000	lw	r1,(r30)
  867  00001890  90220000	lbu	r2,(r1)
  868  00001894  64410000	snei	r1,r2,#0
  869  00001898  1420000c	bnez	r1,L43_LF2
  870  0000189c  54000000	nop; delay slot nop
  871  000018a0  08000060	j	L42_LF2
  872  000018a4  54000000	nop; delay slot nop
  873  000018a8          	L43_LF2:
  874  000018a8  23bdfff0	addi	r29,r29,#-16
  875  000018ac  001d0820	add	r1,r0,r29
  876  000018b0  8fc20000	lw	r2,(r30)
  877  000018b4  ac220000	sw	(r1),r2
  878  000018b8  8fc20004	lw	r2,4(r30)
  879  000018bc  ac220004	sw	4(r1),r2
  880  000018c0  8fc2fff4	lw	r2,-12(r30)
  881  000018c4  ac220008	sw	8(r1),r2
  882  000018c8  0ffffdc0	jal	_dstrncmp
  883  000018cc  54000000	nop; delay slot nop
  884  000018d0  23bd0010	addi	r29,r29,#16
  885  000018d4  64220000	snei	r2,r1,#0
  886  000018d8  14400010	bnez	r2,L44_LF2
  887  000018dc  54000000	nop; delay slot nop
  888  000018e0  8fc10000	lw	r1,(r30)
  889  000018e4  08000028	j	L40_LF2
  890  000018e8  54000000	nop; delay slot nop
  891  000018ec          	L44_LF2:
  892  000018ec  8fc20000	lw	r2,(r30)
  893  000018f0  20410001	addi	r1,r2,#1
  894  000018f4  00011020	add	r2,r0,r1
  895  000018f8  afc20000	sw	(r30),r2
  896  000018fc  0bffff8c	j	L41_LF2
  897  00001900  54000000	nop; delay slot nop
  898  00001904          	L42_LF2:
  899  00001904  20010000	addi	r1,r0,#0
  900  00001908  08000004	j	L40_LF2
  901  0000190c  54000000	nop; delay slot nop
  902  00001910          	L40_LF2:
  903  00001910  8fa20000	lw	r2,0(r29)
  904  00001914  8fdffff8	lw	r31,-8(r30)
  905  00001918  001ee820	add	r29,r0,r30
  906  0000191c  8fdefffc	lw	r30,-4(r30)
  907  00001920  4be00000	jr	r31
  908  00001924  54000000	nop
  909  00001928          	.endproc _dstrstr
  910  00001928          	.align 2
  911  00001928          	.proc _dmindex
  912  00001928          	.global _dmindex
  913  00001928          	_dmindex:
  914                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  915  00001928  afbefffc	sw	-4(r29),r30; push fp
  916  0000192c  001df020	add	r30,r0,r29; fp = sp
  917  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  918  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  919  00001938  afa20000	sw	0(r29),r2
  920  0000193c  54000000	nop
  921  00001940          	L46_LF2:
  922  00001940  8fc10000	lw	r1,(r30)
  923  00001944  90220000	lbu	r2,(r1)
  924  00001948  64410000	snei	r1,r2,#0
  925  0000194c  1420000c	bnez	r1,L48_LF2
  926  00001950  54000000	nop; delay slot nop
  927  00001954  08000070	j	L47_LF2
  928  00001958  54000000	nop; delay slot nop
  929  0000195c          	L48_LF2:
  930  0000195c  8fc10004	lw	r1,4(r30)
  931  00001960  afc1fff4	sw	-12(r30),r1
  932  00001964          	L49_LF2:
  933  00001964  8fc1fff4	lw	r1,-12(r30)
  934  00001968  90220000	lbu	r2,(r1)
  935  0000196c  64410000	snei	r1,r2,#0
  936  00001970  1420000c	bnez	r1,L52_LF2
  937  00001974  54000000	nop; delay slot nop
  938  00001978  08000044	j	L50_LF2
  939  0000197c  54000000	nop; delay slot nop
  940  00001980          	L52_LF2:
  941  00001980  8fc10000	lw	r1,(r30)
  942  00001984  8fc2fff4	lw	r2,-12(r30)
  943  00001988  90210000	lbu	r1,(r1)
  944  0000198c  90420000	lbu	r2,(r2)
  945  00001990  00220828	seq	r1,r1,r2
  946  00001994  10200010	beqz	r1,L51_LF2
  947  00001998  54000000	nop; delay slot nop
  948  0000199c  8fc10000	lw	r1,(r30)
  949  000019a0  08000030	j	L45_LF2
  950  000019a4  54000000	nop; delay slot nop
  951  000019a8          	L53_LF2:
  952  000019a8          	L51_LF2:
  953  000019a8  8fc2fff4	lw	r2,-12(r30)
  954  000019ac  20410001	addi	r1,r2,#1
  955  000019b0  00011020	add	r2,r0,r1
  956  000019b4  afc2fff4	sw	-12(r30),r2
  957  000019b8  0bffffa8	j	L49_LF2
  958  000019bc  54000000	nop; delay slot nop
  959  000019c0          	L50_LF2:
  960  000019c0  0bffff7c	j	L46_LF2
  961  000019c4  54000000	nop; delay slot nop
  962  000019c8          	L47_LF2:
  963  000019c8  20010000	addi	r1,r0,#0
  964  000019cc  08000004	j	L45_LF2
  965  000019d0  54000000	nop; delay slot nop
  966  000019d4          	L45_LF2:
  967  000019d4  8fa20000	lw	r2,0(r29)
  968  000019d8  8fdffff8	lw	r31,-8(r30)
  969  000019dc  001ee820	add	r29,r0,r30
  970  000019e0  8fdefffc	lw	r30,-4(r30)
  971  000019e4  4be00000	jr	r31
  972  000019e8  54000000	nop
  973  000019ec          	.endproc _dmindex
  974  000019ec          	.align 2
  975  000019ec          	.proc _dindex
  976  000019ec          	.global _dindex
  977  000019ec          	_dindex:
  978                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  979  000019ec  afbefffc	sw	-4(r29),r30; push fp
  980  000019f0  001df020	add	r30,r0,r29; fp = sp
  981  000019f4  afbffff8	sw	-8(r29),r31; push ret addr
  982  000019f8  2fbd0010	subui	r29,r29,#16; alloc local storage
  983  000019fc  afa20000	sw	0(r29),r2
  984  00001a00  54000000	nop
  985  00001a04          	L55_LF2:
  986  00001a04  8fc10000	lw	r1,(r30)
  987  00001a08  90220000	lbu	r2,(r1)
  988  00001a0c  64410000	snei	r1,r2,#0
  989  00001a10  1420000c	bnez	r1,L57_LF2
  990  00001a14  54000000	nop; delay slot nop
  991  00001a18  08000040	j	L56_LF2
  992  00001a1c  54000000	nop; delay slot nop
  993  00001a20          	L57_LF2:
  994  00001a20  8fc10000	lw	r1,(r30)
  995  00001a24  90220000	lbu	r2,(r1)
  996  00001a28  8fc10004	lw	r1,4(r30)
  997  00001a2c  00411028	seq	r2,r2,r1
  998  00001a30  10400010	beqz	r2,L58_LF2
  999  00001a34  54000000	nop; delay slot nop
 1000  00001a38  8fc10000	lw	r1,(r30)
 1001  00001a3c  08000028	j	L54_LF2
 1002  00001a40  54000000	nop; delay slot nop
 1003  00001a44          	L58_LF2:
 1004  00001a44  8fc20000	lw	r2,(r30)
 1005  00001a48  20410001	addi	r1,r2,#1
 1006  00001a4c  00011020	add	r2,r0,r1
 1007  00001a50  afc20000	sw	(r30),r2
 1008  00001a54  0bffffac	j	L55_LF2
 1009  00001a58  54000000	nop; delay slot nop
 1010  00001a5c          	L56_LF2:
 1011  00001a5c  20010000	addi	r1,r0,#0
 1012  00001a60  08000004	j	L54_LF2
 1013  00001a64  54000000	nop; delay slot nop
 1014  00001a68          	L54_LF2:
 1015  00001a68  8fa20000	lw	r2,0(r29)
 1016  00001a6c  8fdffff8	lw	r31,-8(r30)
 1017  00001a70  001ee820	add	r29,r0,r30
 1018  00001a74  8fdefffc	lw	r30,-4(r30)
 1019  00001a78  4be00000	jr	r31
 1020  00001a7c  54000000	nop
 1021  00001a80          	.endproc _dindex
 1022  00001a80          	.align 2
 1023  00001a80          	.proc _ditoa
 1024  00001a80          	.global _ditoa
 1025  00001a80          	_ditoa:
 1026                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1027  00001a80  afbefffc	sw	-4(r29),r30; push fp
 1028  00001a84  001df020	add	r30,r0,r29; fp = sp
 1029  00001a88  afbffff8	sw	-8(r29),r31; push ret addr
 1030  00001a8c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1031  00001a90  afa20000	sw	0(r29),r2
 1032  00001a94  afa30004	sw	4(r29),r3
 1033  00001a98  8fc10000	lw	r1,(r30)
 1034  00001a9c  68220000	slti	r2,r1,#0
 1035  00001aa0  1040002c	beqz	r2,L60_LF2
 1036  00001aa4  54000000	nop; delay slot nop
 1037  00001aa8  8fc10004	lw	r1,4(r30)
 1038  00001aac  20220001	addi	r2,r1,#1
 1039  00001ab0  afc20004	sw	4(r30),r2
 1040  00001ab4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1041  00001ab8  a0220000	sb	(r1),r2
 1042  00001abc  8fc10000	lw	r1,(r30)
 1043  00001ac0  00011022	sub	r2,r0,r1
 1044  00001ac4  afc20000	sw	(r30),r2
 1045  00001ac8  08000118	j	L61_LF2
 1046  00001acc  54000000	nop; delay slot nop
 1047  00001ad0          	L60_LF2:
 1048  00001ad0  8fc10000	lw	r1,(r30)
 1049  00001ad4  64220000	snei	r2,r1,#0
 1050  00001ad8  14400020	bnez	r2,L62_LF2
 1051  00001adc  54000000	nop; delay slot nop
 1052  00001ae0  8fc10004	lw	r1,4(r30)
 1053  00001ae4  20220001	addi	r2,r1,#1
 1054  00001ae8  afc20004	sw	4(r30),r2
 1055  00001aec  20020030	addi	r2,r0,(#0x30)&0xff
 1056  00001af0  a0220000	sb	(r1),r2
 1057  00001af4  080000ec	j	L61_LF2
 1058  00001af8  54000000	nop; delay slot nop
 1059  00001afc          	L62_LF2:
 1060  00001afc  20010001	addi	r1,r0,#1
 1061  00001b00  afc1fff4	sw	-12(r30),r1
 1062  00001b04          	L64_LF2:
 1063  00001b04  8fc1fff4	lw	r1,-12(r30)
 1064  00001b08  8fc20000	lw	r2,(r30)
 1065  00001b0c  0022082c	sle	r1,r1,r2
 1066  00001b10  1420000c	bnez	r1,L66_LF2
 1067  00001b14  54000000	nop; delay slot nop
 1068  00001b18  08000024	j	L65_LF2
 1069  00001b1c  54000000	nop; delay slot nop
 1070  00001b20          	L67_LF2:
 1071  00001b20          	L66_LF2:
 1072  00001b20  8fc1fff4	lw	r1,-12(r30)
 1073  00001b24  00011820	add	r3,r0,r1
 1074  00001b28  50620002	slli	r2,r3,#0x2
 1075  00001b2c  00411020	add	r2,r2,r1
 1076  00001b30  50410001	slli	r1,r2,#0x1
 1077  00001b34  afc1fff4	sw	-12(r30),r1
 1078  00001b38  0bffffc8	j	L64_LF2
 1079  00001b3c  54000000	nop; delay slot nop
 1080  00001b40          	L65_LF2:
 1081  00001b40  54000000	nop
 1082  00001b44          	L68_LF2:
 1083  00001b44  8fc1fff4	lw	r1,-12(r30)
 1084  00001b48  2002000a	addi	r2,r0,#10
 1085  00001b4c  00200035	movi2fp	f0,r1
 1086  00001b50  00400835	movi2fp	f1,r2
 1087  00001b54  0401000f	div	f0,f0,f1
 1088  00001b58  00000834	movfp2i	r1,f0
 1089  00001b5c  afc1fff4	sw	-12(r30),r1
 1090  00001b60  8fc10004	lw	r1,4(r30)
 1091  00001b64  20220001	addi	r2,r1,#1
 1092  00001b68  afc20004	sw	4(r30),r2
 1093  00001b6c  8fc20000	lw	r2,(r30)
 1094  00001b70  8fc3fff4	lw	r3,-12(r30)
 1095  00001b74  00400035	movi2fp	f0,r2
 1096  00001b78  00600835	movi2fp	f1,r3
 1097  00001b7c  0401000f	div	f0,f0,f1
 1098  00001b80  00001034	movfp2i	r2,f0
 1099  00001b84  00021820	add	r3,r0,r2
 1100  00001b88  20620030	addi	r2,r3,#48
 1101  00001b8c  a0220000	sb	(r1),r2
 1102  00001b90  8fc10000	lw	r1,(r30)
 1103  00001b94  8fc3fff4	lw	r3,-12(r30)
 1104  00001b98  00200035	movi2fp	f0,r1
 1105  00001b9c  00600835	movi2fp	f1,r3
 1106  00001ba0  0401000f	div	f0,f0,f1
 1107  00001ba4  00001034	movfp2i	r2,f0
 1108  00001ba8  8fc3fff4	lw	r3,-12(r30)
 1109  00001bac  00400035	movi2fp	f0,r2
 1110  00001bb0  00600835	movi2fp	f1,r3
 1111  00001bb4  0401000e	mult	f0,f0,f1
 1112  00001bb8  00001034	movfp2i	r2,f0
 1113  00001bbc  00220822	sub	r1,r1,r2
 1114  00001bc0  afc10000	sw	(r30),r1
 1115  00001bc4          	L70_LF2:
 1116  00001bc4  8fc1fff4	lw	r1,-12(r30)
 1117  00001bc8  6c220001	sgti	r2,r1,#1
 1118  00001bcc  1440000c	bnez	r2,L71_LF2
 1119  00001bd0  54000000	nop; delay slot nop
 1120  00001bd4  0800000c	j	L61_LF2
 1121  00001bd8  54000000	nop; delay slot nop
 1122  00001bdc          	L71_LF2:
 1123  00001bdc  0bffff64	j	L68_LF2
 1124  00001be0  54000000	nop; delay slot nop
 1125  00001be4          	L69_LF2:
 1126  00001be4          	L63_LF2:
 1127  00001be4          	L61_LF2:
 1128  00001be4  8fc10004	lw	r1,4(r30)
 1129  00001be8  20020000	addi	r2,r0,(#0x0)&0xff
 1130  00001bec  a0220000	sb	(r1),r2
 1131  00001bf0          	L59_LF2:
 1132  00001bf0  8fa20000	lw	r2,0(r29)
 1133  00001bf4  8fa30004	lw	r3,4(r29)
 1134  00001bf8  8fdffff8	lw	r31,-8(r30)
 1135  00001bfc  001ee820	add	r29,r0,r30
 1136  00001c00  8fdefffc	lw	r30,-4(r30)
 1137  00001c04  4be00000	jr	r31
 1138  00001c08  54000000	nop
 1139  00001c0c          	.endproc _ditoa
 1140  00001c0c          	.align 2
 1141  00001c0c          	.proc _dstrtol
 1142  00001c0c          	.global _dstrtol
 1143  00001c0c          	_dstrtol:
 1144                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1145  00001c0c  afbefffc	sw	-4(r29),r30; push fp
 1146  00001c10  001df020	add	r30,r0,r29; fp = sp
 1147  00001c14  afbffff8	sw	-8(r29),r31; push ret addr
 1148  00001c18  2fbd0020	subui	r29,r29,#32; alloc local storage
 1149  00001c1c  afa20000	sw	0(r29),r2
 1150  00001c20  20010000	addi	r1,r0,#0
 1151  00001c24  afc1fff4	sw	-12(r30),r1
 1152  00001c28          	L73_LF2:
 1153  00001c28  8fc10000	lw	r1,(r30)
 1154  00001c2c  90220000	lbu	r2,(r1)
 1155  00001c30  60410020	seqi	r1,r2,#32
 1156  00001c34  14200034	bnez	r1,L75_LF2
 1157  00001c38  54000000	nop; delay slot nop
 1158  00001c3c  8fc10000	lw	r1,(r30)
 1159  00001c40  90220000	lbu	r2,(r1)
 1160  00001c44  60410009	seqi	r1,r2,#9
 1161  00001c48  14200020	bnez	r1,L75_LF2
 1162  00001c4c  54000000	nop; delay slot nop
 1163  00001c50  8fc10000	lw	r1,(r30)
 1164  00001c54  90220000	lbu	r2,(r1)
 1165  00001c58  6041000a	seqi	r1,r2,#10
 1166  00001c5c  1420000c	bnez	r1,L75_LF2
 1167  00001c60  54000000	nop; delay slot nop
 1168  00001c64  0800001c	j	L74_LF2
 1169  00001c68  54000000	nop; delay slot nop
 1170  00001c6c          	L75_LF2:
 1171  00001c6c  8fc20000	lw	r2,(r30)
 1172  00001c70  20410001	addi	r1,r2,#1
 1173  00001c74  00011020	add	r2,r0,r1
 1174  00001c78  afc20000	sw	(r30),r2
 1175  00001c7c  0bffffa8	j	L73_LF2
 1176  00001c80  54000000	nop; delay slot nop
 1177  00001c84          	L74_LF2:
 1178  00001c84  8fc10004	lw	r1,4(r30)
 1179  00001c88  64220000	snei	r2,r1,#0
 1180  00001c8c  10400010	beqz	r2,L76_LF2
 1181  00001c90  54000000	nop; delay slot nop
 1182  00001c94  8fc10004	lw	r1,4(r30)
 1183  00001c98  8fc20000	lw	r2,(r30)
 1184  00001c9c  ac220000	sw	(r1),r2
 1185  00001ca0          	L76_LF2:
 1186  00001ca0  8fc10000	lw	r1,(r30)
 1187  00001ca4  90220000	lbu	r2,(r1)
 1188  00001ca8  64410000	snei	r1,r2,#0
 1189  00001cac  14200010	bnez	r1,L77_LF2
 1190  00001cb0  54000000	nop; delay slot nop
 1191  00001cb4  8fc1fff4	lw	r1,-12(r30)
 1192  00001cb8  08000294	j	L72_LF2
 1193  00001cbc  54000000	nop; delay slot nop
 1194  00001cc0          	L77_LF2:
 1195  00001cc0  8fc10000	lw	r1,(r30)
 1196  00001cc4  90220000	lbu	r2,(r1)
 1197  00001cc8  6041002d	seqi	r1,r2,#45
 1198  00001ccc  10200024	beqz	r1,L78_LF2
 1199  00001cd0  54000000	nop; delay slot nop
 1200  00001cd4  2001ffff	addi	r1,r0,#-1
 1201  00001cd8  afc1ffec	sw	-20(r30),r1
 1202  00001cdc  8fc20000	lw	r2,(r30)
 1203  00001ce0  20410001	addi	r1,r2,#1
 1204  00001ce4  00011020	add	r2,r0,r1
 1205  00001ce8  afc20000	sw	(r30),r2
 1206  00001cec  0800000c	j	L79_LF2
 1207  00001cf0  54000000	nop; delay slot nop
 1208  00001cf4          	L78_LF2:
 1209  00001cf4  20010001	addi	r1,r0,#1
 1210  00001cf8  afc1ffec	sw	-20(r30),r1
 1211  00001cfc          	L79_LF2:
 1212  00001cfc  8fc10008	lw	r1,8(r30)
 1213  00001d00  64220000	snei	r2,r1,#0
 1214  00001d04  14400090	bnez	r2,L80_LF2
 1215  00001d08  54000000	nop; delay slot nop
 1216  00001d0c  8fc10000	lw	r1,(r30)
 1217  00001d10  90220000	lbu	r2,(r1)
 1218  00001d14  60410030	seqi	r1,r2,#48
 1219  00001d18  10200074	beqz	r1,L81_LF2
 1220  00001d1c  54000000	nop; delay slot nop
 1221  00001d20  8fc20000	lw	r2,(r30)
 1222  00001d24  20410001	addi	r1,r2,#1
 1223  00001d28  00011020	add	r2,r0,r1
 1224  00001d2c  afc20000	sw	(r30),r2
 1225  00001d30  8fc10000	lw	r1,(r30)
 1226  00001d34  90220000	lbu	r2,(r1)
 1227  00001d38  60410078	seqi	r1,r2,#120
 1228  00001d3c  14200020	bnez	r1,L83_LF2
 1229  00001d40  54000000	nop; delay slot nop
 1230  00001d44  8fc10000	lw	r1,(r30)
 1231  00001d48  90220000	lbu	r2,(r1)
 1232  00001d4c  60410058	seqi	r1,r2,#88
 1233  00001d50  1420000c	bnez	r1,L83_LF2
 1234  00001d54  54000000	nop; delay slot nop
 1235  00001d58  08000024	j	L82_LF2
 1236  00001d5c  54000000	nop; delay slot nop
 1237  00001d60          	L83_LF2:
 1238  00001d60  20010010	addi	r1,r0,#16
 1239  00001d64  afc10008	sw	8(r30),r1
 1240  00001d68  8fc20000	lw	r2,(r30)
 1241  00001d6c  20410001	addi	r1,r2,#1
 1242  00001d70  00011020	add	r2,r0,r1
 1243  00001d74  afc20000	sw	(r30),r2
 1244  00001d78  0800000c	j	L84_LF2
 1245  00001d7c  54000000	nop; delay slot nop
 1246  00001d80          	L82_LF2:
 1247  00001d80  20010008	addi	r1,r0,#8
 1248  00001d84  afc10008	sw	8(r30),r1
 1249  00001d88          	L84_LF2:
 1250  00001d88  0800000c	j	L80_LF2
 1251  00001d8c  54000000	nop; delay slot nop
 1252  00001d90          	L81_LF2:
 1253  00001d90  2001000a	addi	r1,r0,#10
 1254  00001d94  afc10008	sw	8(r30),r1
 1255  00001d98          	L85_LF2:
 1256  00001d98          	L80_LF2:
 1257  00001d98  8fc10008	lw	r1,8(r30)
 1258  00001d9c  70220000	slei	r2,r1,#0
 1259  00001da0  1440001c	bnez	r2,L87_LF2
 1260  00001da4  54000000	nop; delay slot nop
 1261  00001da8  8fc10008	lw	r1,8(r30)
 1262  00001dac  6c220010	sgti	r2,r1,#16
 1263  00001db0  1440000c	bnez	r2,L87_LF2
 1264  00001db4  54000000	nop; delay slot nop
 1265  00001db8  08000010	j	L86_LF2
 1266  00001dbc  54000000	nop; delay slot nop
 1267  00001dc0          	L87_LF2:
 1268  00001dc0  8fc1fff4	lw	r1,-12(r30)
 1269  00001dc4  08000188	j	L72_LF2
 1270  00001dc8  54000000	nop; delay slot nop
 1271  00001dcc          	L86_LF2:
 1272  00001dcc  54000000	nop
 1273  00001dd0          	L88_LF2:
 1274  00001dd0  8fc10000	lw	r1,(r30)
 1275  00001dd4  90220000	lbu	r2,(r1)
 1276  00001dd8  6c41002f	sgtui	r1,r2,#47
 1277  00001ddc  10200030	beqz	r1,L91_LF2
 1278  00001de0  54000000	nop; delay slot nop
 1279  00001de4  8fc10000	lw	r1,(r30)
 1280  00001de8  90220000	lbu	r2,(r1)
 1281  00001dec  70410039	sleui	r1,r2,#57
 1282  00001df0  1020001c	beqz	r1,L91_LF2
 1283  00001df4  54000000	nop; delay slot nop
 1284  00001df8  8fc10000	lw	r1,(r30)
 1285  00001dfc  90220000	lbu	r2,(r1)
 1286  00001e00  2041ffd0	addi	r1,r2,#-48
 1287  00001e04  afc1fff0	sw	-16(r30),r1
 1288  00001e08  0800008c	j	L92_LF2
 1289  00001e0c  54000000	nop; delay slot nop
 1290  00001e10          	L91_LF2:
 1291  00001e10  8fc10000	lw	r1,(r30)
 1292  00001e14  90220000	lbu	r2,(r1)
 1293  00001e18  6c410060	sgtui	r1,r2,#96
 1294  00001e1c  10200030	beqz	r1,L93_LF2
 1295  00001e20  54000000	nop; delay slot nop
 1296  00001e24  8fc10000	lw	r1,(r30)
 1297  00001e28  90220000	lbu	r2,(r1)
 1298  00001e2c  7041007a	sleui	r1,r2,#122
 1299  00001e30  1020001c	beqz	r1,L93_LF2
 1300  00001e34  54000000	nop; delay slot nop
 1301  00001e38  8fc10000	lw	r1,(r30)
 1302  00001e3c  90220000	lbu	r2,(r1)
 1303  00001e40  2041ffa9	addi	r1,r2,#-87
 1304  00001e44  afc1fff0	sw	-16(r30),r1
 1305  00001e48  0800004c	j	L92_LF2
 1306  00001e4c  54000000	nop; delay slot nop
 1307  00001e50          	L93_LF2:
 1308  00001e50  8fc10000	lw	r1,(r30)
 1309  00001e54  90220000	lbu	r2,(r1)
 1310  00001e58  6c410040	sgtui	r1,r2,#64
 1311  00001e5c  10200030	beqz	r1,L95_LF2
 1312  00001e60  54000000	nop; delay slot nop
 1313  00001e64  8fc10000	lw	r1,(r30)
 1314  00001e68  90220000	lbu	r2,(r1)
 1315  00001e6c  7041005a	sleui	r1,r2,#90
 1316  00001e70  1020001c	beqz	r1,L95_LF2
 1317  00001e74  54000000	nop; delay slot nop
 1318  00001e78  8fc10000	lw	r1,(r30)
 1319  00001e7c  90220000	lbu	r2,(r1)
 1320  00001e80  2041ffc9	addi	r1,r2,#-55
 1321  00001e84  afc1fff0	sw	-16(r30),r1
 1322  00001e88  0800000c	j	L92_LF2
 1323  00001e8c  54000000	nop; delay slot nop
 1324  00001e90          	L95_LF2:
 1325  00001e90  200103e8	addi	r1,r0,#1000
 1326  00001e94  afc1fff0	sw	-16(r30),r1
 1327  00001e98          	L96_LF2:
 1328  00001e98          	L94_LF2:
 1329  00001e98          	L92_LF2:
 1330  00001e98  8fc1fff0	lw	r1,-16(r30)
 1331  00001e9c  8fc20008	lw	r2,8(r30)
 1332  00001ea0  0022082a	slt	r1,r1,r2
 1333  00001ea4  10200040	beqz	r1,L90_LF2
 1334  00001ea8  54000000	nop; delay slot nop
 1335  00001eac  8fc1fff4	lw	r1,-12(r30)
 1336  00001eb0  8fc20008	lw	r2,8(r30)
 1337  00001eb4  00200035	movi2fp	f0,r1
 1338  00001eb8  00400835	movi2fp	f1,r2
 1339  00001ebc  0401000e	mult	f0,f0,f1
 1340  00001ec0  00000834	movfp2i	r1,f0
 1341  00001ec4  afc1fff4	sw	-12(r30),r1
 1342  00001ec8  8fc1fff4	lw	r1,-12(r30)
 1343  00001ecc  8fc2fff0	lw	r2,-16(r30)
 1344  00001ed0  00220820	add	r1,r1,r2
 1345  00001ed4  afc1fff4	sw	-12(r30),r1
 1346  00001ed8  8fc20000	lw	r2,(r30)
 1347  00001edc  20410001	addi	r1,r2,#1
 1348  00001ee0  00011020	add	r2,r0,r1
 1349  00001ee4  afc20000	sw	(r30),r2
 1350  00001ee8          	L97_LF2:
 1351  00001ee8          	L90_LF2:
 1352  00001ee8  8fc1fff0	lw	r1,-16(r30)
 1353  00001eec  8fc20008	lw	r2,8(r30)
 1354  00001ef0  0022082a	slt	r1,r1,r2
 1355  00001ef4  1420000c	bnez	r1,L98_LF2
 1356  00001ef8  54000000	nop; delay slot nop
 1357  00001efc  0800000c	j	L89_LF2
 1358  00001f00  54000000	nop; delay slot nop
 1359  00001f04          	L98_LF2:
 1360  00001f04  0bfffec8	j	L88_LF2
 1361  00001f08  54000000	nop; delay slot nop
 1362  00001f0c          	L89_LF2:
 1363  00001f0c  8fc10004	lw	r1,4(r30)
 1364  00001f10  64220000	snei	r2,r1,#0
 1365  00001f14  10400010	beqz	r2,L99_LF2
 1366  00001f18  54000000	nop; delay slot nop
 1367  00001f1c  8fc10004	lw	r1,4(r30)
 1368  00001f20  8fc20000	lw	r2,(r30)
 1369  00001f24  ac220000	sw	(r1),r2
 1370  00001f28          	L99_LF2:
 1371  00001f28  8fc1fff4	lw	r1,-12(r30)
 1372  00001f2c  8fc2ffec	lw	r2,-20(r30)
 1373  00001f30  00200035	movi2fp	f0,r1
 1374  00001f34  00400835	movi2fp	f1,r2
 1375  00001f38  0401000e	mult	f0,f0,f1
 1376  00001f3c  00000834	movfp2i	r1,f0
 1377  00001f40  afc1fff4	sw	-12(r30),r1
 1378  00001f44  8fc1fff4	lw	r1,-12(r30)
 1379  00001f48  08000004	j	L72_LF2
 1380  00001f4c  54000000	nop; delay slot nop
 1381  00001f50          	L72_LF2:
 1382  00001f50  8fa20000	lw	r2,0(r29)
 1383  00001f54  8fdffff8	lw	r31,-8(r30)
 1384  00001f58  001ee820	add	r29,r0,r30
 1385  00001f5c  8fdefffc	lw	r30,-4(r30)
 1386  00001f60  4be00000	jr	r31
 1387  00001f64  54000000	nop
 1388  00001f68          	.endproc _dstrtol
 1389  00001f68          	.align 2
 1390  00001f68          	.proc _bcopy
 1391  00001f68          	.global _bcopy
 1392  00001f68          	_bcopy:
 1393                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1394  00001f68  afbefffc	sw	-4(r29),r30; push fp
 1395  00001f6c  001df020	add	r30,r0,r29; fp = sp
 1396  00001f70  afbffff8	sw	-8(r29),r31; push ret addr
 1397  00001f74  2fbd0010	subui	r29,r29,#16; alloc local storage
 1398  00001f78  afa20000	sw	0(r29),r2
 1399  00001f7c  afa30004	sw	4(r29),r3
 1400  00001f80  54000000	nop
 1401  00001f84          	L101_LF2:
 1402  00001f84  8fc10008	lw	r1,8(r30)
 1403  00001f88  2022ffff	addi	r2,r1,#-1
 1404  00001f8c  afc20008	sw	8(r30),r2
 1405  00001f90  6c210000	sgti	r1,r1,#0
 1406  00001f94  1420000c	bnez	r1,L103_LF2
 1407  00001f98  54000000	nop; delay slot nop
 1408  00001f9c  0800002c	j	L102_LF2
 1409  00001fa0  54000000	nop; delay slot nop
 1410  00001fa4          	L103_LF2:
 1411  00001fa4  8fc10004	lw	r1,4(r30)
 1412  00001fa8  20220001	addi	r2,r1,#1
 1413  00001fac  afc20004	sw	4(r30),r2
 1414  00001fb0  8fc20000	lw	r2,(r30)
 1415  00001fb4  20430001	addi	r3,r2,#1
 1416  00001fb8  afc30000	sw	(r30),r3
 1417  00001fbc  80420000	lb	r2,(r2)
 1418  00001fc0  a0220000	sb	(r1),r2
 1419  00001fc4  0bffffbc	j	L101_LF2
 1420  00001fc8  54000000	nop; delay slot nop
 1421  00001fcc          	L102_LF2:
 1422  00001fcc          	L100_LF2:
 1423  00001fcc  8fa20000	lw	r2,0(r29)
 1424  00001fd0  8fa30004	lw	r3,4(r29)
 1425  00001fd4  8fdffff8	lw	r31,-8(r30)
 1426  00001fd8  001ee820	add	r29,r0,r30
 1427  00001fdc  8fdefffc	lw	r30,-4(r30)
 1428  00001fe0  4be00000	jr	r31
 1429  00001fe4  54000000	nop
 1430  00001fe8          	.endproc _bcopy
 1431  00001fe8          	.align 2
 1432  00001fe8          	.proc _bzero
 1433  00001fe8          	.global _bzero
 1434  00001fe8          	_bzero:
 1435                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1436  00001fe8  afbefffc	sw	-4(r29),r30; push fp
 1437  00001fec  001df020	add	r30,r0,r29; fp = sp
 1438  00001ff0  afbffff8	sw	-8(r29),r31; push ret addr
 1439  00001ff4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1440  00001ff8  afa20000	sw	0(r29),r2
 1441  00001ffc  54000000	nop
 1442  00002000          	L105_LF2:
 1443  00002000  8fc10004	lw	r1,4(r30)
 1444  00002004  2022ffff	addi	r2,r1,#-1
 1445  00002008  afc20004	sw	4(r30),r2
 1446  0000200c  6c210000	sgti	r1,r1,#0
 1447  00002010  1420000c	bnez	r1,L107_LF2
 1448  00002014  54000000	nop; delay slot nop
 1449  00002018  08000020	j	L106_LF2
 1450  0000201c  54000000	nop; delay slot nop
 1451  00002020          	L107_LF2:
 1452  00002020  8fc10000	lw	r1,(r30)
 1453  00002024  20220001	addi	r2,r1,#1
 1454  00002028  afc20000	sw	(r30),r2
 1455  0000202c  20020000	addi	r2,r0,(#0x0)&0xff
 1456  00002030  a0220000	sb	(r1),r2
 1457  00002034  0bffffc8	j	L105_LF2
 1458  00002038  54000000	nop; delay slot nop
 1459  0000203c          	L106_LF2:
 1460  0000203c          	L104_LF2:
 1461  0000203c  8fa20000	lw	r2,0(r29)
 1462  00002040  8fdffff8	lw	r31,-8(r30)
 1463  00002044  001ee820	add	r29,r0,r30
 1464  00002048  8fdefffc	lw	r30,-4(r30)
 1465  0000204c  4be00000	jr	r31
 1466  00002050  54000000	nop
 1467  00002054          	.endproc _bzero
 1468  00002054          	.align 2
 1469  00002054          	.proc _min
 1470  00002054          	.global _min
 1471  00002054          	_min:
 1472                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1473  00002054  afbefffc	sw	-4(r29),r30; push fp
 1474  00002058  001df020	add	r30,r0,r29; fp = sp
 1475  0000205c  afbffff8	sw	-8(r29),r31; push ret addr
 1476  00002060  2fbd0010	subui	r29,r29,#16; alloc local storage
 1477  00002064  afa20000	sw	0(r29),r2
 1478  00002068  afa30004	sw	4(r29),r3
 1479  0000206c  8fc10000	lw	r1,(r30)
 1480  00002070  8fc20004	lw	r2,4(r30)
 1481  00002074  0022182c	sle	r3,r1,r2
 1482  00002078  14600008	bnez	r3,L109_LF2
 1483  0000207c  54000000	nop; delay slot nop
 1484  00002080  8fc10004	lw	r1,4(r30)
 1485  00002084          	L109_LF2:
 1486  00002084  08000004	j	L108_LF2
 1487  00002088  54000000	nop; delay slot nop
 1488  0000208c          	L108_LF2:
 1489  0000208c  8fa20000	lw	r2,0(r29)
 1490  00002090  8fa30004	lw	r3,4(r29)
 1491  00002094  8fdffff8	lw	r31,-8(r30)
 1492  00002098  001ee820	add	r29,r0,r30
 1493  0000209c  8fdefffc	lw	r30,-4(r30)
 1494  000020a0  4be00000	jr	r31
 1495  000020a4  54000000	nop
 1496  000020a8          	.endproc _min
 1497  000020a8          	.align 2
 1498  000020a8          	.proc _max
 1499  000020a8          	.global _max
 1500  000020a8          	_max:
 1501                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1502  000020a8  afbefffc	sw	-4(r29),r30; push fp
 1503  000020ac  001df020	add	r30,r0,r29; fp = sp
 1504  000020b0  afbffff8	sw	-8(r29),r31; push ret addr
 1505  000020b4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1506  000020b8  afa20000	sw	0(r29),r2
 1507  000020bc  afa30004	sw	4(r29),r3
 1508  000020c0  8fc10000	lw	r1,(r30)
 1509  000020c4  8fc20004	lw	r2,4(r30)
 1510  000020c8  0022182d	sge	r3,r1,r2
 1511  000020cc  14600008	bnez	r3,L111_LF2
 1512  000020d0  54000000	nop; delay slot nop
 1513  000020d4  8fc10004	lw	r1,4(r30)
 1514  000020d8          	L111_LF2:
 1515  000020d8  08000004	j	L110_LF2
 1516  000020dc  54000000	nop; delay slot nop
 1517  000020e0          	L110_LF2:
 1518  000020e0  8fa20000	lw	r2,0(r29)
 1519  000020e4  8fa30004	lw	r3,4(r29)
 1520  000020e8  8fdffff8	lw	r31,-8(r30)
 1521  000020ec  001ee820	add	r29,r0,r30
 1522  000020f0  8fdefffc	lw	r30,-4(r30)
 1523  000020f4  4be00000	jr	r31
 1524  000020f8  54000000	nop
 1525  000020fc          	.endproc _max
 1526                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1527                      ;;;
 1528                      ;;; Most of the traps are called in files from libtraps.
 1531  000020fc          	.align 2
 1532  000020fc          	.proc _exit
 1533  000020fc          	.global _exit
 1534  000020fc          	_exit:
 1535  000020fc  44000300	trap	#0x300
 1536  00002100  4be00000	jr	r31
 1537  00002104  54000000	nop
 1538  00002108          	.endproc _exit
 1540                      ; for the benefit of gcc.
 1541  00002108          	.proc ___main
 1542  00002108          	.global ___main
 1543  00002108          	___main:
 1544  00002108  4be00000	jr	r31
 1545  0000210c  54000000	nop
 1546  00002110          	.endproc ___main
 1547  00002110          	.text
 1548  00002110          	.global _etext
 1549  00002110          	_etext:
 1550  00002110          	.align 3
 1551  00002110          	.data
 1552  000030a9          	.global _edata
 1553  000030a9          	_edata:
